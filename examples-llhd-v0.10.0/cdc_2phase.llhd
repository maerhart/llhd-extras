proc %cdc_2phase_src.param3.always_ff.287.3 (i1$ %rst_ni, i1$ %clk_i, i32$ %data_i, i1$ %valid_i, i1$ %ready_o) -> (i1$ %req_src_q, i32$ %data_src_q) {
init:
    %clk_i.prb = prb i1$ %clk_i
    %rst_ni.prb = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %clk_i.prb1 = prb i1$ %clk_i
    %0 = const i1 0
    %1 = eq i1 %clk_i.prb, %0
    %2 = neq i1 %clk_i.prb1, %0
    %posedge = and i1 %1, %2
    %rst_ni.prb1 = prb i1$ %rst_ni
    %3 = neq i1 %rst_ni.prb, %0
    %4 = eq i1 %rst_ni.prb1, %0
    %negedge = and i1 %4, %3
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %5 = neq i1 %rst_ni.prb1, %0
    %6 = not i1 %5
    %7 = neq i1 %6, %0
    %8 = const time 0s 1d
    br %7, %if_false, %if_true
if_true:
    drv i1$ %req_src_q, %0, %8
    %9 = const i32 0
    drv i32$ %data_src_q, %9, %8
    br %init
if_false:
    %valid_i.prb = prb i1$ %valid_i
    %10 = neq i1 %valid_i.prb, %0
    %ready_o.prb = prb i1$ %ready_o
    %11 = neq i1 %ready_o.prb, %0
    %12 = and i1 %10, %11
    %13 = neq i1 %12, %0
    br %13, %init, %if_true1
if_true1:
    %req_src_q.prb = prb i1$ %req_src_q
    %14 = not i1 %req_src_q.prb
    drv i1$ %req_src_q, %14, %8
    %data_i.prb = prb i32$ %data_i
    drv i32$ %data_src_q, %data_i.prb, %8
    br %init
}

proc %cdc_2phase_src.param3.always_ff.348.3 (i1$ %rst_ni, i1$ %clk_i, i1$ %async_ack_i) -> (i1$ %ack_src_q, i1$ %ack_q) {
init:
    %clk_i.prb = prb i1$ %clk_i
    %rst_ni.prb = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %clk_i.prb1 = prb i1$ %clk_i
    %0 = const i1 0
    %1 = eq i1 %clk_i.prb, %0
    %2 = neq i1 %clk_i.prb1, %0
    %posedge = and i1 %1, %2
    %rst_ni.prb1 = prb i1$ %rst_ni
    %3 = neq i1 %rst_ni.prb, %0
    %4 = eq i1 %rst_ni.prb1, %0
    %negedge = and i1 %4, %3
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %5 = neq i1 %rst_ni.prb1, %0
    %6 = not i1 %5
    %7 = neq i1 %6, %0
    %8 = const time 0s 1d
    br %7, %if_false, %if_true
if_true:
    drv i1$ %ack_src_q, %0, %8
    drv i1$ %ack_q, %0, %8
    br %init
if_false:
    %async_ack_i.prb = prb i1$ %async_ack_i
    drv i1$ %ack_src_q, %async_ack_i.prb, %8
    %ack_src_q.prb = prb i1$ %ack_src_q
    drv i1$ %ack_q, %ack_src_q.prb, %8
    br %init
}

entity @cdc_2phase_src.param3 (i1$ %rst_ni, i1$ %clk_i, i32$ %data_i, i1$ %valid_i, i1$ %async_ack_i) -> (i1$ %ready_o, i1$ %async_req_o, i32$ %async_data_o) {
    %0 = const i1 0
    %req_src_q = sig i1 %0
    %ack_src_q = sig i1 %0
    %ack_q = sig i1 %0
    %1 = const i32 0
    %data_src_q = sig i32 %1
    %req_src_q.prb = prb i1$ %req_src_q
    %ack_q.prb = prb i1$ %ack_q
    %2 = eq i1 %req_src_q.prb, %ack_q.prb
    %3 = const time 0s 1e
    drv i1$ %ready_o, %2, %3
    drv i1$ %async_req_o, %req_src_q.prb, %3
    %data_src_q.prb = prb i32$ %data_src_q
    drv i32$ %async_data_o, %data_src_q.prb, %3
    inst %cdc_2phase_src.param3.always_ff.287.3 (i1$ %rst_ni, i1$ %clk_i, i32$ %data_i, i1$ %valid_i, i1$ %ready_o) -> (i1$ %req_src_q, i32$ %data_src_q)
    inst %cdc_2phase_src.param3.always_ff.348.3 (i1$ %rst_ni, i1$ %clk_i, i1$ %async_ack_i) -> (i1$ %ack_src_q, i1$ %ack_q)
}

proc %cdc_2phase_dst.param5.always_ff.483.5 (i1$ %rst_ni, i1$ %clk_i, i1$ %valid_o, i1$ %ready_i) -> (i1$ %ack_dst_q) {
init:
    %clk_i.prb = prb i1$ %clk_i
    %rst_ni.prb = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %clk_i.prb1 = prb i1$ %clk_i
    %0 = const i1 0
    %1 = eq i1 %clk_i.prb, %0
    %2 = neq i1 %clk_i.prb1, %0
    %posedge = and i1 %1, %2
    %rst_ni.prb1 = prb i1$ %rst_ni
    %3 = neq i1 %rst_ni.prb, %0
    %4 = eq i1 %rst_ni.prb1, %0
    %negedge = and i1 %4, %3
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %5 = neq i1 %rst_ni.prb1, %0
    %6 = not i1 %5
    %7 = neq i1 %6, %0
    %8 = const time 0s 1d
    br %7, %if_false, %if_true
if_true:
    drv i1$ %ack_dst_q, %0, %8
    br %init
if_false:
    %valid_o.prb = prb i1$ %valid_o
    %9 = neq i1 %valid_o.prb, %0
    %ready_i.prb = prb i1$ %ready_i
    %10 = neq i1 %ready_i.prb, %0
    %11 = and i1 %9, %10
    %12 = neq i1 %11, %0
    br %12, %init, %if_true1
if_true1:
    %ack_dst_q.prb = prb i1$ %ack_dst_q
    %13 = not i1 %ack_dst_q.prb
    drv i1$ %ack_dst_q, %13, %8
    br %init
}

proc %cdc_2phase_dst.param5.always_ff.535.5 (i1$ %rst_ni, i1$ %clk_i, i1$ %valid_o, i32$ %async_data_i, i1$ %req_q0, i1$ %req_q1) -> (i32$ %data_dst_q) {
init:
    %clk_i.prb = prb i1$ %clk_i
    %rst_ni.prb = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %clk_i.prb1 = prb i1$ %clk_i
    %0 = const i1 0
    %1 = eq i1 %clk_i.prb, %0
    %2 = neq i1 %clk_i.prb1, %0
    %posedge = and i1 %1, %2
    %rst_ni.prb1 = prb i1$ %rst_ni
    %3 = neq i1 %rst_ni.prb, %0
    %4 = eq i1 %rst_ni.prb1, %0
    %negedge = and i1 %4, %3
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %5 = neq i1 %rst_ni.prb1, %0
    %6 = not i1 %5
    %7 = neq i1 %6, %0
    %8 = const time 0s 1d
    br %7, %if_false, %if_true
if_true:
    %9 = const i32 0
    drv i32$ %data_dst_q, %9, %8
    br %init
if_false:
    %req_q0.prb = prb i1$ %req_q0
    %req_q1.prb = prb i1$ %req_q1
    %10 = neq i1 %req_q0.prb, %req_q1.prb
    %11 = neq i1 %10, %0
    %valid_o.prb = prb i1$ %valid_o
    %12 = neq i1 %valid_o.prb, %0
    %13 = not i1 %12
    %14 = neq i1 %13, %0
    %15 = and i1 %11, %14
    %16 = neq i1 %15, %0
    br %16, %init, %if_true1
if_true1:
    %async_data_i.prb = prb i32$ %async_data_i
    drv i32$ %data_dst_q, %async_data_i.prb, %8
    br %init
}

proc %cdc_2phase_dst.param5.always_ff.618.5 (i1$ %rst_ni, i1$ %clk_i, i1$ %async_req_i) -> (i1$ %req_dst_q, i1$ %req_q0, i1$ %req_q1) {
init:
    %clk_i.prb = prb i1$ %clk_i
    %rst_ni.prb = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %clk_i.prb1 = prb i1$ %clk_i
    %0 = const i1 0
    %1 = eq i1 %clk_i.prb, %0
    %2 = neq i1 %clk_i.prb1, %0
    %posedge = and i1 %1, %2
    %rst_ni.prb1 = prb i1$ %rst_ni
    %3 = neq i1 %rst_ni.prb, %0
    %4 = eq i1 %rst_ni.prb1, %0
    %negedge = and i1 %4, %3
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %5 = neq i1 %rst_ni.prb1, %0
    %6 = not i1 %5
    %7 = neq i1 %6, %0
    %8 = const time 0s 1d
    br %7, %if_false, %if_true
if_true:
    drv i1$ %req_dst_q, %0, %8
    drv i1$ %req_q0, %0, %8
    drv i1$ %req_q1, %0, %8
    br %init
if_false:
    %async_req_i.prb = prb i1$ %async_req_i
    drv i1$ %req_dst_q, %async_req_i.prb, %8
    %req_dst_q.prb = prb i1$ %req_dst_q
    drv i1$ %req_q0, %req_dst_q.prb, %8
    %req_q0.prb = prb i1$ %req_q0
    drv i1$ %req_q1, %req_q0.prb, %8
    br %init
}

entity @cdc_2phase_dst.param5 (i1$ %rst_ni, i1$ %clk_i, i1$ %ready_i, i1$ %async_req_i, i32$ %async_data_i) -> (i32$ %data_o, i1$ %valid_o, i1$ %async_ack_o) {
    %0 = const i1 0
    %req_dst_q = sig i1 %0
    %req_q0 = sig i1 %0
    %req_q1 = sig i1 %0
    %ack_dst_q = sig i1 %0
    %1 = const i32 0
    %data_dst_q = sig i32 %1
    %ack_dst_q.prb = prb i1$ %ack_dst_q
    %req_q1.prb = prb i1$ %req_q1
    %2 = neq i1 %ack_dst_q.prb, %req_q1.prb
    %3 = const time 0s 1e
    drv i1$ %valid_o, %2, %3
    %data_dst_q.prb = prb i32$ %data_dst_q
    drv i32$ %data_o, %data_dst_q.prb, %3
    drv i1$ %async_ack_o, %ack_dst_q.prb, %3
    inst %cdc_2phase_dst.param5.always_ff.483.5 (i1$ %rst_ni, i1$ %clk_i, i1$ %valid_o, i1$ %ready_i) -> (i1$ %ack_dst_q)
    inst %cdc_2phase_dst.param5.always_ff.535.5 (i1$ %rst_ni, i1$ %clk_i, i1$ %valid_o, i32$ %async_data_i, i1$ %req_q0, i1$ %req_q1) -> (i32$ %data_dst_q)
    inst %cdc_2phase_dst.param5.always_ff.618.5 (i1$ %rst_ni, i1$ %clk_i, i1$ %async_req_i) -> (i1$ %req_dst_q, i1$ %req_q0, i1$ %req_q1)
}

entity @cdc_2phase.param1 (i1$ %src_rst_ni, i1$ %src_clk_i, i32$ %src_data_i, i1$ %src_valid_i, i1$ %dst_rst_ni, i1$ %dst_clk_i, i1$ %dst_ready_i) -> (i1$ %src_ready_o, i32$ %dst_data_o, i1$ %dst_valid_o) {
    %0 = const i1 0
    %async_req = sig i1 %0
    %async_ack = sig i1 %0
    %1 = const i32 0
    %async_data = sig i32 %1
    %src_rst_ni.prb = prb i1$ %src_rst_ni
    %2 = sig i1 %0
    %3 = const time 0s 1e
    drv i1$ %2, %src_rst_ni.prb, %3
    %src_clk_i.prb = prb i1$ %src_clk_i
    %4 = sig i1 %0
    drv i1$ %4, %src_clk_i.prb, %3
    %src_data_i.prb = prb i32$ %src_data_i
    %5 = sig i32 %1
    drv i32$ %5, %src_data_i.prb, %3
    %src_valid_i.prb = prb i1$ %src_valid_i
    %6 = sig i1 %0
    drv i1$ %6, %src_valid_i.prb, %3
    %async_ack.prb = prb i1$ %async_ack
    %7 = sig i1 %0
    drv i1$ %7, %async_ack.prb, %3
    inst @cdc_2phase_src.param3 (i1$ %2, i1$ %4, i32$ %5, i1$ %6, i1$ %7) -> (i1$ %src_ready_o, i1$ %async_req, i32$ %async_data)
    %dst_rst_ni.prb = prb i1$ %dst_rst_ni
    %8 = sig i1 %0
    drv i1$ %8, %dst_rst_ni.prb, %3
    %dst_clk_i.prb = prb i1$ %dst_clk_i
    %9 = sig i1 %0
    drv i1$ %9, %dst_clk_i.prb, %3
    %dst_ready_i.prb = prb i1$ %dst_ready_i
    %10 = sig i1 %0
    drv i1$ %10, %dst_ready_i.prb, %3
    %async_req.prb = prb i1$ %async_req
    %11 = sig i1 %0
    drv i1$ %11, %async_req.prb, %3
    %async_data.prb = prb i32$ %async_data
    %12 = sig i32 %1
    drv i32$ %12, %async_data.prb, %3
    inst @cdc_2phase_dst.param5 (i1$ %8, i1$ %9, i1$ %10, i1$ %11, i32$ %12) -> (i32$ %dst_data_o, i1$ %dst_valid_o, i1$ %async_ack)
}

proc %cdc_2phase_tb.initial.903.0 (i1$ %src_ready_o) -> (i1$ %src_rst_ni, i1$ %src_clk_i, i32$ %src_data_i, i1$ %src_valid_i) {
0:
    %1 = const i1 0
    %2 = const time 0s 1e
    drv i1$ %src_rst_ni, %1, %2
    %3 = const time 1ns
    wait %4 for %3
4:
    %5 = const i1 1
    %6 = const time 0s 1e
    drv i1$ %src_rst_ni, %5, %6
    %7 = const time 1ns
    wait %8 for %7
8:
    %9 = const i32 0
    br %loop_body
loop_body:
    %i.ld = phi i32 [%9, %8], [%10, %11]
    %12 = const i32 500000
    %13 = slt i32 %i.ld, %12
    br %13, %loop_exit, %loop_body1
loop_exit:
    halt
loop_body1:
    %src_ready_o.prb = prb i1$ %src_ready_o
    %14 = const i1 0
    %15 = neq i1 %src_ready_o.prb, %14
    %16 = not i1 %15
    %17 = neq i1 %16, %14
    %18 = const i1 1
    %19 = const time 0s 1e
    %20 = const time 1ns
    br %17, %loop_exit1, %loop_continue
loop_exit1:
    drv i1$ %src_clk_i, %18, %19
    drv i32$ %src_data_i, %i.ld, %19
    drv i1$ %src_valid_i, %18, %19
    wait %21 for %20
loop_continue:
    drv i1$ %src_clk_i, %18, %19
    wait %22 for %20
22:
    %23 = const i1 0
    %24 = const time 0s 1e
    drv i1$ %src_clk_i, %23, %24
    %25 = const time 1ns
    wait %26 for %25
26:
    br %loop_body1
21:
    %27 = const i1 0
    %28 = const time 0s 1e
    drv i1$ %src_clk_i, %27, %28
    %29 = const time 1ns
    wait %11 for %29
11:
    %30 = const i32 1
    %10 = add i32 %i.ld, %30
    br %loop_body
}

proc %cdc_2phase_tb.initial.1048.0 (i32$ %dst_data_o, i1$ %dst_valid_o) -> (i32$ %ERRORS, i1$ %dst_rst_ni, i1$ %dst_clk_i, i1$ %dst_ready_i) {
0:
    %1 = const i1 0
    %2 = const time 0s 1e
    drv i1$ %dst_rst_ni, %1, %2
    %3 = const time 1ns
    wait %4 for %3
4:
    %5 = const i1 1
    %6 = const time 0s 1e
    drv i1$ %dst_rst_ni, %5, %6
    %7 = const time 1ns
    wait %8 for %7
8:
    %9 = const i1 1
    %10 = const time 0s 1e
    drv i1$ %dst_ready_i, %9, %10
    %11 = const i32 0
    br %loop_body
loop_body:
    %i.ld = phi i32 [%12, %13], [%11, %8]
    %14 = const i32 500000
    %15 = slt i32 %i.ld, %14
    br %15, %loop_exit, %loop_body1
loop_exit:
    halt
loop_body1:
    %dst_valid_o.prb = prb i1$ %dst_valid_o
    %16 = const i1 0
    %17 = neq i1 %dst_valid_o.prb, %16
    %18 = not i1 %17
    %19 = neq i1 %18, %16
    %20 = const i1 1
    %21 = const time 0s 1e
    %22 = const time 1ns
    br %19, %loop_exit1, %loop_continue
loop_exit1:
    drv i1$ %dst_clk_i, %20, %21
    %23 = const i32 0
    %dst_data_o.prb = prb i32$ %dst_data_o
    %24 = neq i32 %i.ld, %dst_data_o.prb
    %zext = inss i32 %23, i1 %24, 0, 1
    %ERRORS.prb = prb i32$ %ERRORS
    %25 = add i32 %ERRORS.prb, %zext
    drv i32$ %ERRORS, %25, %21
    wait %26 for %22
loop_continue:
    drv i1$ %dst_clk_i, %20, %21
    wait %27 for %22
27:
    %28 = const i1 0
    %29 = const time 0s 1e
    drv i1$ %dst_clk_i, %28, %29
    %30 = const time 1ns
    wait %31 for %30
31:
    br %loop_body1
26:
    %32 = const i1 0
    %33 = const time 0s 1e
    drv i1$ %dst_clk_i, %32, %33
    %34 = const time 1ns
    wait %13 for %34
13:
    %35 = const i32 1
    %12 = add i32 %i.ld, %35
    br %loop_body
}

entity @cdc_2phase_tb () -> () {
    %0 = const i32 0
    %ERRORS = sig i32 %0
    %1 = const i1 1
    %src_rst_ni = sig i1 %1
    %2 = const i1 0
    %src_clk_i = sig i1 %2
    %src_data_i = sig i32 %0
    %src_valid_i = sig i1 %2
    %src_ready_o = sig i1 %2
    %dst_rst_ni = sig i1 %1
    %dst_clk_i = sig i1 %2
    %dst_data_o = sig i32 %0
    %dst_valid_o = sig i1 %2
    %dst_ready_i = sig i1 %2
    %src_rst_ni.prb = prb i1$ %src_rst_ni
    %3 = sig i1 %2
    %4 = const time 0s 1e
    drv i1$ %3, %src_rst_ni.prb, %4
    %src_clk_i.prb = prb i1$ %src_clk_i
    %5 = sig i1 %2
    drv i1$ %5, %src_clk_i.prb, %4
    %src_data_i.prb = prb i32$ %src_data_i
    %6 = sig i32 %0
    drv i32$ %6, %src_data_i.prb, %4
    %src_valid_i.prb = prb i1$ %src_valid_i
    %7 = sig i1 %2
    drv i1$ %7, %src_valid_i.prb, %4
    %dst_rst_ni.prb = prb i1$ %dst_rst_ni
    %8 = sig i1 %2
    drv i1$ %8, %dst_rst_ni.prb, %4
    %dst_clk_i.prb = prb i1$ %dst_clk_i
    %9 = sig i1 %2
    drv i1$ %9, %dst_clk_i.prb, %4
    %dst_ready_i.prb = prb i1$ %dst_ready_i
    %10 = sig i1 %2
    drv i1$ %10, %dst_ready_i.prb, %4
    inst @cdc_2phase.param1 (i1$ %3, i1$ %5, i32$ %6, i1$ %7, i1$ %8, i1$ %9, i1$ %10) -> (i1$ %src_ready_o, i32$ %dst_data_o, i1$ %dst_valid_o)
    inst %cdc_2phase_tb.initial.903.0 (i1$ %src_ready_o) -> (i1$ %src_rst_ni, i1$ %src_clk_i, i32$ %src_data_i, i1$ %src_valid_i)
    inst %cdc_2phase_tb.initial.1048.0 (i32$ %dst_data_o, i1$ %dst_valid_o) -> (i32$ %ERRORS, i1$ %dst_rst_ni, i1$ %dst_clk_i, i1$ %dst_ready_i)
}
