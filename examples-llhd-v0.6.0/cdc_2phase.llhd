proc %cdc_2phase_src.param2.always_ff.331.2 (i1$ %rst_ni, i1$ %clk_i, i32$ %data_i, i1$ %valid_i, i1$ %ready_o, i1$ %req_src_q) -> (i1$ %req_src_q1, i32$ %data_src_q) {
0:
    %1 = prb i1$ %req_src_q1
    %req_src_q.shadow = var i1 %1
    br %init
init:
    %clk_i1 = prb i1$ %clk_i
    %rst_ni1 = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %2 = prb i1$ %req_src_q1
    st i1* %req_src_q.shadow, %2
    %clk_i2 = prb i1$ %clk_i
    %3 = const i1 0
    %4 = eq i1 %clk_i1, %3
    %5 = neq i1 %clk_i2, %3
    %posedge = and i1 %4, %5
    %rst_ni2 = prb i1$ %rst_ni
    %6 = const i1 0
    %7 = neq i1 %rst_ni1, %6
    %8 = eq i1 %rst_ni2, %6
    %negedge = and i1 %8, %7
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %rst_ni3 = prb i1$ %rst_ni
    %9 = not i1 %rst_ni3
    br %9, %if_false, %if_true
if_true:
    %10 = const i32 0
    %11 = exts i1, i32 %10, 0, 1
    %12 = const time 0s 1d
    drv i1$ %req_src_q1, %11, %12
    %13 = const i32 0
    %14 = const i1 0
    %15 = inss i32 %13, i1 %14, 0, 1
    %16 = const time 0s 1d
    drv i32$ %data_src_q, %15, %16
    br %if_exit
if_false:
    %valid_i1 = prb i1$ %valid_i
    %ready_o1 = prb i1$ %ready_o
    %17 = and i1 %valid_i1, %ready_o1
    br %17, %if_false1, %if_true1
if_exit:
    br %0
if_true1:
    %req_src_q2 = ld i1* %req_src_q.shadow
    %18 = not i1 %req_src_q2
    %19 = const time 0s 1d
    drv i1$ %req_src_q1, %18, %19
    %data_i1 = prb i32$ %data_i
    %20 = const time 0s 1d
    drv i32$ %data_src_q, %data_i1, %20
    br %if_exit1
if_false1:
    br %if_exit1
if_exit1:
    br %if_exit
}

proc %cdc_2phase_src.param2.always_ff.332.2 (i1$ %rst_ni, i1$ %clk_i, i1$ %async_ack_i, i1$ %ack_src_q) -> (i1$ %ack_src_q1, i1$ %ack_q) {
0:
    %1 = prb i1$ %ack_src_q1
    %ack_src_q.shadow = var i1 %1
    br %init
init:
    %clk_i1 = prb i1$ %clk_i
    %rst_ni1 = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %2 = prb i1$ %ack_src_q1
    st i1* %ack_src_q.shadow, %2
    %clk_i2 = prb i1$ %clk_i
    %3 = const i1 0
    %4 = eq i1 %clk_i1, %3
    %5 = neq i1 %clk_i2, %3
    %posedge = and i1 %4, %5
    %rst_ni2 = prb i1$ %rst_ni
    %6 = const i1 0
    %7 = neq i1 %rst_ni1, %6
    %8 = eq i1 %rst_ni2, %6
    %negedge = and i1 %8, %7
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %rst_ni3 = prb i1$ %rst_ni
    %9 = not i1 %rst_ni3
    br %9, %if_false, %if_true
if_true:
    %10 = const i32 0
    %11 = exts i1, i32 %10, 0, 1
    %12 = const time 0s 1d
    drv i1$ %ack_src_q1, %11, %12
    %13 = const i32 0
    %14 = exts i1, i32 %13, 0, 1
    %15 = const time 0s 1d
    drv i1$ %ack_q, %14, %15
    br %if_exit
if_false:
    %async_ack_i1 = prb i1$ %async_ack_i
    %16 = const time 0s 1d
    drv i1$ %ack_src_q1, %async_ack_i1, %16
    %ack_src_q2 = ld i1* %ack_src_q.shadow
    %17 = const time 0s 1d
    drv i1$ %ack_q, %ack_src_q2, %17
    br %if_exit
if_exit:
    br %0
}

entity @cdc_2phase_src.param2 (i1$ %rst_ni, i1$ %clk_i, i32$ %data_i, i1$ %valid_i, i1$ %async_ack_i) -> (i1$ %ready_o, i1$ %async_req_o, i32$ %async_data_o) {
    %0 = const i1 0
    %req_src_q = sig i1 %0
    %1 = const i1 0
    %ack_src_q = sig i1 %1
    %2 = const i1 0
    %ack_q = sig i1 %2
    %3 = const i32 0
    %data_src_q = sig i32 %3
    %req_src_q1 = prb i1$ %req_src_q
    %ack_q1 = prb i1$ %ack_q
    %4 = eq i1 %req_src_q1, %ack_q1
    %5 = const time 0s 1e
    drv i1$ %ready_o, %4, %5
    %req_src_q2 = prb i1$ %req_src_q
    %6 = const time 0s 1e
    drv i1$ %async_req_o, %req_src_q2, %6
    %data_src_q1 = prb i32$ %data_src_q
    %7 = const time 0s 1e
    drv i32$ %async_data_o, %data_src_q1, %7
    inst %cdc_2phase_src.param2.always_ff.331.2 (i1$ %rst_ni, i1$ %clk_i, i32$ %data_i, i1$ %valid_i, i1$ %ready_o, i1$ %req_src_q) -> (i1$ %req_src_q, i32$ %data_src_q)
    inst %cdc_2phase_src.param2.always_ff.332.2 (i1$ %rst_ni, i1$ %clk_i, i1$ %async_ack_i, i1$ %ack_src_q) -> (i1$ %ack_src_q, i1$ %ack_q)
}

proc %cdc_2phase_dst.param3.always_ff.491.3 (i1$ %rst_ni, i1$ %clk_i, i1$ %valid_o, i1$ %ready_i, i1$ %ack_dst_q) -> (i1$ %ack_dst_q1) {
0:
    %1 = prb i1$ %ack_dst_q1
    %ack_dst_q.shadow = var i1 %1
    br %init
init:
    %clk_i1 = prb i1$ %clk_i
    %rst_ni1 = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %2 = prb i1$ %ack_dst_q1
    st i1* %ack_dst_q.shadow, %2
    %clk_i2 = prb i1$ %clk_i
    %3 = const i1 0
    %4 = eq i1 %clk_i1, %3
    %5 = neq i1 %clk_i2, %3
    %posedge = and i1 %4, %5
    %rst_ni2 = prb i1$ %rst_ni
    %6 = const i1 0
    %7 = neq i1 %rst_ni1, %6
    %8 = eq i1 %rst_ni2, %6
    %negedge = and i1 %8, %7
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %rst_ni3 = prb i1$ %rst_ni
    %9 = not i1 %rst_ni3
    br %9, %if_false, %if_true
if_true:
    %10 = const i32 0
    %11 = exts i1, i32 %10, 0, 1
    %12 = const time 0s 1d
    drv i1$ %ack_dst_q1, %11, %12
    br %if_exit
if_false:
    %valid_o1 = prb i1$ %valid_o
    %ready_i1 = prb i1$ %ready_i
    %13 = and i1 %valid_o1, %ready_i1
    br %13, %if_false1, %if_true1
if_exit:
    br %0
if_true1:
    %ack_dst_q2 = ld i1* %ack_dst_q.shadow
    %14 = not i1 %ack_dst_q2
    %15 = const time 0s 1d
    drv i1$ %ack_dst_q1, %14, %15
    br %if_exit1
if_false1:
    br %if_exit1
if_exit1:
    br %if_exit
}

proc %cdc_2phase_dst.param3.always_ff.492.3 (i1$ %rst_ni, i1$ %clk_i, i1$ %valid_o, i32$ %async_data_i, i1$ %req_q0, i1$ %req_q1) -> (i32$ %data_dst_q) {
0:
    br %init
init:
    %clk_i1 = prb i1$ %clk_i
    %rst_ni1 = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %clk_i2 = prb i1$ %clk_i
    %1 = const i1 0
    %2 = eq i1 %clk_i1, %1
    %3 = neq i1 %clk_i2, %1
    %posedge = and i1 %2, %3
    %rst_ni2 = prb i1$ %rst_ni
    %4 = const i1 0
    %5 = neq i1 %rst_ni1, %4
    %6 = eq i1 %rst_ni2, %4
    %negedge = and i1 %6, %5
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %rst_ni3 = prb i1$ %rst_ni
    %7 = not i1 %rst_ni3
    br %7, %if_false, %if_true
if_true:
    %8 = const i32 0
    %9 = const i1 0
    %10 = inss i32 %8, i1 %9, 0, 1
    %11 = const time 0s 1d
    drv i32$ %data_dst_q, %10, %11
    br %if_exit
if_false:
    %req_q01 = prb i1$ %req_q0
    %req_q11 = prb i1$ %req_q1
    %12 = neq i1 %req_q01, %req_q11
    %valid_o1 = prb i1$ %valid_o
    %13 = not i1 %valid_o1
    %14 = and i1 %12, %13
    br %14, %if_false1, %if_true1
if_exit:
    br %0
if_true1:
    %async_data_i1 = prb i32$ %async_data_i
    %15 = const time 0s 1d
    drv i32$ %data_dst_q, %async_data_i1, %15
    br %if_exit1
if_false1:
    br %if_exit1
if_exit1:
    br %if_exit
}

proc %cdc_2phase_dst.param3.always_ff.493.3 (i1$ %rst_ni, i1$ %clk_i, i1$ %async_req_i, i1$ %req_dst_q, i1$ %req_q0) -> (i1$ %req_dst_q1, i1$ %req_q01, i1$ %req_q1) {
0:
    %1 = prb i1$ %req_dst_q1
    %req_dst_q.shadow = var i1 %1
    %2 = prb i1$ %req_q01
    %req_q0.shadow = var i1 %2
    br %init
init:
    %clk_i1 = prb i1$ %clk_i
    %rst_ni1 = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %3 = prb i1$ %req_dst_q1
    st i1* %req_dst_q.shadow, %3
    %4 = prb i1$ %req_q01
    st i1* %req_q0.shadow, %4
    %clk_i2 = prb i1$ %clk_i
    %5 = const i1 0
    %6 = eq i1 %clk_i1, %5
    %7 = neq i1 %clk_i2, %5
    %posedge = and i1 %6, %7
    %rst_ni2 = prb i1$ %rst_ni
    %8 = const i1 0
    %9 = neq i1 %rst_ni1, %8
    %10 = eq i1 %rst_ni2, %8
    %negedge = and i1 %10, %9
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %rst_ni3 = prb i1$ %rst_ni
    %11 = not i1 %rst_ni3
    br %11, %if_false, %if_true
if_true:
    %12 = const i32 0
    %13 = exts i1, i32 %12, 0, 1
    %14 = const time 0s 1d
    drv i1$ %req_dst_q1, %13, %14
    %15 = const i32 0
    %16 = exts i1, i32 %15, 0, 1
    %17 = const time 0s 1d
    drv i1$ %req_q01, %16, %17
    %18 = const i32 0
    %19 = exts i1, i32 %18, 0, 1
    %20 = const time 0s 1d
    drv i1$ %req_q1, %19, %20
    br %if_exit
if_false:
    %async_req_i1 = prb i1$ %async_req_i
    %21 = const time 0s 1d
    drv i1$ %req_dst_q1, %async_req_i1, %21
    %req_dst_q2 = ld i1* %req_dst_q.shadow
    %22 = const time 0s 1d
    drv i1$ %req_q01, %req_dst_q2, %22
    %req_q02 = ld i1* %req_q0.shadow
    %23 = const time 0s 1d
    drv i1$ %req_q1, %req_q02, %23
    br %if_exit
if_exit:
    br %0
}

entity @cdc_2phase_dst.param3 (i1$ %rst_ni, i1$ %clk_i, i1$ %ready_i, i1$ %async_req_i, i32$ %async_data_i) -> (i32$ %data_o, i1$ %valid_o, i1$ %async_ack_o) {
    %0 = const i1 0
    %req_dst_q = sig i1 %0
    %1 = const i1 0
    %req_q0 = sig i1 %1
    %2 = const i1 0
    %req_q1 = sig i1 %2
    %3 = const i1 0
    %ack_dst_q = sig i1 %3
    %4 = const i32 0
    %data_dst_q = sig i32 %4
    %ack_dst_q1 = prb i1$ %ack_dst_q
    %req_q11 = prb i1$ %req_q1
    %5 = neq i1 %ack_dst_q1, %req_q11
    %6 = const time 0s 1e
    drv i1$ %valid_o, %5, %6
    %data_dst_q1 = prb i32$ %data_dst_q
    %7 = const time 0s 1e
    drv i32$ %data_o, %data_dst_q1, %7
    %ack_dst_q2 = prb i1$ %ack_dst_q
    %8 = const time 0s 1e
    drv i1$ %async_ack_o, %ack_dst_q2, %8
    inst %cdc_2phase_dst.param3.always_ff.491.3 (i1$ %rst_ni, i1$ %clk_i, i1$ %valid_o, i1$ %ready_i, i1$ %ack_dst_q) -> (i1$ %ack_dst_q)
    inst %cdc_2phase_dst.param3.always_ff.492.3 (i1$ %rst_ni, i1$ %clk_i, i1$ %valid_o, i32$ %async_data_i, i1$ %req_q0, i1$ %req_q1) -> (i32$ %data_dst_q)
    inst %cdc_2phase_dst.param3.always_ff.493.3 (i1$ %rst_ni, i1$ %clk_i, i1$ %async_req_i, i1$ %req_dst_q, i1$ %req_q0) -> (i1$ %req_dst_q, i1$ %req_q0, i1$ %req_q1)
}

entity @cdc_2phase.param1 (i1$ %src_rst_ni, i1$ %src_clk_i, i32$ %src_data_i, i1$ %src_valid_i, i1$ %dst_rst_ni, i1$ %dst_clk_i, i1$ %dst_ready_i) -> (i1$ %src_ready_o, i32$ %dst_data_o, i1$ %dst_valid_o) {
    %0 = const i1 0
    %async_req = sig i1 %0
    %1 = const i1 0
    %async_ack = sig i1 %1
    %2 = const i32 0
    %async_data = sig i32 %2
    %src_rst_ni1 = prb i1$ %src_rst_ni
    %3 = const i1 0
    %4 = sig i1 %3
    %5 = const time 0s 1e
    drv i1$ %4, %src_rst_ni1, %5
    %src_clk_i1 = prb i1$ %src_clk_i
    %6 = const i1 0
    %7 = sig i1 %6
    %8 = const time 0s 1e
    drv i1$ %7, %src_clk_i1, %8
    %src_data_i1 = prb i32$ %src_data_i
    %9 = const i32 0
    %10 = sig i32 %9
    %11 = const time 0s 1e
    drv i32$ %10, %src_data_i1, %11
    %src_valid_i1 = prb i1$ %src_valid_i
    %12 = const i1 0
    %13 = sig i1 %12
    %14 = const time 0s 1e
    drv i1$ %13, %src_valid_i1, %14
    %async_ack1 = prb i1$ %async_ack
    %15 = const i1 0
    %16 = sig i1 %15
    %17 = const time 0s 1e
    drv i1$ %16, %async_ack1, %17
    inst @cdc_2phase_src.param2 (i1$ %4, i1$ %7, i32$ %10, i1$ %13, i1$ %16) -> (i1$ %src_ready_o, i1$ %async_req, i32$ %async_data)
    %dst_rst_ni1 = prb i1$ %dst_rst_ni
    %18 = const i1 0
    %19 = sig i1 %18
    %20 = const time 0s 1e
    drv i1$ %19, %dst_rst_ni1, %20
    %dst_clk_i1 = prb i1$ %dst_clk_i
    %21 = const i1 0
    %22 = sig i1 %21
    %23 = const time 0s 1e
    drv i1$ %22, %dst_clk_i1, %23
    %dst_ready_i1 = prb i1$ %dst_ready_i
    %24 = const i1 0
    %25 = sig i1 %24
    %26 = const time 0s 1e
    drv i1$ %25, %dst_ready_i1, %26
    %async_req1 = prb i1$ %async_req
    %27 = const i1 0
    %28 = sig i1 %27
    %29 = const time 0s 1e
    drv i1$ %28, %async_req1, %29
    %async_data1 = prb i32$ %async_data
    %30 = const i32 0
    %31 = sig i32 %30
    %32 = const time 0s 1e
    drv i32$ %31, %async_data1, %32
    inst @cdc_2phase_dst.param3 (i1$ %19, i1$ %22, i1$ %25, i1$ %28, i32$ %31) -> (i32$ %dst_data_o, i1$ %dst_valid_o, i1$ %async_ack)
}

proc %cdc_2phase_tb.initial.249.0 (i1$ %src_ready_o) -> (i1$ %src_rst_ni, i1$ %src_clk_i, i32$ %src_data_i, i1$ %src_valid_i) {
0:
    %1 = const i32 0
    %2 = exts i1, i32 %1, 0, 1
    %3 = const time 0s 1e
    drv i1$ %src_rst_ni, %2, %3
    %4 = const time 1ns
    wait %5 for %4
5:
    %6 = const i32 1
    %7 = exts i1, i32 %6, 0, 1
    %8 = const time 0s 1e
    drv i1$ %src_rst_ni, %7, %8
    %9 = const time 1ns
    wait %10 for %9
10:
    %11 = const i32 0
    %i = var i32 %11
    br %loop_body
loop_body:
    %i1 = ld i32* %i
    %12 = const i32 500000
    %13 = slt i32 %i1, %12
    br %13, %loop_exit, %loop_continue
loop_exit:
    halt
loop_continue:
    br %loop_body1
loop_body1:
    %src_ready_o1 = prb i1$ %src_ready_o
    %14 = not i1 %src_ready_o1
    br %14, %loop_exit1, %loop_continue1
loop_exit1:
    %15 = const i32 1
    %16 = exts i1, i32 %15, 0, 1
    %17 = const time 0s 1e
    drv i1$ %src_clk_i, %16, %17
    %i2 = ld i32* %i
    %18 = const time 0s 1e
    drv i32$ %src_data_i, %i2, %18
    %19 = const i32 1
    %20 = exts i1, i32 %19, 0, 1
    %21 = const time 0s 1e
    drv i1$ %src_valid_i, %20, %21
    %22 = const time 1ns
    wait %23 for %22
loop_continue1:
    %24 = const i32 1
    %25 = exts i1, i32 %24, 0, 1
    %26 = const time 0s 1e
    drv i1$ %src_clk_i, %25, %26
    %27 = const time 1ns
    wait %28 for %27
28:
    %29 = const i32 0
    %30 = exts i1, i32 %29, 0, 1
    %31 = const time 0s 1e
    drv i1$ %src_clk_i, %30, %31
    %32 = const time 1ns
    wait %33 for %32
33:
    br %loop_body1
23:
    %34 = const i32 0
    %35 = exts i1, i32 %34, 0, 1
    %36 = const time 0s 1e
    drv i1$ %src_clk_i, %35, %36
    %37 = const time 1ns
    wait %38 for %37
38:
    %i3 = ld i32* %i
    %39 = const i32 1
    %40 = add i32 %i3, %39
    st i32* %i, %40
    %i4 = ld i32* %i
    %41 = const i32 1
    %42 = add i32 %i4, %41
    %43 = const i32 0
    %44 = neq i32 %42, %43
    br %loop_body
}

proc %cdc_2phase_tb.initial.250.0 (i32$ %dst_data_o, i1$ %dst_valid_o) -> (i32$ %ERRORS, i1$ %dst_rst_ni, i1$ %dst_clk_i, i1$ %dst_ready_i) {
0:
    %1 = const i32 0
    %2 = exts i1, i32 %1, 0, 1
    %3 = const time 0s 1e
    drv i1$ %dst_rst_ni, %2, %3
    %4 = const time 1ns
    wait %5 for %4
5:
    %6 = const i32 1
    %7 = exts i1, i32 %6, 0, 1
    %8 = const time 0s 1e
    drv i1$ %dst_rst_ni, %7, %8
    %9 = const time 1ns
    wait %10 for %9
10:
    %11 = const i32 1
    %12 = exts i1, i32 %11, 0, 1
    %13 = const time 0s 1e
    drv i1$ %dst_ready_i, %12, %13
    %14 = const i32 0
    %i = var i32 %14
    br %loop_body
loop_body:
    %i1 = ld i32* %i
    %15 = const i32 500000
    %16 = slt i32 %i1, %15
    br %16, %loop_exit, %loop_continue
loop_exit:
    halt
loop_continue:
    br %loop_body1
loop_body1:
    %dst_valid_o1 = prb i1$ %dst_valid_o
    %17 = not i1 %dst_valid_o1
    br %17, %loop_exit1, %loop_continue1
loop_exit1:
    %18 = const i32 1
    %19 = exts i1, i32 %18, 0, 1
    %20 = const time 0s 1e
    drv i1$ %dst_clk_i, %19, %20
    %21 = const i32 0
    %i2 = ld i32* %i
    %dst_data_o1 = prb i32$ %dst_data_o
    %22 = neq i32 %i2, %dst_data_o1
    %23 = inss i32 %21, i1 %22, 0, 1
    %ERRORS1 = prb i32$ %ERRORS
    %24 = add i32 %ERRORS1, %23
    %25 = const time 0s 1e
    drv i32$ %ERRORS, %24, %25
    %26 = const time 1ns
    wait %27 for %26
loop_continue1:
    %28 = const i32 1
    %29 = exts i1, i32 %28, 0, 1
    %30 = const time 0s 1e
    drv i1$ %dst_clk_i, %29, %30
    %31 = const time 1ns
    wait %32 for %31
32:
    %33 = const i32 0
    %34 = exts i1, i32 %33, 0, 1
    %35 = const time 0s 1e
    drv i1$ %dst_clk_i, %34, %35
    %36 = const time 1ns
    wait %37 for %36
37:
    br %loop_body1
27:
    %38 = const i32 0
    %39 = exts i1, i32 %38, 0, 1
    %40 = const time 0s 1e
    drv i1$ %dst_clk_i, %39, %40
    %41 = const time 1ns
    wait %42 for %41
42:
    %i3 = ld i32* %i
    %43 = const i32 1
    %44 = add i32 %i3, %43
    st i32* %i, %44
    %i4 = ld i32* %i
    %45 = const i32 1
    %46 = add i32 %i4, %45
    %47 = const i32 0
    %48 = neq i32 %46, %47
    br %loop_body
}

entity @cdc_2phase_tb () -> () {
    %0 = const i32 0
    %ERRORS = sig i32 %0
    %1 = const i1 1
    %src_rst_ni = sig i1 %1
    %2 = const i1 0
    %src_clk_i = sig i1 %2
    %3 = const i32 0
    %src_data_i = sig i32 %3
    %4 = const i1 0
    %src_valid_i = sig i1 %4
    %5 = const i1 0
    %src_ready_o = sig i1 %5
    %6 = const i1 1
    %dst_rst_ni = sig i1 %6
    %7 = const i1 0
    %dst_clk_i = sig i1 %7
    %8 = const i32 0
    %dst_data_o = sig i32 %8
    %9 = const i1 0
    %dst_valid_o = sig i1 %9
    %10 = const i1 0
    %dst_ready_i = sig i1 %10
    %src_rst_ni1 = prb i1$ %src_rst_ni
    %11 = const i1 0
    %12 = sig i1 %11
    %13 = const time 0s 1e
    drv i1$ %12, %src_rst_ni1, %13
    %src_clk_i1 = prb i1$ %src_clk_i
    %14 = const i1 0
    %15 = sig i1 %14
    %16 = const time 0s 1e
    drv i1$ %15, %src_clk_i1, %16
    %src_data_i1 = prb i32$ %src_data_i
    %17 = const i32 0
    %18 = sig i32 %17
    %19 = const time 0s 1e
    drv i32$ %18, %src_data_i1, %19
    %src_valid_i1 = prb i1$ %src_valid_i
    %20 = const i1 0
    %21 = sig i1 %20
    %22 = const time 0s 1e
    drv i1$ %21, %src_valid_i1, %22
    %dst_rst_ni1 = prb i1$ %dst_rst_ni
    %23 = const i1 0
    %24 = sig i1 %23
    %25 = const time 0s 1e
    drv i1$ %24, %dst_rst_ni1, %25
    %dst_clk_i1 = prb i1$ %dst_clk_i
    %26 = const i1 0
    %27 = sig i1 %26
    %28 = const time 0s 1e
    drv i1$ %27, %dst_clk_i1, %28
    %dst_ready_i1 = prb i1$ %dst_ready_i
    %29 = const i1 0
    %30 = sig i1 %29
    %31 = const time 0s 1e
    drv i1$ %30, %dst_ready_i1, %31
    inst @cdc_2phase.param1 (i1$ %12, i1$ %15, i32$ %18, i1$ %21, i1$ %24, i1$ %27, i1$ %30) -> (i1$ %src_ready_o, i32$ %dst_data_o, i1$ %dst_valid_o)
    inst %cdc_2phase_tb.initial.249.0 (i1$ %src_ready_o) -> (i1$ %src_rst_ni, i1$ %src_clk_i, i32$ %src_data_i, i1$ %src_valid_i)
    inst %cdc_2phase_tb.initial.250.0 (i32$ %dst_data_o, i1$ %dst_valid_o) -> (i32$ %ERRORS, i1$ %dst_rst_ni, i1$ %dst_clk_i, i1$ %dst_ready_i)
}
