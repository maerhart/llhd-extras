proc %rr_arb_tree.param1.always_ff.474.1 (i1$ %clk_i, i1$ %rst_ni, i1$ %flush_i, i3$ %rr_d) -> (i3$ %rr_q) {
0:
    br %init
init:
    %clk_i1 = prb i1$ %clk_i
    %rst_ni1 = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %clk_i2 = prb i1$ %clk_i
    %1 = const i1 0
    %2 = eq i1 %clk_i1, %1
    %3 = neq i1 %clk_i2, %1
    %posedge = and i1 %2, %3
    %rst_ni2 = prb i1$ %rst_ni
    %4 = const i1 0
    %5 = neq i1 %rst_ni1, %4
    %6 = eq i1 %rst_ni2, %4
    %negedge = and i1 %6, %5
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %rst_ni3 = prb i1$ %rst_ni
    %7 = not i1 %rst_ni3
    br %7, %if_false, %if_true
if_true:
    %8 = const i3 0
    %9 = const i1 0
    %10 = inss i3 %8, i1 %9, 0, 1
    %11 = const time 0s 1d
    drv i3$ %rr_q, %10, %11
    br %if_exit
if_false:
    %flush_i1 = prb i1$ %flush_i
    br %flush_i1, %if_false1, %if_true1
if_exit:
    br %0
if_true1:
    %12 = const i3 0
    %13 = const i1 0
    %14 = inss i3 %12, i1 %13, 0, 1
    %15 = const time 0s 1d
    drv i3$ %rr_q, %14, %15
    br %if_exit1
if_false1:
    %rr_d1 = prb i3$ %rr_d
    %16 = const time 0s 1d
    drv i3$ %rr_q, %rr_d1, %16
    br %if_exit1
if_exit1:
    br %if_exit
}

proc %rr_arb_tree.param1.initial.396.1 () -> () {
0:
    halt
}

entity @rr_arb_tree.param1 (i1$ %clk_i, i1$ %rst_ni, i1$ %flush_i, i3$ %rr_i, i8$ %req_i, [8 x i32]$ %data_i, i1$ %gnt_i) -> (i8$ %gnt_o, i1$ %req_o, i32$ %data_o, i3$ %idx_o) {
    %0 = const i3 0
    %1 = const i3 0
    %2 = const i3 0
    %3 = const i3 0
    %4 = const i3 0
    %5 = const i3 0
    %6 = const i3 0
    %7 = [i3 %0, %1, %2, %3, %4, %5, %6]
    %index_nodes = sig [7 x i3] %7
    %8 = const i32 0
    %9 = const i32 0
    %10 = const i32 0
    %11 = const i32 0
    %12 = const i32 0
    %13 = const i32 0
    %14 = const i32 0
    %15 = [i32 %8, %9, %10, %11, %12, %13, %14]
    %data_nodes = sig [7 x i32] %15
    %16 = const i7 0
    %gnt_nodes = sig i7 %16
    %17 = const i7 0
    %req_nodes = sig i7 %17
    %18 = const i3 0
    %rr_q = sig i3 %18
    %19 = const i8 0
    %req_d = sig i8 %19
    %req_nodes1 = prb i7$ %req_nodes
    %20 = const i32 0
    %21 = const i7 0
    %22 = shr i7 %req_nodes1, i7 %21, i32 %20
    %23 = exts i1, i7 %22, 0, 1
    %24 = const time 0s 1e
    drv i1$ %req_o, %23, %24
    %data_nodes1 = prb [7 x i32]$ %data_nodes
    %25 = const i32 0
    %26 = const i32 0
    %27 = [7 x i32 %26]
    %28 = shr [7 x i32] %data_nodes1, [7 x i32] %27, i32 %25
    %29 = extf i32, [7 x i32] %28, 0
    %30 = const time 0s 1e
    drv i32$ %data_o, %29, %30
    %index_nodes1 = prb [7 x i3]$ %index_nodes
    %31 = const i32 0
    %32 = const i3 0
    %33 = [7 x i3 %32]
    %34 = shr [7 x i3] %index_nodes1, [7 x i3] %33, i32 %31
    %35 = extf i3, [7 x i3] %34, 0
    %36 = const time 0s 1e
    drv i3$ %idx_o, %35, %36
    %37 = const i32 0
    %38 = const i7 0
    %39 = sig i7 %38
    %40 = shr i7$ %gnt_nodes, i7$ %39, i32 %37
    %41 = exts i1$, i7$ %40, 0, 1
    %gnt_i1 = prb i1$ %gnt_i
    %42 = const time 0s 1e
    drv i1$ %41, %gnt_i1, %42
    %43 = const i3 0
    %rr_d = sig i3 %43
    %gnt_i2 = prb i1$ %gnt_i
    %req_o1 = prb i1$ %req_o
    %44 = and i1 %gnt_i2, %req_o1
    %45 = const i32 0
    %rr_q1 = prb i3$ %rr_q
    %46 = inss i32 %45, i3 %rr_q1, 0, 3
    %47 = const i32 8
    %48 = const i32 1
    %49 = sub i32 %47, %48
    %50 = eq i32 %46, %49
    %51 = const i3 0
    %rr_q2 = prb i3$ %rr_q
    %52 = const i3 0
    %53 = const i1 1
    %54 = inss i3 %52, i1 %53, 0, 1
    %55 = add i3 %rr_q2, %54
    %56 = [i3 %55, %51]
    %57 = mux [2 x i3] %56, i1 %50
    %rr_q3 = prb i3$ %rr_q
    %58 = [i3 %rr_q3, %57]
    %59 = mux [2 x i3] %58, i1 %44
    %60 = const time 0s 1e
    drv i3$ %rr_d, %59, %60
    %req_i1 = prb i8$ %req_i
    %61 = const time 0s 1e
    drv i8$ %req_d, %req_i1, %61
    inst %rr_arb_tree.param1.always_ff.474.1 (i1$ %clk_i, i1$ %rst_ni, i1$ %flush_i, i3$ %rr_d) -> (i3$ %rr_q)
    %62 = const i1 0
    %sel = sig i1 %62
    %63 = const i32 0
    %64 = const i7 0
    %65 = sig i7 %64
    %66 = shr i7$ %req_nodes, i7$ %65, i32 %63
    %67 = exts i1$, i7$ %66, 0, 1
    %req_nodes2 = prb i7$ %req_nodes
    %68 = const i32 1
    %69 = const i7 0
    %70 = shr i7 %req_nodes2, i7 %69, i32 %68
    %71 = exts i1, i7 %70, 0, 1
    %req_nodes3 = prb i7$ %req_nodes
    %72 = const i32 1
    %73 = const i32 1
    %74 = add i32 %72, %73
    %75 = const i7 0
    %76 = shr i7 %req_nodes3, i7 %75, i32 %74
    %77 = exts i1, i7 %76, 0, 1
    %78 = or i1 %71, %77
    %79 = const time 0s 1e
    drv i1$ %67, %78, %79
    %req_nodes4 = prb i7$ %req_nodes
    %80 = const i32 1
    %81 = const i7 0
    %82 = shr i7 %req_nodes4, i7 %81, i32 %80
    %83 = exts i1, i7 %82, 0, 1
    %84 = not i1 %83
    %req_nodes5 = prb i7$ %req_nodes
    %85 = const i32 1
    %86 = const i32 1
    %87 = add i32 %85, %86
    %88 = const i7 0
    %89 = shr i7 %req_nodes5, i7 %88, i32 %87
    %90 = exts i1, i7 %89, 0, 1
    %rr_q4 = prb i3$ %rr_q
    %91 = const i32 3
    %92 = const i32 1
    %93 = sub i32 %91, %92
    %94 = const i32 0
    %95 = sub i32 %93, %94
    %96 = const i3 0
    %97 = shr i3 %rr_q4, i3 %96, i32 %95
    %98 = exts i1, i3 %97, 0, 1
    %99 = and i1 %90, %98
    %100 = or i1 %84, %99
    %101 = const time 0s 1e
    drv i1$ %sel, %100, %101
    %102 = const i32 0
    %103 = const i3 0
    %104 = [7 x i3 %103]
    %105 = sig [7 x i3] %104
    %106 = shr [7 x i3]$ %index_nodes, [7 x i3]$ %105, i32 %102
    %107 = extf i3$, [7 x i3]$ %106, 0
    %sel1 = prb i1$ %sel
    %108 = const i3 0
    %index_nodes2 = prb [7 x i3]$ %index_nodes
    %109 = const i32 1
    %110 = const i32 1
    %111 = add i32 %109, %110
    %112 = const i3 0
    %113 = [7 x i3 %112]
    %114 = shr [7 x i3] %index_nodes2, [7 x i3] %113, i32 %111
    %115 = extf i3, [7 x i3] %114, 0
    %116 = const i1 0
    %117 = const i3 0
    %118 = shr i3 %115, i3 %117, i1 %116
    %119 = exts i2, i3 %118, 0, 2
    %120 = inss i3 %108, i2 %119, 0, 2
    %121 = const i1 1
    %122 = inss i3 %120, i1 %121, 2, 1
    %123 = const i3 0
    %index_nodes3 = prb [7 x i3]$ %index_nodes
    %124 = const i32 1
    %125 = const i3 0
    %126 = [7 x i3 %125]
    %127 = shr [7 x i3] %index_nodes3, [7 x i3] %126, i32 %124
    %128 = extf i3, [7 x i3] %127, 0
    %129 = const i1 0
    %130 = const i3 0
    %131 = shr i3 %128, i3 %130, i1 %129
    %132 = exts i2, i3 %131, 0, 2
    %133 = inss i3 %123, i2 %132, 0, 2
    %134 = const i1 0
    %135 = inss i3 %133, i1 %134, 2, 1
    %136 = [i3 %135, %122]
    %137 = mux [2 x i3] %136, i1 %sel1
    %138 = const time 0s 1e
    drv i3$ %107, %137, %138
    %139 = const i32 0
    %140 = const i32 0
    %141 = [7 x i32 %140]
    %142 = sig [7 x i32] %141
    %143 = shr [7 x i32]$ %data_nodes, [7 x i32]$ %142, i32 %139
    %144 = extf i32$, [7 x i32]$ %143, 0
    %sel2 = prb i1$ %sel
    %data_nodes2 = prb [7 x i32]$ %data_nodes
    %145 = const i32 1
    %146 = const i32 1
    %147 = add i32 %145, %146
    %148 = const i32 0
    %149 = [7 x i32 %148]
    %150 = shr [7 x i32] %data_nodes2, [7 x i32] %149, i32 %147
    %151 = extf i32, [7 x i32] %150, 0
    %data_nodes3 = prb [7 x i32]$ %data_nodes
    %152 = const i32 1
    %153 = const i32 0
    %154 = [7 x i32 %153]
    %155 = shr [7 x i32] %data_nodes3, [7 x i32] %154, i32 %152
    %156 = extf i32, [7 x i32] %155, 0
    %157 = [i32 %156, %151]
    %158 = mux [2 x i32] %157, i1 %sel2
    %159 = const time 0s 1e
    drv i32$ %144, %158, %159
    %160 = const i32 1
    %161 = const i7 0
    %162 = sig i7 %161
    %163 = shr i7$ %gnt_nodes, i7$ %162, i32 %160
    %164 = exts i1$, i7$ %163, 0, 1
    %gnt_nodes1 = prb i7$ %gnt_nodes
    %165 = const i32 0
    %166 = const i7 0
    %167 = shr i7 %gnt_nodes1, i7 %166, i32 %165
    %168 = exts i1, i7 %167, 0, 1
    %sel3 = prb i1$ %sel
    %169 = not i1 %sel3
    %170 = and i1 %168, %169
    %171 = const time 0s 1e
    drv i1$ %164, %170, %171
    %172 = const i32 1
    %173 = const i32 1
    %174 = add i32 %172, %173
    %175 = const i7 0
    %176 = sig i7 %175
    %177 = shr i7$ %gnt_nodes, i7$ %176, i32 %174
    %178 = exts i1$, i7$ %177, 0, 1
    %gnt_nodes2 = prb i7$ %gnt_nodes
    %179 = const i32 0
    %180 = const i7 0
    %181 = shr i7 %gnt_nodes2, i7 %180, i32 %179
    %182 = exts i1, i7 %181, 0, 1
    %sel4 = prb i1$ %sel
    %183 = and i1 %182, %sel4
    %184 = const time 0s 1e
    drv i1$ %178, %183, %184
    %185 = const i1 0
    %sel5 = sig i1 %185
    %186 = const i32 1
    %187 = const i7 0
    %188 = sig i7 %187
    %189 = shr i7$ %req_nodes, i7$ %188, i32 %186
    %190 = exts i1$, i7$ %189, 0, 1
    %req_nodes6 = prb i7$ %req_nodes
    %191 = const i32 3
    %192 = const i7 0
    %193 = shr i7 %req_nodes6, i7 %192, i32 %191
    %194 = exts i1, i7 %193, 0, 1
    %req_nodes7 = prb i7$ %req_nodes
    %195 = const i32 3
    %196 = const i32 1
    %197 = add i32 %195, %196
    %198 = const i7 0
    %199 = shr i7 %req_nodes7, i7 %198, i32 %197
    %200 = exts i1, i7 %199, 0, 1
    %201 = or i1 %194, %200
    %202 = const time 0s 1e
    drv i1$ %190, %201, %202
    %req_nodes8 = prb i7$ %req_nodes
    %203 = const i32 3
    %204 = const i7 0
    %205 = shr i7 %req_nodes8, i7 %204, i32 %203
    %206 = exts i1, i7 %205, 0, 1
    %207 = not i1 %206
    %req_nodes9 = prb i7$ %req_nodes
    %208 = const i32 3
    %209 = const i32 1
    %210 = add i32 %208, %209
    %211 = const i7 0
    %212 = shr i7 %req_nodes9, i7 %211, i32 %210
    %213 = exts i1, i7 %212, 0, 1
    %rr_q5 = prb i3$ %rr_q
    %214 = const i32 3
    %215 = const i32 1
    %216 = sub i32 %214, %215
    %217 = const i32 1
    %218 = sub i32 %216, %217
    %219 = const i3 0
    %220 = shr i3 %rr_q5, i3 %219, i32 %218
    %221 = exts i1, i3 %220, 0, 1
    %222 = and i1 %213, %221
    %223 = or i1 %207, %222
    %224 = const time 0s 1e
    drv i1$ %sel5, %223, %224
    %225 = const i32 1
    %226 = const i3 0
    %227 = [7 x i3 %226]
    %228 = sig [7 x i3] %227
    %229 = shr [7 x i3]$ %index_nodes, [7 x i3]$ %228, i32 %225
    %230 = extf i3$, [7 x i3]$ %229, 0
    %sel6 = prb i1$ %sel5
    %231 = const i3 0
    %232 = const i2 0
    %index_nodes4 = prb [7 x i3]$ %index_nodes
    %233 = const i32 3
    %234 = const i32 1
    %235 = add i32 %233, %234
    %236 = const i3 0
    %237 = [7 x i3 %236]
    %238 = shr [7 x i3] %index_nodes4, [7 x i3] %237, i32 %235
    %239 = extf i3, [7 x i3] %238, 0
    %240 = const i1 0
    %241 = const i3 0
    %242 = shr i3 %239, i3 %241, i1 %240
    %243 = exts i1, i3 %242, 0, 1
    %244 = inss i2 %232, i1 %243, 0, 1
    %245 = const i1 1
    %246 = inss i2 %244, i1 %245, 1, 1
    %247 = inss i3 %231, i2 %246, 0, 2
    %248 = const i3 0
    %249 = const i2 0
    %index_nodes5 = prb [7 x i3]$ %index_nodes
    %250 = const i32 3
    %251 = const i3 0
    %252 = [7 x i3 %251]
    %253 = shr [7 x i3] %index_nodes5, [7 x i3] %252, i32 %250
    %254 = extf i3, [7 x i3] %253, 0
    %255 = const i1 0
    %256 = const i3 0
    %257 = shr i3 %254, i3 %256, i1 %255
    %258 = exts i1, i3 %257, 0, 1
    %259 = inss i2 %249, i1 %258, 0, 1
    %260 = const i1 0
    %261 = inss i2 %259, i1 %260, 1, 1
    %262 = inss i3 %248, i2 %261, 0, 2
    %263 = [i3 %262, %247]
    %264 = mux [2 x i3] %263, i1 %sel6
    %265 = const time 0s 1e
    drv i3$ %230, %264, %265
    %266 = const i32 1
    %267 = const i32 0
    %268 = [7 x i32 %267]
    %269 = sig [7 x i32] %268
    %270 = shr [7 x i32]$ %data_nodes, [7 x i32]$ %269, i32 %266
    %271 = extf i32$, [7 x i32]$ %270, 0
    %sel7 = prb i1$ %sel5
    %data_nodes4 = prb [7 x i32]$ %data_nodes
    %272 = const i32 3
    %273 = const i32 1
    %274 = add i32 %272, %273
    %275 = const i32 0
    %276 = [7 x i32 %275]
    %277 = shr [7 x i32] %data_nodes4, [7 x i32] %276, i32 %274
    %278 = extf i32, [7 x i32] %277, 0
    %data_nodes5 = prb [7 x i32]$ %data_nodes
    %279 = const i32 3
    %280 = const i32 0
    %281 = [7 x i32 %280]
    %282 = shr [7 x i32] %data_nodes5, [7 x i32] %281, i32 %279
    %283 = extf i32, [7 x i32] %282, 0
    %284 = [i32 %283, %278]
    %285 = mux [2 x i32] %284, i1 %sel7
    %286 = const time 0s 1e
    drv i32$ %271, %285, %286
    %287 = const i32 3
    %288 = const i7 0
    %289 = sig i7 %288
    %290 = shr i7$ %gnt_nodes, i7$ %289, i32 %287
    %291 = exts i1$, i7$ %290, 0, 1
    %gnt_nodes3 = prb i7$ %gnt_nodes
    %292 = const i32 1
    %293 = const i7 0
    %294 = shr i7 %gnt_nodes3, i7 %293, i32 %292
    %295 = exts i1, i7 %294, 0, 1
    %sel8 = prb i1$ %sel5
    %296 = not i1 %sel8
    %297 = and i1 %295, %296
    %298 = const time 0s 1e
    drv i1$ %291, %297, %298
    %299 = const i32 3
    %300 = const i32 1
    %301 = add i32 %299, %300
    %302 = const i7 0
    %303 = sig i7 %302
    %304 = shr i7$ %gnt_nodes, i7$ %303, i32 %301
    %305 = exts i1$, i7$ %304, 0, 1
    %gnt_nodes4 = prb i7$ %gnt_nodes
    %306 = const i32 1
    %307 = const i7 0
    %308 = shr i7 %gnt_nodes4, i7 %307, i32 %306
    %309 = exts i1, i7 %308, 0, 1
    %sel9 = prb i1$ %sel5
    %310 = and i1 %309, %sel9
    %311 = const time 0s 1e
    drv i1$ %305, %310, %311
    %312 = const i1 0
    %sel10 = sig i1 %312
    %313 = const i32 2
    %314 = const i7 0
    %315 = sig i7 %314
    %316 = shr i7$ %req_nodes, i7$ %315, i32 %313
    %317 = exts i1$, i7$ %316, 0, 1
    %req_nodes10 = prb i7$ %req_nodes
    %318 = const i32 5
    %319 = const i7 0
    %320 = shr i7 %req_nodes10, i7 %319, i32 %318
    %321 = exts i1, i7 %320, 0, 1
    %req_nodes11 = prb i7$ %req_nodes
    %322 = const i32 5
    %323 = const i32 1
    %324 = add i32 %322, %323
    %325 = const i7 0
    %326 = shr i7 %req_nodes11, i7 %325, i32 %324
    %327 = exts i1, i7 %326, 0, 1
    %328 = or i1 %321, %327
    %329 = const time 0s 1e
    drv i1$ %317, %328, %329
    %req_nodes12 = prb i7$ %req_nodes
    %330 = const i32 5
    %331 = const i7 0
    %332 = shr i7 %req_nodes12, i7 %331, i32 %330
    %333 = exts i1, i7 %332, 0, 1
    %334 = not i1 %333
    %req_nodes13 = prb i7$ %req_nodes
    %335 = const i32 5
    %336 = const i32 1
    %337 = add i32 %335, %336
    %338 = const i7 0
    %339 = shr i7 %req_nodes13, i7 %338, i32 %337
    %340 = exts i1, i7 %339, 0, 1
    %rr_q6 = prb i3$ %rr_q
    %341 = const i32 3
    %342 = const i32 1
    %343 = sub i32 %341, %342
    %344 = const i32 1
    %345 = sub i32 %343, %344
    %346 = const i3 0
    %347 = shr i3 %rr_q6, i3 %346, i32 %345
    %348 = exts i1, i3 %347, 0, 1
    %349 = and i1 %340, %348
    %350 = or i1 %334, %349
    %351 = const time 0s 1e
    drv i1$ %sel10, %350, %351
    %352 = const i32 2
    %353 = const i3 0
    %354 = [7 x i3 %353]
    %355 = sig [7 x i3] %354
    %356 = shr [7 x i3]$ %index_nodes, [7 x i3]$ %355, i32 %352
    %357 = extf i3$, [7 x i3]$ %356, 0
    %sel11 = prb i1$ %sel10
    %358 = const i3 0
    %359 = const i2 0
    %index_nodes6 = prb [7 x i3]$ %index_nodes
    %360 = const i32 5
    %361 = const i32 1
    %362 = add i32 %360, %361
    %363 = const i3 0
    %364 = [7 x i3 %363]
    %365 = shr [7 x i3] %index_nodes6, [7 x i3] %364, i32 %362
    %366 = extf i3, [7 x i3] %365, 0
    %367 = const i1 0
    %368 = const i3 0
    %369 = shr i3 %366, i3 %368, i1 %367
    %370 = exts i1, i3 %369, 0, 1
    %371 = inss i2 %359, i1 %370, 0, 1
    %372 = const i1 1
    %373 = inss i2 %371, i1 %372, 1, 1
    %374 = inss i3 %358, i2 %373, 0, 2
    %375 = const i3 0
    %376 = const i2 0
    %index_nodes7 = prb [7 x i3]$ %index_nodes
    %377 = const i32 5
    %378 = const i3 0
    %379 = [7 x i3 %378]
    %380 = shr [7 x i3] %index_nodes7, [7 x i3] %379, i32 %377
    %381 = extf i3, [7 x i3] %380, 0
    %382 = const i1 0
    %383 = const i3 0
    %384 = shr i3 %381, i3 %383, i1 %382
    %385 = exts i1, i3 %384, 0, 1
    %386 = inss i2 %376, i1 %385, 0, 1
    %387 = const i1 0
    %388 = inss i2 %386, i1 %387, 1, 1
    %389 = inss i3 %375, i2 %388, 0, 2
    %390 = [i3 %389, %374]
    %391 = mux [2 x i3] %390, i1 %sel11
    %392 = const time 0s 1e
    drv i3$ %357, %391, %392
    %393 = const i32 2
    %394 = const i32 0
    %395 = [7 x i32 %394]
    %396 = sig [7 x i32] %395
    %397 = shr [7 x i32]$ %data_nodes, [7 x i32]$ %396, i32 %393
    %398 = extf i32$, [7 x i32]$ %397, 0
    %sel12 = prb i1$ %sel10
    %data_nodes6 = prb [7 x i32]$ %data_nodes
    %399 = const i32 5
    %400 = const i32 1
    %401 = add i32 %399, %400
    %402 = const i32 0
    %403 = [7 x i32 %402]
    %404 = shr [7 x i32] %data_nodes6, [7 x i32] %403, i32 %401
    %405 = extf i32, [7 x i32] %404, 0
    %data_nodes7 = prb [7 x i32]$ %data_nodes
    %406 = const i32 5
    %407 = const i32 0
    %408 = [7 x i32 %407]
    %409 = shr [7 x i32] %data_nodes7, [7 x i32] %408, i32 %406
    %410 = extf i32, [7 x i32] %409, 0
    %411 = [i32 %410, %405]
    %412 = mux [2 x i32] %411, i1 %sel12
    %413 = const time 0s 1e
    drv i32$ %398, %412, %413
    %414 = const i32 5
    %415 = const i7 0
    %416 = sig i7 %415
    %417 = shr i7$ %gnt_nodes, i7$ %416, i32 %414
    %418 = exts i1$, i7$ %417, 0, 1
    %gnt_nodes5 = prb i7$ %gnt_nodes
    %419 = const i32 2
    %420 = const i7 0
    %421 = shr i7 %gnt_nodes5, i7 %420, i32 %419
    %422 = exts i1, i7 %421, 0, 1
    %sel13 = prb i1$ %sel10
    %423 = not i1 %sel13
    %424 = and i1 %422, %423
    %425 = const time 0s 1e
    drv i1$ %418, %424, %425
    %426 = const i32 5
    %427 = const i32 1
    %428 = add i32 %426, %427
    %429 = const i7 0
    %430 = sig i7 %429
    %431 = shr i7$ %gnt_nodes, i7$ %430, i32 %428
    %432 = exts i1$, i7$ %431, 0, 1
    %gnt_nodes6 = prb i7$ %gnt_nodes
    %433 = const i32 2
    %434 = const i7 0
    %435 = shr i7 %gnt_nodes6, i7 %434, i32 %433
    %436 = exts i1, i7 %435, 0, 1
    %sel14 = prb i1$ %sel10
    %437 = and i1 %436, %sel14
    %438 = const time 0s 1e
    drv i1$ %432, %437, %438
    %439 = const i1 0
    %sel15 = sig i1 %439
    %440 = const i32 3
    %441 = const i7 0
    %442 = sig i7 %441
    %443 = shr i7$ %req_nodes, i7$ %442, i32 %440
    %444 = exts i1$, i7$ %443, 0, 1
    %req_d1 = prb i8$ %req_d
    %445 = const i32 0
    %446 = const i32 2
    %447 = smul i32 %445, %446
    %448 = const i8 0
    %449 = shr i8 %req_d1, i8 %448, i32 %447
    %450 = exts i1, i8 %449, 0, 1
    %req_d2 = prb i8$ %req_d
    %451 = const i32 0
    %452 = const i32 2
    %453 = smul i32 %451, %452
    %454 = const i32 1
    %455 = add i32 %453, %454
    %456 = const i8 0
    %457 = shr i8 %req_d2, i8 %456, i32 %455
    %458 = exts i1, i8 %457, 0, 1
    %459 = or i1 %450, %458
    %460 = const time 0s 1e
    drv i1$ %444, %459, %460
    %req_d3 = prb i8$ %req_d
    %461 = const i32 0
    %462 = const i32 2
    %463 = smul i32 %461, %462
    %464 = const i8 0
    %465 = shr i8 %req_d3, i8 %464, i32 %463
    %466 = exts i1, i8 %465, 0, 1
    %467 = not i1 %466
    %req_d4 = prb i8$ %req_d
    %468 = const i32 0
    %469 = const i32 2
    %470 = smul i32 %468, %469
    %471 = const i32 1
    %472 = add i32 %470, %471
    %473 = const i8 0
    %474 = shr i8 %req_d4, i8 %473, i32 %472
    %475 = exts i1, i8 %474, 0, 1
    %rr_q7 = prb i3$ %rr_q
    %476 = const i32 3
    %477 = const i32 1
    %478 = sub i32 %476, %477
    %479 = const i32 2
    %480 = sub i32 %478, %479
    %481 = const i3 0
    %482 = shr i3 %rr_q7, i3 %481, i32 %480
    %483 = exts i1, i3 %482, 0, 1
    %484 = and i1 %475, %483
    %485 = or i1 %467, %484
    %486 = const time 0s 1e
    drv i1$ %sel15, %485, %486
    %487 = const i32 3
    %488 = const i3 0
    %489 = [7 x i3 %488]
    %490 = sig [7 x i3] %489
    %491 = shr [7 x i3]$ %index_nodes, [7 x i3]$ %490, i32 %487
    %492 = extf i3$, [7 x i3]$ %491, 0
    %493 = const i3 0
    %sel16 = prb i1$ %sel15
    %494 = inss i3 %493, i1 %sel16, 0, 1
    %495 = const time 0s 1e
    drv i3$ %492, %494, %495
    %496 = const i32 3
    %497 = const i32 0
    %498 = [7 x i32 %497]
    %499 = sig [7 x i32] %498
    %500 = shr [7 x i32]$ %data_nodes, [7 x i32]$ %499, i32 %496
    %501 = extf i32$, [7 x i32]$ %500, 0
    %sel17 = prb i1$ %sel15
    %data_i1 = prb [8 x i32]$ %data_i
    %502 = const i32 0
    %503 = const i32 2
    %504 = smul i32 %502, %503
    %505 = const i32 1
    %506 = add i32 %504, %505
    %507 = const i32 0
    %508 = [8 x i32 %507]
    %509 = shr [8 x i32] %data_i1, [8 x i32] %508, i32 %506
    %510 = extf i32, [8 x i32] %509, 0
    %data_i2 = prb [8 x i32]$ %data_i
    %511 = const i32 0
    %512 = const i32 2
    %513 = smul i32 %511, %512
    %514 = const i32 0
    %515 = [8 x i32 %514]
    %516 = shr [8 x i32] %data_i2, [8 x i32] %515, i32 %513
    %517 = extf i32, [8 x i32] %516, 0
    %518 = [i32 %517, %510]
    %519 = mux [2 x i32] %518, i1 %sel17
    %520 = const time 0s 1e
    drv i32$ %501, %519, %520
    %521 = const i32 0
    %522 = const i32 2
    %523 = smul i32 %521, %522
    %524 = const i8 0
    %525 = sig i8 %524
    %526 = shr i8$ %gnt_o, i8$ %525, i32 %523
    %527 = exts i1$, i8$ %526, 0, 1
    %gnt_nodes7 = prb i7$ %gnt_nodes
    %528 = const i32 3
    %529 = const i7 0
    %530 = shr i7 %gnt_nodes7, i7 %529, i32 %528
    %531 = exts i1, i7 %530, 0, 1
    %532 = const i1 0
    %req_d5 = prb i8$ %req_d
    %533 = const i32 0
    %534 = const i32 2
    %535 = smul i32 %533, %534
    %536 = const i8 0
    %537 = shr i8 %req_d5, i8 %536, i32 %535
    %538 = exts i1, i8 %537, 0, 1
    %539 = or i1 %532, %538
    %540 = and i1 %531, %539
    %sel18 = prb i1$ %sel15
    %541 = not i1 %sel18
    %542 = and i1 %540, %541
    %543 = const time 0s 1e
    drv i1$ %527, %542, %543
    %544 = const i32 0
    %545 = const i32 2
    %546 = smul i32 %544, %545
    %547 = const i32 1
    %548 = add i32 %546, %547
    %549 = const i8 0
    %550 = sig i8 %549
    %551 = shr i8$ %gnt_o, i8$ %550, i32 %548
    %552 = exts i1$, i8$ %551, 0, 1
    %gnt_nodes8 = prb i7$ %gnt_nodes
    %553 = const i32 3
    %554 = const i7 0
    %555 = shr i7 %gnt_nodes8, i7 %554, i32 %553
    %556 = exts i1, i7 %555, 0, 1
    %557 = const i1 0
    %req_d6 = prb i8$ %req_d
    %558 = const i32 0
    %559 = const i32 2
    %560 = smul i32 %558, %559
    %561 = const i32 1
    %562 = add i32 %560, %561
    %563 = const i8 0
    %564 = shr i8 %req_d6, i8 %563, i32 %562
    %565 = exts i1, i8 %564, 0, 1
    %566 = or i1 %557, %565
    %567 = and i1 %556, %566
    %sel19 = prb i1$ %sel15
    %568 = and i1 %567, %sel19
    %569 = const time 0s 1e
    drv i1$ %552, %568, %569
    %570 = const i1 0
    %sel20 = sig i1 %570
    %571 = const i32 4
    %572 = const i7 0
    %573 = sig i7 %572
    %574 = shr i7$ %req_nodes, i7$ %573, i32 %571
    %575 = exts i1$, i7$ %574, 0, 1
    %req_d7 = prb i8$ %req_d
    %576 = const i32 1
    %577 = const i32 2
    %578 = smul i32 %576, %577
    %579 = const i8 0
    %580 = shr i8 %req_d7, i8 %579, i32 %578
    %581 = exts i1, i8 %580, 0, 1
    %req_d8 = prb i8$ %req_d
    %582 = const i32 1
    %583 = const i32 2
    %584 = smul i32 %582, %583
    %585 = const i32 1
    %586 = add i32 %584, %585
    %587 = const i8 0
    %588 = shr i8 %req_d8, i8 %587, i32 %586
    %589 = exts i1, i8 %588, 0, 1
    %590 = or i1 %581, %589
    %591 = const time 0s 1e
    drv i1$ %575, %590, %591
    %req_d9 = prb i8$ %req_d
    %592 = const i32 1
    %593 = const i32 2
    %594 = smul i32 %592, %593
    %595 = const i8 0
    %596 = shr i8 %req_d9, i8 %595, i32 %594
    %597 = exts i1, i8 %596, 0, 1
    %598 = not i1 %597
    %req_d10 = prb i8$ %req_d
    %599 = const i32 1
    %600 = const i32 2
    %601 = smul i32 %599, %600
    %602 = const i32 1
    %603 = add i32 %601, %602
    %604 = const i8 0
    %605 = shr i8 %req_d10, i8 %604, i32 %603
    %606 = exts i1, i8 %605, 0, 1
    %rr_q8 = prb i3$ %rr_q
    %607 = const i32 3
    %608 = const i32 1
    %609 = sub i32 %607, %608
    %610 = const i32 2
    %611 = sub i32 %609, %610
    %612 = const i3 0
    %613 = shr i3 %rr_q8, i3 %612, i32 %611
    %614 = exts i1, i3 %613, 0, 1
    %615 = and i1 %606, %614
    %616 = or i1 %598, %615
    %617 = const time 0s 1e
    drv i1$ %sel20, %616, %617
    %618 = const i32 4
    %619 = const i3 0
    %620 = [7 x i3 %619]
    %621 = sig [7 x i3] %620
    %622 = shr [7 x i3]$ %index_nodes, [7 x i3]$ %621, i32 %618
    %623 = extf i3$, [7 x i3]$ %622, 0
    %624 = const i3 0
    %sel21 = prb i1$ %sel20
    %625 = inss i3 %624, i1 %sel21, 0, 1
    %626 = const time 0s 1e
    drv i3$ %623, %625, %626
    %627 = const i32 4
    %628 = const i32 0
    %629 = [7 x i32 %628]
    %630 = sig [7 x i32] %629
    %631 = shr [7 x i32]$ %data_nodes, [7 x i32]$ %630, i32 %627
    %632 = extf i32$, [7 x i32]$ %631, 0
    %sel22 = prb i1$ %sel20
    %data_i3 = prb [8 x i32]$ %data_i
    %633 = const i32 1
    %634 = const i32 2
    %635 = smul i32 %633, %634
    %636 = const i32 1
    %637 = add i32 %635, %636
    %638 = const i32 0
    %639 = [8 x i32 %638]
    %640 = shr [8 x i32] %data_i3, [8 x i32] %639, i32 %637
    %641 = extf i32, [8 x i32] %640, 0
    %data_i4 = prb [8 x i32]$ %data_i
    %642 = const i32 1
    %643 = const i32 2
    %644 = smul i32 %642, %643
    %645 = const i32 0
    %646 = [8 x i32 %645]
    %647 = shr [8 x i32] %data_i4, [8 x i32] %646, i32 %644
    %648 = extf i32, [8 x i32] %647, 0
    %649 = [i32 %648, %641]
    %650 = mux [2 x i32] %649, i1 %sel22
    %651 = const time 0s 1e
    drv i32$ %632, %650, %651
    %652 = const i32 1
    %653 = const i32 2
    %654 = smul i32 %652, %653
    %655 = const i8 0
    %656 = sig i8 %655
    %657 = shr i8$ %gnt_o, i8$ %656, i32 %654
    %658 = exts i1$, i8$ %657, 0, 1
    %gnt_nodes9 = prb i7$ %gnt_nodes
    %659 = const i32 4
    %660 = const i7 0
    %661 = shr i7 %gnt_nodes9, i7 %660, i32 %659
    %662 = exts i1, i7 %661, 0, 1
    %663 = const i1 0
    %req_d11 = prb i8$ %req_d
    %664 = const i32 1
    %665 = const i32 2
    %666 = smul i32 %664, %665
    %667 = const i8 0
    %668 = shr i8 %req_d11, i8 %667, i32 %666
    %669 = exts i1, i8 %668, 0, 1
    %670 = or i1 %663, %669
    %671 = and i1 %662, %670
    %sel23 = prb i1$ %sel20
    %672 = not i1 %sel23
    %673 = and i1 %671, %672
    %674 = const time 0s 1e
    drv i1$ %658, %673, %674
    %675 = const i32 1
    %676 = const i32 2
    %677 = smul i32 %675, %676
    %678 = const i32 1
    %679 = add i32 %677, %678
    %680 = const i8 0
    %681 = sig i8 %680
    %682 = shr i8$ %gnt_o, i8$ %681, i32 %679
    %683 = exts i1$, i8$ %682, 0, 1
    %gnt_nodes10 = prb i7$ %gnt_nodes
    %684 = const i32 4
    %685 = const i7 0
    %686 = shr i7 %gnt_nodes10, i7 %685, i32 %684
    %687 = exts i1, i7 %686, 0, 1
    %688 = const i1 0
    %req_d12 = prb i8$ %req_d
    %689 = const i32 1
    %690 = const i32 2
    %691 = smul i32 %689, %690
    %692 = const i32 1
    %693 = add i32 %691, %692
    %694 = const i8 0
    %695 = shr i8 %req_d12, i8 %694, i32 %693
    %696 = exts i1, i8 %695, 0, 1
    %697 = or i1 %688, %696
    %698 = and i1 %687, %697
    %sel24 = prb i1$ %sel20
    %699 = and i1 %698, %sel24
    %700 = const time 0s 1e
    drv i1$ %683, %699, %700
    %701 = const i1 0
    %sel25 = sig i1 %701
    %702 = const i32 5
    %703 = const i7 0
    %704 = sig i7 %703
    %705 = shr i7$ %req_nodes, i7$ %704, i32 %702
    %706 = exts i1$, i7$ %705, 0, 1
    %req_d13 = prb i8$ %req_d
    %707 = const i32 2
    %708 = const i32 2
    %709 = smul i32 %707, %708
    %710 = const i8 0
    %711 = shr i8 %req_d13, i8 %710, i32 %709
    %712 = exts i1, i8 %711, 0, 1
    %req_d14 = prb i8$ %req_d
    %713 = const i32 2
    %714 = const i32 2
    %715 = smul i32 %713, %714
    %716 = const i32 1
    %717 = add i32 %715, %716
    %718 = const i8 0
    %719 = shr i8 %req_d14, i8 %718, i32 %717
    %720 = exts i1, i8 %719, 0, 1
    %721 = or i1 %712, %720
    %722 = const time 0s 1e
    drv i1$ %706, %721, %722
    %req_d15 = prb i8$ %req_d
    %723 = const i32 2
    %724 = const i32 2
    %725 = smul i32 %723, %724
    %726 = const i8 0
    %727 = shr i8 %req_d15, i8 %726, i32 %725
    %728 = exts i1, i8 %727, 0, 1
    %729 = not i1 %728
    %req_d16 = prb i8$ %req_d
    %730 = const i32 2
    %731 = const i32 2
    %732 = smul i32 %730, %731
    %733 = const i32 1
    %734 = add i32 %732, %733
    %735 = const i8 0
    %736 = shr i8 %req_d16, i8 %735, i32 %734
    %737 = exts i1, i8 %736, 0, 1
    %rr_q9 = prb i3$ %rr_q
    %738 = const i32 3
    %739 = const i32 1
    %740 = sub i32 %738, %739
    %741 = const i32 2
    %742 = sub i32 %740, %741
    %743 = const i3 0
    %744 = shr i3 %rr_q9, i3 %743, i32 %742
    %745 = exts i1, i3 %744, 0, 1
    %746 = and i1 %737, %745
    %747 = or i1 %729, %746
    %748 = const time 0s 1e
    drv i1$ %sel25, %747, %748
    %749 = const i32 5
    %750 = const i3 0
    %751 = [7 x i3 %750]
    %752 = sig [7 x i3] %751
    %753 = shr [7 x i3]$ %index_nodes, [7 x i3]$ %752, i32 %749
    %754 = extf i3$, [7 x i3]$ %753, 0
    %755 = const i3 0
    %sel26 = prb i1$ %sel25
    %756 = inss i3 %755, i1 %sel26, 0, 1
    %757 = const time 0s 1e
    drv i3$ %754, %756, %757
    %758 = const i32 5
    %759 = const i32 0
    %760 = [7 x i32 %759]
    %761 = sig [7 x i32] %760
    %762 = shr [7 x i32]$ %data_nodes, [7 x i32]$ %761, i32 %758
    %763 = extf i32$, [7 x i32]$ %762, 0
    %sel27 = prb i1$ %sel25
    %data_i5 = prb [8 x i32]$ %data_i
    %764 = const i32 2
    %765 = const i32 2
    %766 = smul i32 %764, %765
    %767 = const i32 1
    %768 = add i32 %766, %767
    %769 = const i32 0
    %770 = [8 x i32 %769]
    %771 = shr [8 x i32] %data_i5, [8 x i32] %770, i32 %768
    %772 = extf i32, [8 x i32] %771, 0
    %data_i6 = prb [8 x i32]$ %data_i
    %773 = const i32 2
    %774 = const i32 2
    %775 = smul i32 %773, %774
    %776 = const i32 0
    %777 = [8 x i32 %776]
    %778 = shr [8 x i32] %data_i6, [8 x i32] %777, i32 %775
    %779 = extf i32, [8 x i32] %778, 0
    %780 = [i32 %779, %772]
    %781 = mux [2 x i32] %780, i1 %sel27
    %782 = const time 0s 1e
    drv i32$ %763, %781, %782
    %783 = const i32 2
    %784 = const i32 2
    %785 = smul i32 %783, %784
    %786 = const i8 0
    %787 = sig i8 %786
    %788 = shr i8$ %gnt_o, i8$ %787, i32 %785
    %789 = exts i1$, i8$ %788, 0, 1
    %gnt_nodes11 = prb i7$ %gnt_nodes
    %790 = const i32 5
    %791 = const i7 0
    %792 = shr i7 %gnt_nodes11, i7 %791, i32 %790
    %793 = exts i1, i7 %792, 0, 1
    %794 = const i1 0
    %req_d17 = prb i8$ %req_d
    %795 = const i32 2
    %796 = const i32 2
    %797 = smul i32 %795, %796
    %798 = const i8 0
    %799 = shr i8 %req_d17, i8 %798, i32 %797
    %800 = exts i1, i8 %799, 0, 1
    %801 = or i1 %794, %800
    %802 = and i1 %793, %801
    %sel28 = prb i1$ %sel25
    %803 = not i1 %sel28
    %804 = and i1 %802, %803
    %805 = const time 0s 1e
    drv i1$ %789, %804, %805
    %806 = const i32 2
    %807 = const i32 2
    %808 = smul i32 %806, %807
    %809 = const i32 1
    %810 = add i32 %808, %809
    %811 = const i8 0
    %812 = sig i8 %811
    %813 = shr i8$ %gnt_o, i8$ %812, i32 %810
    %814 = exts i1$, i8$ %813, 0, 1
    %gnt_nodes12 = prb i7$ %gnt_nodes
    %815 = const i32 5
    %816 = const i7 0
    %817 = shr i7 %gnt_nodes12, i7 %816, i32 %815
    %818 = exts i1, i7 %817, 0, 1
    %819 = const i1 0
    %req_d18 = prb i8$ %req_d
    %820 = const i32 2
    %821 = const i32 2
    %822 = smul i32 %820, %821
    %823 = const i32 1
    %824 = add i32 %822, %823
    %825 = const i8 0
    %826 = shr i8 %req_d18, i8 %825, i32 %824
    %827 = exts i1, i8 %826, 0, 1
    %828 = or i1 %819, %827
    %829 = and i1 %818, %828
    %sel29 = prb i1$ %sel25
    %830 = and i1 %829, %sel29
    %831 = const time 0s 1e
    drv i1$ %814, %830, %831
    %832 = const i1 0
    %sel30 = sig i1 %832
    %833 = const i32 6
    %834 = const i7 0
    %835 = sig i7 %834
    %836 = shr i7$ %req_nodes, i7$ %835, i32 %833
    %837 = exts i1$, i7$ %836, 0, 1
    %req_d19 = prb i8$ %req_d
    %838 = const i32 3
    %839 = const i32 2
    %840 = smul i32 %838, %839
    %841 = const i8 0
    %842 = shr i8 %req_d19, i8 %841, i32 %840
    %843 = exts i1, i8 %842, 0, 1
    %req_d20 = prb i8$ %req_d
    %844 = const i32 3
    %845 = const i32 2
    %846 = smul i32 %844, %845
    %847 = const i32 1
    %848 = add i32 %846, %847
    %849 = const i8 0
    %850 = shr i8 %req_d20, i8 %849, i32 %848
    %851 = exts i1, i8 %850, 0, 1
    %852 = or i1 %843, %851
    %853 = const time 0s 1e
    drv i1$ %837, %852, %853
    %req_d21 = prb i8$ %req_d
    %854 = const i32 3
    %855 = const i32 2
    %856 = smul i32 %854, %855
    %857 = const i8 0
    %858 = shr i8 %req_d21, i8 %857, i32 %856
    %859 = exts i1, i8 %858, 0, 1
    %860 = not i1 %859
    %req_d22 = prb i8$ %req_d
    %861 = const i32 3
    %862 = const i32 2
    %863 = smul i32 %861, %862
    %864 = const i32 1
    %865 = add i32 %863, %864
    %866 = const i8 0
    %867 = shr i8 %req_d22, i8 %866, i32 %865
    %868 = exts i1, i8 %867, 0, 1
    %rr_q10 = prb i3$ %rr_q
    %869 = const i32 3
    %870 = const i32 1
    %871 = sub i32 %869, %870
    %872 = const i32 2
    %873 = sub i32 %871, %872
    %874 = const i3 0
    %875 = shr i3 %rr_q10, i3 %874, i32 %873
    %876 = exts i1, i3 %875, 0, 1
    %877 = and i1 %868, %876
    %878 = or i1 %860, %877
    %879 = const time 0s 1e
    drv i1$ %sel30, %878, %879
    %880 = const i32 6
    %881 = const i3 0
    %882 = [7 x i3 %881]
    %883 = sig [7 x i3] %882
    %884 = shr [7 x i3]$ %index_nodes, [7 x i3]$ %883, i32 %880
    %885 = extf i3$, [7 x i3]$ %884, 0
    %886 = const i3 0
    %sel31 = prb i1$ %sel30
    %887 = inss i3 %886, i1 %sel31, 0, 1
    %888 = const time 0s 1e
    drv i3$ %885, %887, %888
    %889 = const i32 6
    %890 = const i32 0
    %891 = [7 x i32 %890]
    %892 = sig [7 x i32] %891
    %893 = shr [7 x i32]$ %data_nodes, [7 x i32]$ %892, i32 %889
    %894 = extf i32$, [7 x i32]$ %893, 0
    %sel32 = prb i1$ %sel30
    %data_i7 = prb [8 x i32]$ %data_i
    %895 = const i32 3
    %896 = const i32 2
    %897 = smul i32 %895, %896
    %898 = const i32 1
    %899 = add i32 %897, %898
    %900 = const i32 0
    %901 = [8 x i32 %900]
    %902 = shr [8 x i32] %data_i7, [8 x i32] %901, i32 %899
    %903 = extf i32, [8 x i32] %902, 0
    %data_i8 = prb [8 x i32]$ %data_i
    %904 = const i32 3
    %905 = const i32 2
    %906 = smul i32 %904, %905
    %907 = const i32 0
    %908 = [8 x i32 %907]
    %909 = shr [8 x i32] %data_i8, [8 x i32] %908, i32 %906
    %910 = extf i32, [8 x i32] %909, 0
    %911 = [i32 %910, %903]
    %912 = mux [2 x i32] %911, i1 %sel32
    %913 = const time 0s 1e
    drv i32$ %894, %912, %913
    %914 = const i32 3
    %915 = const i32 2
    %916 = smul i32 %914, %915
    %917 = const i8 0
    %918 = sig i8 %917
    %919 = shr i8$ %gnt_o, i8$ %918, i32 %916
    %920 = exts i1$, i8$ %919, 0, 1
    %gnt_nodes13 = prb i7$ %gnt_nodes
    %921 = const i32 6
    %922 = const i7 0
    %923 = shr i7 %gnt_nodes13, i7 %922, i32 %921
    %924 = exts i1, i7 %923, 0, 1
    %925 = const i1 0
    %req_d23 = prb i8$ %req_d
    %926 = const i32 3
    %927 = const i32 2
    %928 = smul i32 %926, %927
    %929 = const i8 0
    %930 = shr i8 %req_d23, i8 %929, i32 %928
    %931 = exts i1, i8 %930, 0, 1
    %932 = or i1 %925, %931
    %933 = and i1 %924, %932
    %sel33 = prb i1$ %sel30
    %934 = not i1 %sel33
    %935 = and i1 %933, %934
    %936 = const time 0s 1e
    drv i1$ %920, %935, %936
    %937 = const i32 3
    %938 = const i32 2
    %939 = smul i32 %937, %938
    %940 = const i32 1
    %941 = add i32 %939, %940
    %942 = const i8 0
    %943 = sig i8 %942
    %944 = shr i8$ %gnt_o, i8$ %943, i32 %941
    %945 = exts i1$, i8$ %944, 0, 1
    %gnt_nodes14 = prb i7$ %gnt_nodes
    %946 = const i32 6
    %947 = const i7 0
    %948 = shr i7 %gnt_nodes14, i7 %947, i32 %946
    %949 = exts i1, i7 %948, 0, 1
    %950 = const i1 0
    %req_d24 = prb i8$ %req_d
    %951 = const i32 3
    %952 = const i32 2
    %953 = smul i32 %951, %952
    %954 = const i32 1
    %955 = add i32 %953, %954
    %956 = const i8 0
    %957 = shr i8 %req_d24, i8 %956, i32 %955
    %958 = exts i1, i8 %957, 0, 1
    %959 = or i1 %950, %958
    %960 = and i1 %949, %959
    %sel34 = prb i1$ %sel30
    %961 = and i1 %960, %sel34
    %962 = const time 0s 1e
    drv i1$ %945, %961, %962
    inst %rr_arb_tree.param1.initial.396.1 () -> ()
    %963 = const i8 0
    %964 = const time 0s
    drv i8$ %gnt_o, %963, %964
}

proc %rr_arb_tree_tb.initial.250.0 () -> (i1$ %clk_i, i1$ %rst_ni) {
0:
    %1 = const i32 0
    %2 = exts i1, i32 %1, 0, 1
    %3 = const time 1ns
    drv i1$ %rst_ni, %2, %3
    %4 = const i32 1
    %5 = exts i1, i32 %4, 0, 1
    %6 = const time 2ns
    drv i1$ %rst_ni, %5, %6
    %7 = const time 4ns
    wait %8 for %7
8:
    %9 = const i32 5000000
    %loop_count = var i32 %9
    br %loop_body
loop_body:
    %10 = ld i32* %loop_count
    %11 = const i32 0
    %12 = neq i32 %10, %11
    br %12, %loop_exit, %loop_continue
loop_exit:
    halt
loop_continue:
    %13 = const i32 1
    %14 = exts i1, i32 %13, 0, 1
    %15 = const time 1ns
    drv i1$ %clk_i, %14, %15
    %16 = const i32 0
    %17 = exts i1, i32 %16, 0, 1
    %18 = const time 2ns
    drv i1$ %clk_i, %17, %18
    %19 = const time 2ns
    wait %20 for %19
20:
    %21 = ld i32* %loop_count
    %22 = const i32 1
    %23 = sub i32 %21, %22
    st i32* %loop_count, %23
    br %loop_body
}

entity @rr_arb_tree_tb () -> () {
    %0 = const i1 0
    %clk_i = sig i1 %0
    %1 = const i1 1
    %rst_ni = sig i1 %1
    %2 = const i1 0
    %flush_i = sig i1 %2
    %3 = const i3 0
    %rr_i = sig i3 %3
    %4 = const i8 0
    %req_i = sig i8 %4
    %5 = const i8 0
    %gnt_o = sig i8 %5
    %6 = const i32 0
    %7 = const i32 0
    %8 = const i32 0
    %9 = const i32 0
    %10 = const i32 0
    %11 = const i32 0
    %12 = const i32 0
    %13 = const i32 0
    %14 = [i32 %6, %7, %8, %9, %10, %11, %12, %13]
    %data_i = sig [8 x i32] %14
    %15 = const i1 0
    %gnt_i = sig i1 %15
    %16 = const i1 0
    %req_o = sig i1 %16
    %17 = const i32 0
    %data_o = sig i32 %17
    %18 = const i3 0
    %idx_o = sig i3 %18
    %19 = const i32 1
    %20 = neg i32 %19
    %21 = exts i8, i32 %20, 0, 8
    %22 = const time 0s 1e
    drv i8$ %req_i, %21, %22
    %req_o1 = prb i1$ %req_o
    %23 = const time 0s 1e
    drv i1$ %gnt_i, %req_o1, %23
    %clk_i1 = prb i1$ %clk_i
    %24 = const i1 0
    %25 = sig i1 %24
    %26 = const time 0s 1e
    drv i1$ %25, %clk_i1, %26
    %rst_ni1 = prb i1$ %rst_ni
    %27 = const i1 0
    %28 = sig i1 %27
    %29 = const time 0s 1e
    drv i1$ %28, %rst_ni1, %29
    %flush_i1 = prb i1$ %flush_i
    %30 = const i1 0
    %31 = sig i1 %30
    %32 = const time 0s 1e
    drv i1$ %31, %flush_i1, %32
    %rr_i1 = prb i3$ %rr_i
    %33 = const i3 0
    %34 = sig i3 %33
    %35 = const time 0s 1e
    drv i3$ %34, %rr_i1, %35
    %req_i1 = prb i8$ %req_i
    %36 = const i8 0
    %37 = sig i8 %36
    %38 = const time 0s 1e
    drv i8$ %37, %req_i1, %38
    %data_i1 = prb [8 x i32]$ %data_i
    %39 = const i32 0
    %40 = [8 x i32 %39]
    %41 = sig [8 x i32] %40
    %42 = const time 0s 1e
    drv [8 x i32]$ %41, %data_i1, %42
    %gnt_i1 = prb i1$ %gnt_i
    %43 = const i1 0
    %44 = sig i1 %43
    %45 = const time 0s 1e
    drv i1$ %44, %gnt_i1, %45
    inst @rr_arb_tree.param1 (i1$ %25, i1$ %28, i1$ %31, i3$ %34, i8$ %37, [8 x i32]$ %41, i1$ %44) -> (i8$ %gnt_o, i1$ %req_o, i32$ %data_o, i3$ %idx_o)
    inst %rr_arb_tree_tb.initial.250.0 () -> (i1$ %clk_i, i1$ %rst_ni)
}
