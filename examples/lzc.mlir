llhd.proc @lzc.param1.initial.262.1() -> () {
    br ^0
^0:
    llhd.halt
}

llhd.proc @lzc.param1.always_comb.271.1(%in_i: !llhd.sig<i16>) -> (%in_tmp: !llhd.sig<i16> ) {
    br ^0
^0:
    br ^body
^body:
    %1 = llhd.const 0 : i32
    %i = llhd.var %1 : i32
    br ^loop_body
^loop_body:
    %i1 = llhd.load %i : !llhd.ptr<i32>
    %2 = llhd.const 16 : i32
    %3 = cmpi "slt", %i1, %2 : i32
    cond_br %3, ^loop_continue, ^loop_exit
^check:
    llhd.wait (%in_i : !llhd.sig<i16>), ^body
^loop_exit:
    br ^check
^loop_continue:
    %i2 = llhd.load %i : !llhd.ptr<i32>
    %4 = llhd.const 0 : i16
    %5 = llhd.dyn_extract_slice %in_tmp, %i2 : (!llhd.sig<i16>, i32) -> !llhd.sig<i1>
    %6 = llhd.const 1 : i32
    %7 = llhd.const 0 : i32
    %8 = llhd.neq %6, %7 : i32
    %in_i1 = llhd.prb %in_i : !llhd.sig<i16>
    %9 = llhd.const 16 : i32
    %10 = llhd.const 1 : i32
    %11 = subi %9, %10 : i32
    %i3 = llhd.load %i : !llhd.ptr<i32>
    %12 = subi %11, %i3 : i32
    %13 = llhd.const 0 : i16
    %14 = llhd.shr %in_i1, %13, %12 : (i16, i16, i32) -> i16
    %15 = llhd.extract_slice %14, 0 : i16 -> i1
    %in_i2 = llhd.prb %in_i : !llhd.sig<i16>
    %i4 = llhd.load %i : !llhd.ptr<i32>
    %16 = llhd.const 0 : i16
    %17 = llhd.shr %in_i2, %16, %i4 : (i16, i16, i32) -> i16
    %18 = llhd.extract_slice %17, 0 : i16 -> i1
    %19 = llhd.array %18, %15 : !llhd.array<2xi1>
    %20 = llhd.dyn_extract_element %19, %8 : (!llhd.array<2xi1>, i1) -> i1
    %21 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %5, %20 after %21 : !llhd.sig<i1>
    %i5 = llhd.load %i : !llhd.ptr<i32>
    %22 = llhd.const 1 : i32
    %23 = addi %i5, %22 : i32
    llhd.store %i, %23 : !llhd.ptr<i32>
    %i6 = llhd.load %i : !llhd.ptr<i32>
    %24 = llhd.const 0 : i32
    %25 = llhd.neq %i6, %24 : i32
    br ^loop_body
}

llhd.entity @lzc.param1(%in_i: !llhd.sig<i16>) -> (%cnt_o: !llhd.sig<i4> , %empty_o: !llhd.sig<i1> ) {
    %0 = llhd.const 0 : i4
    %1 = llhd.const 0 : i4
    %2 = llhd.const 0 : i4
    %3 = llhd.const 0 : i4
    %4 = llhd.const 0 : i4
    %5 = llhd.const 0 : i4
    %6 = llhd.const 0 : i4
    %7 = llhd.const 0 : i4
    %8 = llhd.const 0 : i4
    %9 = llhd.const 0 : i4
    %10 = llhd.const 0 : i4
    %11 = llhd.const 0 : i4
    %12 = llhd.const 0 : i4
    %13 = llhd.const 0 : i4
    %14 = llhd.const 0 : i4
    %15 = llhd.const 0 : i4
    %16 = llhd.array %0, %1, %2, %3, %4, %5, %6, %7, %8, %9, %10, %11, %12, %13, %14, %15 : !llhd.array<16xi4>
    %index_lut = llhd.sig "index_lut" %16 : !llhd.array<16xi4>
    %17 = llhd.const 0 : i16
    %sel_nodes = llhd.sig "sel_nodes" %17 : i16
    %18 = llhd.const 0 : i4
    %19 = llhd.const 0 : i4
    %20 = llhd.const 0 : i4
    %21 = llhd.const 0 : i4
    %22 = llhd.const 0 : i4
    %23 = llhd.const 0 : i4
    %24 = llhd.const 0 : i4
    %25 = llhd.const 0 : i4
    %26 = llhd.const 0 : i4
    %27 = llhd.const 0 : i4
    %28 = llhd.const 0 : i4
    %29 = llhd.const 0 : i4
    %30 = llhd.const 0 : i4
    %31 = llhd.const 0 : i4
    %32 = llhd.const 0 : i4
    %33 = llhd.const 0 : i4
    %34 = llhd.array %18, %19, %20, %21, %22, %23, %24, %25, %26, %27, %28, %29, %30, %31, %32, %33 : !llhd.array<16xi4>
    %index_nodes = llhd.sig "index_nodes" %34 : !llhd.array<16xi4>
    %35 = llhd.const 0 : i16
    %in_tmp = llhd.sig "in_tmp" %35 : i16
    %36 = llhd.const 4 : i32
    %37 = llhd.const 0 : i32
    %38 = cmpi "sgt", %36, %37 : i32
    %index_nodes1 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %39 = llhd.const 0 : i32
    %40 = llhd.const 0 : i4
    %41 = llhd.array_uniform %40 : !llhd.array<16xi4>
    %42 = llhd.shr %index_nodes1, %41, %39 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %43 = llhd.extract_element %42, 0 : !llhd.array<16xi4> -> i4
    %44 = llhd.const 0 : i1
    %45 = llhd.const 0 : i1
    %46 = llhd.insert_slice %44, %45, 0 : i1, i1
    %47 = llhd.const 0 : i4
    %48 = llhd.insert_slice %47, %46, 0 : i4, i1
    %49 = llhd.insert_slice %48, %46, 1 : i4, i1
    %50 = llhd.insert_slice %49, %46, 2 : i4, i1
    %51 = llhd.insert_slice %50, %46, 3 : i4, i1
    %52 = llhd.array %51, %43 : !llhd.array<2xi4>
    %53 = llhd.dyn_extract_element %52, %38 : (!llhd.array<2xi4>, i1) -> i4
    %54 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %cnt_o, %53 after %54 : !llhd.sig<i4>
    %55 = llhd.const 4 : i32
    %56 = llhd.const 0 : i32
    %57 = cmpi "sgt", %55, %56 : i32
    %sel_nodes1 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %58 = llhd.const 0 : i32
    %59 = llhd.const 0 : i16
    %60 = llhd.shr %sel_nodes1, %59, %58 : (i16, i16, i32) -> i16
    %61 = llhd.extract_slice %60, 0 : i16 -> i1
    %62 = llhd.not %61 : i1
    %in_i1 = llhd.prb %in_i : !llhd.sig<i16>
    %63 = llhd.extract_slice %in_i1, 0 : i16 -> i1
    %64 = llhd.extract_slice %in_i1, 1 : i16 -> i1
    %65 = llhd.or %63, %64 : i1
    %66 = llhd.extract_slice %in_i1, 2 : i16 -> i1
    %67 = llhd.or %65, %66 : i1
    %68 = llhd.extract_slice %in_i1, 3 : i16 -> i1
    %69 = llhd.or %67, %68 : i1
    %70 = llhd.extract_slice %in_i1, 4 : i16 -> i1
    %71 = llhd.or %69, %70 : i1
    %72 = llhd.extract_slice %in_i1, 5 : i16 -> i1
    %73 = llhd.or %71, %72 : i1
    %74 = llhd.extract_slice %in_i1, 6 : i16 -> i1
    %75 = llhd.or %73, %74 : i1
    %76 = llhd.extract_slice %in_i1, 7 : i16 -> i1
    %77 = llhd.or %75, %76 : i1
    %78 = llhd.extract_slice %in_i1, 8 : i16 -> i1
    %79 = llhd.or %77, %78 : i1
    %80 = llhd.extract_slice %in_i1, 9 : i16 -> i1
    %81 = llhd.or %79, %80 : i1
    %82 = llhd.extract_slice %in_i1, 10 : i16 -> i1
    %83 = llhd.or %81, %82 : i1
    %84 = llhd.extract_slice %in_i1, 11 : i16 -> i1
    %85 = llhd.or %83, %84 : i1
    %86 = llhd.extract_slice %in_i1, 12 : i16 -> i1
    %87 = llhd.or %85, %86 : i1
    %88 = llhd.extract_slice %in_i1, 13 : i16 -> i1
    %89 = llhd.or %87, %88 : i1
    %90 = llhd.extract_slice %in_i1, 14 : i16 -> i1
    %91 = llhd.or %89, %90 : i1
    %92 = llhd.extract_slice %in_i1, 15 : i16 -> i1
    %93 = llhd.or %91, %92 : i1
    %94 = llhd.not %93 : i1
    %95 = llhd.array %94, %62 : !llhd.array<2xi1>
    %96 = llhd.dyn_extract_element %95, %57 : (!llhd.array<2xi1>, i1) -> i1
    %97 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %empty_o, %96 after %97 : !llhd.sig<i1>
    %98 = llhd.const 0 : i32
    %99 = llhd.const 0 : i4
    %100 = llhd.array_uniform %99 : !llhd.array<16xi4>
    %101 = llhd.sig "101" %100 : !llhd.array<16xi4>
    %102 = llhd.shr %index_lut, %101, %98 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %103 = llhd.extract_element %102, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %104 = llhd.const 0 : i32
    %105 = llhd.extract_slice %104, 0 : i32 -> i4
    %106 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %103, %105 after %106 : !llhd.sig<i4>
    %107 = llhd.const 1 : i32
    %108 = llhd.const 0 : i4
    %109 = llhd.array_uniform %108 : !llhd.array<16xi4>
    %110 = llhd.sig "110" %109 : !llhd.array<16xi4>
    %111 = llhd.shr %index_lut, %110, %107 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %112 = llhd.extract_element %111, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %113 = llhd.const 1 : i32
    %114 = llhd.extract_slice %113, 0 : i32 -> i4
    %115 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %112, %114 after %115 : !llhd.sig<i4>
    %116 = llhd.const 2 : i32
    %117 = llhd.const 0 : i4
    %118 = llhd.array_uniform %117 : !llhd.array<16xi4>
    %119 = llhd.sig "119" %118 : !llhd.array<16xi4>
    %120 = llhd.shr %index_lut, %119, %116 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %121 = llhd.extract_element %120, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %122 = llhd.const 2 : i32
    %123 = llhd.extract_slice %122, 0 : i32 -> i4
    %124 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %121, %123 after %124 : !llhd.sig<i4>
    %125 = llhd.const 3 : i32
    %126 = llhd.const 0 : i4
    %127 = llhd.array_uniform %126 : !llhd.array<16xi4>
    %128 = llhd.sig "128" %127 : !llhd.array<16xi4>
    %129 = llhd.shr %index_lut, %128, %125 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %130 = llhd.extract_element %129, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %131 = llhd.const 3 : i32
    %132 = llhd.extract_slice %131, 0 : i32 -> i4
    %133 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %130, %132 after %133 : !llhd.sig<i4>
    %134 = llhd.const 4 : i32
    %135 = llhd.const 0 : i4
    %136 = llhd.array_uniform %135 : !llhd.array<16xi4>
    %137 = llhd.sig "137" %136 : !llhd.array<16xi4>
    %138 = llhd.shr %index_lut, %137, %134 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %139 = llhd.extract_element %138, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %140 = llhd.const 4 : i32
    %141 = llhd.extract_slice %140, 0 : i32 -> i4
    %142 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %139, %141 after %142 : !llhd.sig<i4>
    %143 = llhd.const 5 : i32
    %144 = llhd.const 0 : i4
    %145 = llhd.array_uniform %144 : !llhd.array<16xi4>
    %146 = llhd.sig "146" %145 : !llhd.array<16xi4>
    %147 = llhd.shr %index_lut, %146, %143 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %148 = llhd.extract_element %147, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %149 = llhd.const 5 : i32
    %150 = llhd.extract_slice %149, 0 : i32 -> i4
    %151 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %148, %150 after %151 : !llhd.sig<i4>
    %152 = llhd.const 6 : i32
    %153 = llhd.const 0 : i4
    %154 = llhd.array_uniform %153 : !llhd.array<16xi4>
    %155 = llhd.sig "155" %154 : !llhd.array<16xi4>
    %156 = llhd.shr %index_lut, %155, %152 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %157 = llhd.extract_element %156, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %158 = llhd.const 6 : i32
    %159 = llhd.extract_slice %158, 0 : i32 -> i4
    %160 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %157, %159 after %160 : !llhd.sig<i4>
    %161 = llhd.const 7 : i32
    %162 = llhd.const 0 : i4
    %163 = llhd.array_uniform %162 : !llhd.array<16xi4>
    %164 = llhd.sig "164" %163 : !llhd.array<16xi4>
    %165 = llhd.shr %index_lut, %164, %161 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %166 = llhd.extract_element %165, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %167 = llhd.const 7 : i32
    %168 = llhd.extract_slice %167, 0 : i32 -> i4
    %169 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %166, %168 after %169 : !llhd.sig<i4>
    %170 = llhd.const 8 : i32
    %171 = llhd.const 0 : i4
    %172 = llhd.array_uniform %171 : !llhd.array<16xi4>
    %173 = llhd.sig "173" %172 : !llhd.array<16xi4>
    %174 = llhd.shr %index_lut, %173, %170 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %175 = llhd.extract_element %174, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %176 = llhd.const 8 : i32
    %177 = llhd.extract_slice %176, 0 : i32 -> i4
    %178 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %175, %177 after %178 : !llhd.sig<i4>
    %179 = llhd.const 9 : i32
    %180 = llhd.const 0 : i4
    %181 = llhd.array_uniform %180 : !llhd.array<16xi4>
    %182 = llhd.sig "182" %181 : !llhd.array<16xi4>
    %183 = llhd.shr %index_lut, %182, %179 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %184 = llhd.extract_element %183, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %185 = llhd.const 9 : i32
    %186 = llhd.extract_slice %185, 0 : i32 -> i4
    %187 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %184, %186 after %187 : !llhd.sig<i4>
    %188 = llhd.const 10 : i32
    %189 = llhd.const 0 : i4
    %190 = llhd.array_uniform %189 : !llhd.array<16xi4>
    %191 = llhd.sig "191" %190 : !llhd.array<16xi4>
    %192 = llhd.shr %index_lut, %191, %188 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %193 = llhd.extract_element %192, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %194 = llhd.const 10 : i32
    %195 = llhd.extract_slice %194, 0 : i32 -> i4
    %196 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %193, %195 after %196 : !llhd.sig<i4>
    %197 = llhd.const 11 : i32
    %198 = llhd.const 0 : i4
    %199 = llhd.array_uniform %198 : !llhd.array<16xi4>
    %200 = llhd.sig "200" %199 : !llhd.array<16xi4>
    %201 = llhd.shr %index_lut, %200, %197 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %202 = llhd.extract_element %201, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %203 = llhd.const 11 : i32
    %204 = llhd.extract_slice %203, 0 : i32 -> i4
    %205 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %202, %204 after %205 : !llhd.sig<i4>
    %206 = llhd.const 12 : i32
    %207 = llhd.const 0 : i4
    %208 = llhd.array_uniform %207 : !llhd.array<16xi4>
    %209 = llhd.sig "209" %208 : !llhd.array<16xi4>
    %210 = llhd.shr %index_lut, %209, %206 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %211 = llhd.extract_element %210, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %212 = llhd.const 12 : i32
    %213 = llhd.extract_slice %212, 0 : i32 -> i4
    %214 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %211, %213 after %214 : !llhd.sig<i4>
    %215 = llhd.const 13 : i32
    %216 = llhd.const 0 : i4
    %217 = llhd.array_uniform %216 : !llhd.array<16xi4>
    %218 = llhd.sig "218" %217 : !llhd.array<16xi4>
    %219 = llhd.shr %index_lut, %218, %215 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %220 = llhd.extract_element %219, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %221 = llhd.const 13 : i32
    %222 = llhd.extract_slice %221, 0 : i32 -> i4
    %223 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %220, %222 after %223 : !llhd.sig<i4>
    %224 = llhd.const 14 : i32
    %225 = llhd.const 0 : i4
    %226 = llhd.array_uniform %225 : !llhd.array<16xi4>
    %227 = llhd.sig "227" %226 : !llhd.array<16xi4>
    %228 = llhd.shr %index_lut, %227, %224 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %229 = llhd.extract_element %228, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %230 = llhd.const 14 : i32
    %231 = llhd.extract_slice %230, 0 : i32 -> i4
    %232 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %229, %231 after %232 : !llhd.sig<i4>
    %233 = llhd.const 15 : i32
    %234 = llhd.const 0 : i4
    %235 = llhd.array_uniform %234 : !llhd.array<16xi4>
    %236 = llhd.sig "236" %235 : !llhd.array<16xi4>
    %237 = llhd.shr %index_lut, %236, %233 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %238 = llhd.extract_element %237, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %239 = llhd.const 15 : i32
    %240 = llhd.extract_slice %239, 0 : i32 -> i4
    %241 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %238, %240 after %241 : !llhd.sig<i4>
    %242 = llhd.const 1 : i32
    %243 = llhd.const 0 : i32
    %244 = llhd.const 0 : i32
    %245 = llhd.shl %242, %244, %243 : (i32, i32, i32) -> i32
    %246 = llhd.const 1 : i32
    %247 = subi %245, %246 : i32
    %248 = llhd.const 0 : i32
    %249 = addi %247, %248 : i32
    %250 = llhd.const 0 : i16
    %251 = llhd.sig "251" %250 : i16
    %252 = llhd.shr %sel_nodes, %251, %249 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %253 = llhd.extract_slice %252, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %sel_nodes2 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %254 = llhd.const 1 : i32
    %255 = llhd.const 0 : i32
    %256 = llhd.const 1 : i32
    %257 = addi %255, %256 : i32
    %258 = llhd.const 0 : i32
    %259 = llhd.shl %254, %258, %257 : (i32, i32, i32) -> i32
    %260 = llhd.const 1 : i32
    %261 = subi %259, %260 : i32
    %262 = llhd.const 0 : i32
    %263 = llhd.const 2 : i32
    %264 = muli %262, %263 : i32
    %265 = addi %261, %264 : i32
    %266 = llhd.const 0 : i16
    %267 = llhd.shr %sel_nodes2, %266, %265 : (i16, i16, i32) -> i16
    %268 = llhd.extract_slice %267, 0 : i16 -> i1
    %sel_nodes3 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %269 = llhd.const 1 : i32
    %270 = llhd.const 0 : i32
    %271 = llhd.const 1 : i32
    %272 = addi %270, %271 : i32
    %273 = llhd.const 0 : i32
    %274 = llhd.shl %269, %273, %272 : (i32, i32, i32) -> i32
    %275 = llhd.const 1 : i32
    %276 = subi %274, %275 : i32
    %277 = llhd.const 0 : i32
    %278 = llhd.const 2 : i32
    %279 = muli %277, %278 : i32
    %280 = addi %276, %279 : i32
    %281 = llhd.const 1 : i32
    %282 = addi %280, %281 : i32
    %283 = llhd.const 0 : i16
    %284 = llhd.shr %sel_nodes3, %283, %282 : (i16, i16, i32) -> i16
    %285 = llhd.extract_slice %284, 0 : i16 -> i1
    %286 = llhd.or %268, %285 : i1
    %287 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %253, %286 after %287 : !llhd.sig<i1>
    %288 = llhd.const 1 : i32
    %289 = llhd.const 0 : i32
    %290 = llhd.const 0 : i32
    %291 = llhd.shl %288, %290, %289 : (i32, i32, i32) -> i32
    %292 = llhd.const 1 : i32
    %293 = subi %291, %292 : i32
    %294 = llhd.const 0 : i32
    %295 = addi %293, %294 : i32
    %296 = llhd.const 0 : i4
    %297 = llhd.array_uniform %296 : !llhd.array<16xi4>
    %298 = llhd.sig "298" %297 : !llhd.array<16xi4>
    %299 = llhd.shr %index_nodes, %298, %295 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %300 = llhd.extract_element %299, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %sel_nodes4 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %301 = llhd.const 1 : i32
    %302 = llhd.const 0 : i32
    %303 = llhd.const 1 : i32
    %304 = addi %302, %303 : i32
    %305 = llhd.const 0 : i32
    %306 = llhd.shl %301, %305, %304 : (i32, i32, i32) -> i32
    %307 = llhd.const 1 : i32
    %308 = subi %306, %307 : i32
    %309 = llhd.const 0 : i32
    %310 = llhd.const 2 : i32
    %311 = muli %309, %310 : i32
    %312 = addi %308, %311 : i32
    %313 = llhd.const 0 : i16
    %314 = llhd.shr %sel_nodes4, %313, %312 : (i16, i16, i32) -> i16
    %315 = llhd.extract_slice %314, 0 : i16 -> i1
    %316 = llhd.const 1 : i1
    %317 = llhd.eq %315, %316 : i1
    %index_nodes2 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %318 = llhd.const 1 : i32
    %319 = llhd.const 0 : i32
    %320 = llhd.const 1 : i32
    %321 = addi %319, %320 : i32
    %322 = llhd.const 0 : i32
    %323 = llhd.shl %318, %322, %321 : (i32, i32, i32) -> i32
    %324 = llhd.const 1 : i32
    %325 = subi %323, %324 : i32
    %326 = llhd.const 0 : i32
    %327 = llhd.const 2 : i32
    %328 = muli %326, %327 : i32
    %329 = addi %325, %328 : i32
    %330 = llhd.const 0 : i4
    %331 = llhd.array_uniform %330 : !llhd.array<16xi4>
    %332 = llhd.shr %index_nodes2, %331, %329 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %333 = llhd.extract_element %332, 0 : !llhd.array<16xi4> -> i4
    %index_nodes3 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %334 = llhd.const 1 : i32
    %335 = llhd.const 0 : i32
    %336 = llhd.const 1 : i32
    %337 = addi %335, %336 : i32
    %338 = llhd.const 0 : i32
    %339 = llhd.shl %334, %338, %337 : (i32, i32, i32) -> i32
    %340 = llhd.const 1 : i32
    %341 = subi %339, %340 : i32
    %342 = llhd.const 0 : i32
    %343 = llhd.const 2 : i32
    %344 = muli %342, %343 : i32
    %345 = addi %341, %344 : i32
    %346 = llhd.const 1 : i32
    %347 = addi %345, %346 : i32
    %348 = llhd.const 0 : i4
    %349 = llhd.array_uniform %348 : !llhd.array<16xi4>
    %350 = llhd.shr %index_nodes3, %349, %347 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %351 = llhd.extract_element %350, 0 : !llhd.array<16xi4> -> i4
    %352 = llhd.array %351, %333 : !llhd.array<2xi4>
    %353 = llhd.dyn_extract_element %352, %317 : (!llhd.array<2xi4>, i1) -> i4
    %354 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %300, %353 after %354 : !llhd.sig<i4>
    %355 = llhd.const 1 : i32
    %356 = llhd.const 1 : i32
    %357 = llhd.const 0 : i32
    %358 = llhd.shl %355, %357, %356 : (i32, i32, i32) -> i32
    %359 = llhd.const 1 : i32
    %360 = subi %358, %359 : i32
    %361 = llhd.const 0 : i32
    %362 = addi %360, %361 : i32
    %363 = llhd.const 0 : i16
    %364 = llhd.sig "364" %363 : i16
    %365 = llhd.shr %sel_nodes, %364, %362 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %366 = llhd.extract_slice %365, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %sel_nodes5 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %367 = llhd.const 1 : i32
    %368 = llhd.const 1 : i32
    %369 = llhd.const 1 : i32
    %370 = addi %368, %369 : i32
    %371 = llhd.const 0 : i32
    %372 = llhd.shl %367, %371, %370 : (i32, i32, i32) -> i32
    %373 = llhd.const 1 : i32
    %374 = subi %372, %373 : i32
    %375 = llhd.const 0 : i32
    %376 = llhd.const 2 : i32
    %377 = muli %375, %376 : i32
    %378 = addi %374, %377 : i32
    %379 = llhd.const 0 : i16
    %380 = llhd.shr %sel_nodes5, %379, %378 : (i16, i16, i32) -> i16
    %381 = llhd.extract_slice %380, 0 : i16 -> i1
    %sel_nodes6 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %382 = llhd.const 1 : i32
    %383 = llhd.const 1 : i32
    %384 = llhd.const 1 : i32
    %385 = addi %383, %384 : i32
    %386 = llhd.const 0 : i32
    %387 = llhd.shl %382, %386, %385 : (i32, i32, i32) -> i32
    %388 = llhd.const 1 : i32
    %389 = subi %387, %388 : i32
    %390 = llhd.const 0 : i32
    %391 = llhd.const 2 : i32
    %392 = muli %390, %391 : i32
    %393 = addi %389, %392 : i32
    %394 = llhd.const 1 : i32
    %395 = addi %393, %394 : i32
    %396 = llhd.const 0 : i16
    %397 = llhd.shr %sel_nodes6, %396, %395 : (i16, i16, i32) -> i16
    %398 = llhd.extract_slice %397, 0 : i16 -> i1
    %399 = llhd.or %381, %398 : i1
    %400 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %366, %399 after %400 : !llhd.sig<i1>
    %401 = llhd.const 1 : i32
    %402 = llhd.const 1 : i32
    %403 = llhd.const 0 : i32
    %404 = llhd.shl %401, %403, %402 : (i32, i32, i32) -> i32
    %405 = llhd.const 1 : i32
    %406 = subi %404, %405 : i32
    %407 = llhd.const 0 : i32
    %408 = addi %406, %407 : i32
    %409 = llhd.const 0 : i4
    %410 = llhd.array_uniform %409 : !llhd.array<16xi4>
    %411 = llhd.sig "411" %410 : !llhd.array<16xi4>
    %412 = llhd.shr %index_nodes, %411, %408 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %413 = llhd.extract_element %412, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %sel_nodes7 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %414 = llhd.const 1 : i32
    %415 = llhd.const 1 : i32
    %416 = llhd.const 1 : i32
    %417 = addi %415, %416 : i32
    %418 = llhd.const 0 : i32
    %419 = llhd.shl %414, %418, %417 : (i32, i32, i32) -> i32
    %420 = llhd.const 1 : i32
    %421 = subi %419, %420 : i32
    %422 = llhd.const 0 : i32
    %423 = llhd.const 2 : i32
    %424 = muli %422, %423 : i32
    %425 = addi %421, %424 : i32
    %426 = llhd.const 0 : i16
    %427 = llhd.shr %sel_nodes7, %426, %425 : (i16, i16, i32) -> i16
    %428 = llhd.extract_slice %427, 0 : i16 -> i1
    %429 = llhd.const 1 : i1
    %430 = llhd.eq %428, %429 : i1
    %index_nodes4 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %431 = llhd.const 1 : i32
    %432 = llhd.const 1 : i32
    %433 = llhd.const 1 : i32
    %434 = addi %432, %433 : i32
    %435 = llhd.const 0 : i32
    %436 = llhd.shl %431, %435, %434 : (i32, i32, i32) -> i32
    %437 = llhd.const 1 : i32
    %438 = subi %436, %437 : i32
    %439 = llhd.const 0 : i32
    %440 = llhd.const 2 : i32
    %441 = muli %439, %440 : i32
    %442 = addi %438, %441 : i32
    %443 = llhd.const 0 : i4
    %444 = llhd.array_uniform %443 : !llhd.array<16xi4>
    %445 = llhd.shr %index_nodes4, %444, %442 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %446 = llhd.extract_element %445, 0 : !llhd.array<16xi4> -> i4
    %index_nodes5 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %447 = llhd.const 1 : i32
    %448 = llhd.const 1 : i32
    %449 = llhd.const 1 : i32
    %450 = addi %448, %449 : i32
    %451 = llhd.const 0 : i32
    %452 = llhd.shl %447, %451, %450 : (i32, i32, i32) -> i32
    %453 = llhd.const 1 : i32
    %454 = subi %452, %453 : i32
    %455 = llhd.const 0 : i32
    %456 = llhd.const 2 : i32
    %457 = muli %455, %456 : i32
    %458 = addi %454, %457 : i32
    %459 = llhd.const 1 : i32
    %460 = addi %458, %459 : i32
    %461 = llhd.const 0 : i4
    %462 = llhd.array_uniform %461 : !llhd.array<16xi4>
    %463 = llhd.shr %index_nodes5, %462, %460 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %464 = llhd.extract_element %463, 0 : !llhd.array<16xi4> -> i4
    %465 = llhd.array %464, %446 : !llhd.array<2xi4>
    %466 = llhd.dyn_extract_element %465, %430 : (!llhd.array<2xi4>, i1) -> i4
    %467 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %413, %466 after %467 : !llhd.sig<i4>
    %468 = llhd.const 1 : i32
    %469 = llhd.const 1 : i32
    %470 = llhd.const 0 : i32
    %471 = llhd.shl %468, %470, %469 : (i32, i32, i32) -> i32
    %472 = llhd.const 1 : i32
    %473 = subi %471, %472 : i32
    %474 = llhd.const 1 : i32
    %475 = addi %473, %474 : i32
    %476 = llhd.const 0 : i16
    %477 = llhd.sig "477" %476 : i16
    %478 = llhd.shr %sel_nodes, %477, %475 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %479 = llhd.extract_slice %478, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %sel_nodes8 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %480 = llhd.const 1 : i32
    %481 = llhd.const 1 : i32
    %482 = llhd.const 1 : i32
    %483 = addi %481, %482 : i32
    %484 = llhd.const 0 : i32
    %485 = llhd.shl %480, %484, %483 : (i32, i32, i32) -> i32
    %486 = llhd.const 1 : i32
    %487 = subi %485, %486 : i32
    %488 = llhd.const 1 : i32
    %489 = llhd.const 2 : i32
    %490 = muli %488, %489 : i32
    %491 = addi %487, %490 : i32
    %492 = llhd.const 0 : i16
    %493 = llhd.shr %sel_nodes8, %492, %491 : (i16, i16, i32) -> i16
    %494 = llhd.extract_slice %493, 0 : i16 -> i1
    %sel_nodes9 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %495 = llhd.const 1 : i32
    %496 = llhd.const 1 : i32
    %497 = llhd.const 1 : i32
    %498 = addi %496, %497 : i32
    %499 = llhd.const 0 : i32
    %500 = llhd.shl %495, %499, %498 : (i32, i32, i32) -> i32
    %501 = llhd.const 1 : i32
    %502 = subi %500, %501 : i32
    %503 = llhd.const 1 : i32
    %504 = llhd.const 2 : i32
    %505 = muli %503, %504 : i32
    %506 = addi %502, %505 : i32
    %507 = llhd.const 1 : i32
    %508 = addi %506, %507 : i32
    %509 = llhd.const 0 : i16
    %510 = llhd.shr %sel_nodes9, %509, %508 : (i16, i16, i32) -> i16
    %511 = llhd.extract_slice %510, 0 : i16 -> i1
    %512 = llhd.or %494, %511 : i1
    %513 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %479, %512 after %513 : !llhd.sig<i1>
    %514 = llhd.const 1 : i32
    %515 = llhd.const 1 : i32
    %516 = llhd.const 0 : i32
    %517 = llhd.shl %514, %516, %515 : (i32, i32, i32) -> i32
    %518 = llhd.const 1 : i32
    %519 = subi %517, %518 : i32
    %520 = llhd.const 1 : i32
    %521 = addi %519, %520 : i32
    %522 = llhd.const 0 : i4
    %523 = llhd.array_uniform %522 : !llhd.array<16xi4>
    %524 = llhd.sig "524" %523 : !llhd.array<16xi4>
    %525 = llhd.shr %index_nodes, %524, %521 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %526 = llhd.extract_element %525, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %sel_nodes10 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %527 = llhd.const 1 : i32
    %528 = llhd.const 1 : i32
    %529 = llhd.const 1 : i32
    %530 = addi %528, %529 : i32
    %531 = llhd.const 0 : i32
    %532 = llhd.shl %527, %531, %530 : (i32, i32, i32) -> i32
    %533 = llhd.const 1 : i32
    %534 = subi %532, %533 : i32
    %535 = llhd.const 1 : i32
    %536 = llhd.const 2 : i32
    %537 = muli %535, %536 : i32
    %538 = addi %534, %537 : i32
    %539 = llhd.const 0 : i16
    %540 = llhd.shr %sel_nodes10, %539, %538 : (i16, i16, i32) -> i16
    %541 = llhd.extract_slice %540, 0 : i16 -> i1
    %542 = llhd.const 1 : i1
    %543 = llhd.eq %541, %542 : i1
    %index_nodes6 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %544 = llhd.const 1 : i32
    %545 = llhd.const 1 : i32
    %546 = llhd.const 1 : i32
    %547 = addi %545, %546 : i32
    %548 = llhd.const 0 : i32
    %549 = llhd.shl %544, %548, %547 : (i32, i32, i32) -> i32
    %550 = llhd.const 1 : i32
    %551 = subi %549, %550 : i32
    %552 = llhd.const 1 : i32
    %553 = llhd.const 2 : i32
    %554 = muli %552, %553 : i32
    %555 = addi %551, %554 : i32
    %556 = llhd.const 0 : i4
    %557 = llhd.array_uniform %556 : !llhd.array<16xi4>
    %558 = llhd.shr %index_nodes6, %557, %555 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %559 = llhd.extract_element %558, 0 : !llhd.array<16xi4> -> i4
    %index_nodes7 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %560 = llhd.const 1 : i32
    %561 = llhd.const 1 : i32
    %562 = llhd.const 1 : i32
    %563 = addi %561, %562 : i32
    %564 = llhd.const 0 : i32
    %565 = llhd.shl %560, %564, %563 : (i32, i32, i32) -> i32
    %566 = llhd.const 1 : i32
    %567 = subi %565, %566 : i32
    %568 = llhd.const 1 : i32
    %569 = llhd.const 2 : i32
    %570 = muli %568, %569 : i32
    %571 = addi %567, %570 : i32
    %572 = llhd.const 1 : i32
    %573 = addi %571, %572 : i32
    %574 = llhd.const 0 : i4
    %575 = llhd.array_uniform %574 : !llhd.array<16xi4>
    %576 = llhd.shr %index_nodes7, %575, %573 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %577 = llhd.extract_element %576, 0 : !llhd.array<16xi4> -> i4
    %578 = llhd.array %577, %559 : !llhd.array<2xi4>
    %579 = llhd.dyn_extract_element %578, %543 : (!llhd.array<2xi4>, i1) -> i4
    %580 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %526, %579 after %580 : !llhd.sig<i4>
    %581 = llhd.const 1 : i32
    %582 = llhd.const 2 : i32
    %583 = llhd.const 0 : i32
    %584 = llhd.shl %581, %583, %582 : (i32, i32, i32) -> i32
    %585 = llhd.const 1 : i32
    %586 = subi %584, %585 : i32
    %587 = llhd.const 0 : i32
    %588 = addi %586, %587 : i32
    %589 = llhd.const 0 : i16
    %590 = llhd.sig "590" %589 : i16
    %591 = llhd.shr %sel_nodes, %590, %588 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %592 = llhd.extract_slice %591, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %sel_nodes11 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %593 = llhd.const 1 : i32
    %594 = llhd.const 2 : i32
    %595 = llhd.const 1 : i32
    %596 = addi %594, %595 : i32
    %597 = llhd.const 0 : i32
    %598 = llhd.shl %593, %597, %596 : (i32, i32, i32) -> i32
    %599 = llhd.const 1 : i32
    %600 = subi %598, %599 : i32
    %601 = llhd.const 0 : i32
    %602 = llhd.const 2 : i32
    %603 = muli %601, %602 : i32
    %604 = addi %600, %603 : i32
    %605 = llhd.const 0 : i16
    %606 = llhd.shr %sel_nodes11, %605, %604 : (i16, i16, i32) -> i16
    %607 = llhd.extract_slice %606, 0 : i16 -> i1
    %sel_nodes12 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %608 = llhd.const 1 : i32
    %609 = llhd.const 2 : i32
    %610 = llhd.const 1 : i32
    %611 = addi %609, %610 : i32
    %612 = llhd.const 0 : i32
    %613 = llhd.shl %608, %612, %611 : (i32, i32, i32) -> i32
    %614 = llhd.const 1 : i32
    %615 = subi %613, %614 : i32
    %616 = llhd.const 0 : i32
    %617 = llhd.const 2 : i32
    %618 = muli %616, %617 : i32
    %619 = addi %615, %618 : i32
    %620 = llhd.const 1 : i32
    %621 = addi %619, %620 : i32
    %622 = llhd.const 0 : i16
    %623 = llhd.shr %sel_nodes12, %622, %621 : (i16, i16, i32) -> i16
    %624 = llhd.extract_slice %623, 0 : i16 -> i1
    %625 = llhd.or %607, %624 : i1
    %626 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %592, %625 after %626 : !llhd.sig<i1>
    %627 = llhd.const 1 : i32
    %628 = llhd.const 2 : i32
    %629 = llhd.const 0 : i32
    %630 = llhd.shl %627, %629, %628 : (i32, i32, i32) -> i32
    %631 = llhd.const 1 : i32
    %632 = subi %630, %631 : i32
    %633 = llhd.const 0 : i32
    %634 = addi %632, %633 : i32
    %635 = llhd.const 0 : i4
    %636 = llhd.array_uniform %635 : !llhd.array<16xi4>
    %637 = llhd.sig "637" %636 : !llhd.array<16xi4>
    %638 = llhd.shr %index_nodes, %637, %634 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %639 = llhd.extract_element %638, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %sel_nodes13 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %640 = llhd.const 1 : i32
    %641 = llhd.const 2 : i32
    %642 = llhd.const 1 : i32
    %643 = addi %641, %642 : i32
    %644 = llhd.const 0 : i32
    %645 = llhd.shl %640, %644, %643 : (i32, i32, i32) -> i32
    %646 = llhd.const 1 : i32
    %647 = subi %645, %646 : i32
    %648 = llhd.const 0 : i32
    %649 = llhd.const 2 : i32
    %650 = muli %648, %649 : i32
    %651 = addi %647, %650 : i32
    %652 = llhd.const 0 : i16
    %653 = llhd.shr %sel_nodes13, %652, %651 : (i16, i16, i32) -> i16
    %654 = llhd.extract_slice %653, 0 : i16 -> i1
    %655 = llhd.const 1 : i1
    %656 = llhd.eq %654, %655 : i1
    %index_nodes8 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %657 = llhd.const 1 : i32
    %658 = llhd.const 2 : i32
    %659 = llhd.const 1 : i32
    %660 = addi %658, %659 : i32
    %661 = llhd.const 0 : i32
    %662 = llhd.shl %657, %661, %660 : (i32, i32, i32) -> i32
    %663 = llhd.const 1 : i32
    %664 = subi %662, %663 : i32
    %665 = llhd.const 0 : i32
    %666 = llhd.const 2 : i32
    %667 = muli %665, %666 : i32
    %668 = addi %664, %667 : i32
    %669 = llhd.const 0 : i4
    %670 = llhd.array_uniform %669 : !llhd.array<16xi4>
    %671 = llhd.shr %index_nodes8, %670, %668 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %672 = llhd.extract_element %671, 0 : !llhd.array<16xi4> -> i4
    %index_nodes9 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %673 = llhd.const 1 : i32
    %674 = llhd.const 2 : i32
    %675 = llhd.const 1 : i32
    %676 = addi %674, %675 : i32
    %677 = llhd.const 0 : i32
    %678 = llhd.shl %673, %677, %676 : (i32, i32, i32) -> i32
    %679 = llhd.const 1 : i32
    %680 = subi %678, %679 : i32
    %681 = llhd.const 0 : i32
    %682 = llhd.const 2 : i32
    %683 = muli %681, %682 : i32
    %684 = addi %680, %683 : i32
    %685 = llhd.const 1 : i32
    %686 = addi %684, %685 : i32
    %687 = llhd.const 0 : i4
    %688 = llhd.array_uniform %687 : !llhd.array<16xi4>
    %689 = llhd.shr %index_nodes9, %688, %686 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %690 = llhd.extract_element %689, 0 : !llhd.array<16xi4> -> i4
    %691 = llhd.array %690, %672 : !llhd.array<2xi4>
    %692 = llhd.dyn_extract_element %691, %656 : (!llhd.array<2xi4>, i1) -> i4
    %693 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %639, %692 after %693 : !llhd.sig<i4>
    %694 = llhd.const 1 : i32
    %695 = llhd.const 2 : i32
    %696 = llhd.const 0 : i32
    %697 = llhd.shl %694, %696, %695 : (i32, i32, i32) -> i32
    %698 = llhd.const 1 : i32
    %699 = subi %697, %698 : i32
    %700 = llhd.const 1 : i32
    %701 = addi %699, %700 : i32
    %702 = llhd.const 0 : i16
    %703 = llhd.sig "703" %702 : i16
    %704 = llhd.shr %sel_nodes, %703, %701 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %705 = llhd.extract_slice %704, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %sel_nodes14 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %706 = llhd.const 1 : i32
    %707 = llhd.const 2 : i32
    %708 = llhd.const 1 : i32
    %709 = addi %707, %708 : i32
    %710 = llhd.const 0 : i32
    %711 = llhd.shl %706, %710, %709 : (i32, i32, i32) -> i32
    %712 = llhd.const 1 : i32
    %713 = subi %711, %712 : i32
    %714 = llhd.const 1 : i32
    %715 = llhd.const 2 : i32
    %716 = muli %714, %715 : i32
    %717 = addi %713, %716 : i32
    %718 = llhd.const 0 : i16
    %719 = llhd.shr %sel_nodes14, %718, %717 : (i16, i16, i32) -> i16
    %720 = llhd.extract_slice %719, 0 : i16 -> i1
    %sel_nodes15 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %721 = llhd.const 1 : i32
    %722 = llhd.const 2 : i32
    %723 = llhd.const 1 : i32
    %724 = addi %722, %723 : i32
    %725 = llhd.const 0 : i32
    %726 = llhd.shl %721, %725, %724 : (i32, i32, i32) -> i32
    %727 = llhd.const 1 : i32
    %728 = subi %726, %727 : i32
    %729 = llhd.const 1 : i32
    %730 = llhd.const 2 : i32
    %731 = muli %729, %730 : i32
    %732 = addi %728, %731 : i32
    %733 = llhd.const 1 : i32
    %734 = addi %732, %733 : i32
    %735 = llhd.const 0 : i16
    %736 = llhd.shr %sel_nodes15, %735, %734 : (i16, i16, i32) -> i16
    %737 = llhd.extract_slice %736, 0 : i16 -> i1
    %738 = llhd.or %720, %737 : i1
    %739 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %705, %738 after %739 : !llhd.sig<i1>
    %740 = llhd.const 1 : i32
    %741 = llhd.const 2 : i32
    %742 = llhd.const 0 : i32
    %743 = llhd.shl %740, %742, %741 : (i32, i32, i32) -> i32
    %744 = llhd.const 1 : i32
    %745 = subi %743, %744 : i32
    %746 = llhd.const 1 : i32
    %747 = addi %745, %746 : i32
    %748 = llhd.const 0 : i4
    %749 = llhd.array_uniform %748 : !llhd.array<16xi4>
    %750 = llhd.sig "750" %749 : !llhd.array<16xi4>
    %751 = llhd.shr %index_nodes, %750, %747 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %752 = llhd.extract_element %751, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %sel_nodes16 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %753 = llhd.const 1 : i32
    %754 = llhd.const 2 : i32
    %755 = llhd.const 1 : i32
    %756 = addi %754, %755 : i32
    %757 = llhd.const 0 : i32
    %758 = llhd.shl %753, %757, %756 : (i32, i32, i32) -> i32
    %759 = llhd.const 1 : i32
    %760 = subi %758, %759 : i32
    %761 = llhd.const 1 : i32
    %762 = llhd.const 2 : i32
    %763 = muli %761, %762 : i32
    %764 = addi %760, %763 : i32
    %765 = llhd.const 0 : i16
    %766 = llhd.shr %sel_nodes16, %765, %764 : (i16, i16, i32) -> i16
    %767 = llhd.extract_slice %766, 0 : i16 -> i1
    %768 = llhd.const 1 : i1
    %769 = llhd.eq %767, %768 : i1
    %index_nodes10 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %770 = llhd.const 1 : i32
    %771 = llhd.const 2 : i32
    %772 = llhd.const 1 : i32
    %773 = addi %771, %772 : i32
    %774 = llhd.const 0 : i32
    %775 = llhd.shl %770, %774, %773 : (i32, i32, i32) -> i32
    %776 = llhd.const 1 : i32
    %777 = subi %775, %776 : i32
    %778 = llhd.const 1 : i32
    %779 = llhd.const 2 : i32
    %780 = muli %778, %779 : i32
    %781 = addi %777, %780 : i32
    %782 = llhd.const 0 : i4
    %783 = llhd.array_uniform %782 : !llhd.array<16xi4>
    %784 = llhd.shr %index_nodes10, %783, %781 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %785 = llhd.extract_element %784, 0 : !llhd.array<16xi4> -> i4
    %index_nodes11 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %786 = llhd.const 1 : i32
    %787 = llhd.const 2 : i32
    %788 = llhd.const 1 : i32
    %789 = addi %787, %788 : i32
    %790 = llhd.const 0 : i32
    %791 = llhd.shl %786, %790, %789 : (i32, i32, i32) -> i32
    %792 = llhd.const 1 : i32
    %793 = subi %791, %792 : i32
    %794 = llhd.const 1 : i32
    %795 = llhd.const 2 : i32
    %796 = muli %794, %795 : i32
    %797 = addi %793, %796 : i32
    %798 = llhd.const 1 : i32
    %799 = addi %797, %798 : i32
    %800 = llhd.const 0 : i4
    %801 = llhd.array_uniform %800 : !llhd.array<16xi4>
    %802 = llhd.shr %index_nodes11, %801, %799 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %803 = llhd.extract_element %802, 0 : !llhd.array<16xi4> -> i4
    %804 = llhd.array %803, %785 : !llhd.array<2xi4>
    %805 = llhd.dyn_extract_element %804, %769 : (!llhd.array<2xi4>, i1) -> i4
    %806 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %752, %805 after %806 : !llhd.sig<i4>
    %807 = llhd.const 1 : i32
    %808 = llhd.const 2 : i32
    %809 = llhd.const 0 : i32
    %810 = llhd.shl %807, %809, %808 : (i32, i32, i32) -> i32
    %811 = llhd.const 1 : i32
    %812 = subi %810, %811 : i32
    %813 = llhd.const 2 : i32
    %814 = addi %812, %813 : i32
    %815 = llhd.const 0 : i16
    %816 = llhd.sig "816" %815 : i16
    %817 = llhd.shr %sel_nodes, %816, %814 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %818 = llhd.extract_slice %817, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %sel_nodes17 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %819 = llhd.const 1 : i32
    %820 = llhd.const 2 : i32
    %821 = llhd.const 1 : i32
    %822 = addi %820, %821 : i32
    %823 = llhd.const 0 : i32
    %824 = llhd.shl %819, %823, %822 : (i32, i32, i32) -> i32
    %825 = llhd.const 1 : i32
    %826 = subi %824, %825 : i32
    %827 = llhd.const 2 : i32
    %828 = llhd.const 2 : i32
    %829 = muli %827, %828 : i32
    %830 = addi %826, %829 : i32
    %831 = llhd.const 0 : i16
    %832 = llhd.shr %sel_nodes17, %831, %830 : (i16, i16, i32) -> i16
    %833 = llhd.extract_slice %832, 0 : i16 -> i1
    %sel_nodes18 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %834 = llhd.const 1 : i32
    %835 = llhd.const 2 : i32
    %836 = llhd.const 1 : i32
    %837 = addi %835, %836 : i32
    %838 = llhd.const 0 : i32
    %839 = llhd.shl %834, %838, %837 : (i32, i32, i32) -> i32
    %840 = llhd.const 1 : i32
    %841 = subi %839, %840 : i32
    %842 = llhd.const 2 : i32
    %843 = llhd.const 2 : i32
    %844 = muli %842, %843 : i32
    %845 = addi %841, %844 : i32
    %846 = llhd.const 1 : i32
    %847 = addi %845, %846 : i32
    %848 = llhd.const 0 : i16
    %849 = llhd.shr %sel_nodes18, %848, %847 : (i16, i16, i32) -> i16
    %850 = llhd.extract_slice %849, 0 : i16 -> i1
    %851 = llhd.or %833, %850 : i1
    %852 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %818, %851 after %852 : !llhd.sig<i1>
    %853 = llhd.const 1 : i32
    %854 = llhd.const 2 : i32
    %855 = llhd.const 0 : i32
    %856 = llhd.shl %853, %855, %854 : (i32, i32, i32) -> i32
    %857 = llhd.const 1 : i32
    %858 = subi %856, %857 : i32
    %859 = llhd.const 2 : i32
    %860 = addi %858, %859 : i32
    %861 = llhd.const 0 : i4
    %862 = llhd.array_uniform %861 : !llhd.array<16xi4>
    %863 = llhd.sig "863" %862 : !llhd.array<16xi4>
    %864 = llhd.shr %index_nodes, %863, %860 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %865 = llhd.extract_element %864, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %sel_nodes19 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %866 = llhd.const 1 : i32
    %867 = llhd.const 2 : i32
    %868 = llhd.const 1 : i32
    %869 = addi %867, %868 : i32
    %870 = llhd.const 0 : i32
    %871 = llhd.shl %866, %870, %869 : (i32, i32, i32) -> i32
    %872 = llhd.const 1 : i32
    %873 = subi %871, %872 : i32
    %874 = llhd.const 2 : i32
    %875 = llhd.const 2 : i32
    %876 = muli %874, %875 : i32
    %877 = addi %873, %876 : i32
    %878 = llhd.const 0 : i16
    %879 = llhd.shr %sel_nodes19, %878, %877 : (i16, i16, i32) -> i16
    %880 = llhd.extract_slice %879, 0 : i16 -> i1
    %881 = llhd.const 1 : i1
    %882 = llhd.eq %880, %881 : i1
    %index_nodes12 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %883 = llhd.const 1 : i32
    %884 = llhd.const 2 : i32
    %885 = llhd.const 1 : i32
    %886 = addi %884, %885 : i32
    %887 = llhd.const 0 : i32
    %888 = llhd.shl %883, %887, %886 : (i32, i32, i32) -> i32
    %889 = llhd.const 1 : i32
    %890 = subi %888, %889 : i32
    %891 = llhd.const 2 : i32
    %892 = llhd.const 2 : i32
    %893 = muli %891, %892 : i32
    %894 = addi %890, %893 : i32
    %895 = llhd.const 0 : i4
    %896 = llhd.array_uniform %895 : !llhd.array<16xi4>
    %897 = llhd.shr %index_nodes12, %896, %894 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %898 = llhd.extract_element %897, 0 : !llhd.array<16xi4> -> i4
    %index_nodes13 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %899 = llhd.const 1 : i32
    %900 = llhd.const 2 : i32
    %901 = llhd.const 1 : i32
    %902 = addi %900, %901 : i32
    %903 = llhd.const 0 : i32
    %904 = llhd.shl %899, %903, %902 : (i32, i32, i32) -> i32
    %905 = llhd.const 1 : i32
    %906 = subi %904, %905 : i32
    %907 = llhd.const 2 : i32
    %908 = llhd.const 2 : i32
    %909 = muli %907, %908 : i32
    %910 = addi %906, %909 : i32
    %911 = llhd.const 1 : i32
    %912 = addi %910, %911 : i32
    %913 = llhd.const 0 : i4
    %914 = llhd.array_uniform %913 : !llhd.array<16xi4>
    %915 = llhd.shr %index_nodes13, %914, %912 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %916 = llhd.extract_element %915, 0 : !llhd.array<16xi4> -> i4
    %917 = llhd.array %916, %898 : !llhd.array<2xi4>
    %918 = llhd.dyn_extract_element %917, %882 : (!llhd.array<2xi4>, i1) -> i4
    %919 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %865, %918 after %919 : !llhd.sig<i4>
    %920 = llhd.const 1 : i32
    %921 = llhd.const 2 : i32
    %922 = llhd.const 0 : i32
    %923 = llhd.shl %920, %922, %921 : (i32, i32, i32) -> i32
    %924 = llhd.const 1 : i32
    %925 = subi %923, %924 : i32
    %926 = llhd.const 3 : i32
    %927 = addi %925, %926 : i32
    %928 = llhd.const 0 : i16
    %929 = llhd.sig "929" %928 : i16
    %930 = llhd.shr %sel_nodes, %929, %927 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %931 = llhd.extract_slice %930, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %sel_nodes20 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %932 = llhd.const 1 : i32
    %933 = llhd.const 2 : i32
    %934 = llhd.const 1 : i32
    %935 = addi %933, %934 : i32
    %936 = llhd.const 0 : i32
    %937 = llhd.shl %932, %936, %935 : (i32, i32, i32) -> i32
    %938 = llhd.const 1 : i32
    %939 = subi %937, %938 : i32
    %940 = llhd.const 3 : i32
    %941 = llhd.const 2 : i32
    %942 = muli %940, %941 : i32
    %943 = addi %939, %942 : i32
    %944 = llhd.const 0 : i16
    %945 = llhd.shr %sel_nodes20, %944, %943 : (i16, i16, i32) -> i16
    %946 = llhd.extract_slice %945, 0 : i16 -> i1
    %sel_nodes21 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %947 = llhd.const 1 : i32
    %948 = llhd.const 2 : i32
    %949 = llhd.const 1 : i32
    %950 = addi %948, %949 : i32
    %951 = llhd.const 0 : i32
    %952 = llhd.shl %947, %951, %950 : (i32, i32, i32) -> i32
    %953 = llhd.const 1 : i32
    %954 = subi %952, %953 : i32
    %955 = llhd.const 3 : i32
    %956 = llhd.const 2 : i32
    %957 = muli %955, %956 : i32
    %958 = addi %954, %957 : i32
    %959 = llhd.const 1 : i32
    %960 = addi %958, %959 : i32
    %961 = llhd.const 0 : i16
    %962 = llhd.shr %sel_nodes21, %961, %960 : (i16, i16, i32) -> i16
    %963 = llhd.extract_slice %962, 0 : i16 -> i1
    %964 = llhd.or %946, %963 : i1
    %965 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %931, %964 after %965 : !llhd.sig<i1>
    %966 = llhd.const 1 : i32
    %967 = llhd.const 2 : i32
    %968 = llhd.const 0 : i32
    %969 = llhd.shl %966, %968, %967 : (i32, i32, i32) -> i32
    %970 = llhd.const 1 : i32
    %971 = subi %969, %970 : i32
    %972 = llhd.const 3 : i32
    %973 = addi %971, %972 : i32
    %974 = llhd.const 0 : i4
    %975 = llhd.array_uniform %974 : !llhd.array<16xi4>
    %976 = llhd.sig "976" %975 : !llhd.array<16xi4>
    %977 = llhd.shr %index_nodes, %976, %973 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %978 = llhd.extract_element %977, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %sel_nodes22 = llhd.prb %sel_nodes : !llhd.sig<i16>
    %979 = llhd.const 1 : i32
    %980 = llhd.const 2 : i32
    %981 = llhd.const 1 : i32
    %982 = addi %980, %981 : i32
    %983 = llhd.const 0 : i32
    %984 = llhd.shl %979, %983, %982 : (i32, i32, i32) -> i32
    %985 = llhd.const 1 : i32
    %986 = subi %984, %985 : i32
    %987 = llhd.const 3 : i32
    %988 = llhd.const 2 : i32
    %989 = muli %987, %988 : i32
    %990 = addi %986, %989 : i32
    %991 = llhd.const 0 : i16
    %992 = llhd.shr %sel_nodes22, %991, %990 : (i16, i16, i32) -> i16
    %993 = llhd.extract_slice %992, 0 : i16 -> i1
    %994 = llhd.const 1 : i1
    %995 = llhd.eq %993, %994 : i1
    %index_nodes14 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %996 = llhd.const 1 : i32
    %997 = llhd.const 2 : i32
    %998 = llhd.const 1 : i32
    %999 = addi %997, %998 : i32
    %1000 = llhd.const 0 : i32
    %1001 = llhd.shl %996, %1000, %999 : (i32, i32, i32) -> i32
    %1002 = llhd.const 1 : i32
    %1003 = subi %1001, %1002 : i32
    %1004 = llhd.const 3 : i32
    %1005 = llhd.const 2 : i32
    %1006 = muli %1004, %1005 : i32
    %1007 = addi %1003, %1006 : i32
    %1008 = llhd.const 0 : i4
    %1009 = llhd.array_uniform %1008 : !llhd.array<16xi4>
    %1010 = llhd.shr %index_nodes14, %1009, %1007 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1011 = llhd.extract_element %1010, 0 : !llhd.array<16xi4> -> i4
    %index_nodes15 = llhd.prb %index_nodes : !llhd.sig<!llhd.array<16xi4>>
    %1012 = llhd.const 1 : i32
    %1013 = llhd.const 2 : i32
    %1014 = llhd.const 1 : i32
    %1015 = addi %1013, %1014 : i32
    %1016 = llhd.const 0 : i32
    %1017 = llhd.shl %1012, %1016, %1015 : (i32, i32, i32) -> i32
    %1018 = llhd.const 1 : i32
    %1019 = subi %1017, %1018 : i32
    %1020 = llhd.const 3 : i32
    %1021 = llhd.const 2 : i32
    %1022 = muli %1020, %1021 : i32
    %1023 = addi %1019, %1022 : i32
    %1024 = llhd.const 1 : i32
    %1025 = addi %1023, %1024 : i32
    %1026 = llhd.const 0 : i4
    %1027 = llhd.array_uniform %1026 : !llhd.array<16xi4>
    %1028 = llhd.shr %index_nodes15, %1027, %1025 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1029 = llhd.extract_element %1028, 0 : !llhd.array<16xi4> -> i4
    %1030 = llhd.array %1029, %1011 : !llhd.array<2xi4>
    %1031 = llhd.dyn_extract_element %1030, %995 : (!llhd.array<2xi4>, i1) -> i4
    %1032 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %978, %1031 after %1032 : !llhd.sig<i4>
    %1033 = llhd.const 1 : i32
    %1034 = llhd.const 3 : i32
    %1035 = llhd.const 0 : i32
    %1036 = llhd.shl %1033, %1035, %1034 : (i32, i32, i32) -> i32
    %1037 = llhd.const 1 : i32
    %1038 = subi %1036, %1037 : i32
    %1039 = llhd.const 0 : i32
    %1040 = addi %1038, %1039 : i32
    %1041 = llhd.const 0 : i16
    %1042 = llhd.sig "1042" %1041 : i16
    %1043 = llhd.shr %sel_nodes, %1042, %1040 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %1044 = llhd.extract_slice %1043, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %in_tmp1 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1045 = llhd.const 0 : i32
    %1046 = llhd.const 2 : i32
    %1047 = muli %1045, %1046 : i32
    %1048 = llhd.const 0 : i16
    %1049 = llhd.shr %in_tmp1, %1048, %1047 : (i16, i16, i32) -> i16
    %1050 = llhd.extract_slice %1049, 0 : i16 -> i1
    %in_tmp2 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1051 = llhd.const 0 : i32
    %1052 = llhd.const 2 : i32
    %1053 = muli %1051, %1052 : i32
    %1054 = llhd.const 1 : i32
    %1055 = addi %1053, %1054 : i32
    %1056 = llhd.const 0 : i16
    %1057 = llhd.shr %in_tmp2, %1056, %1055 : (i16, i16, i32) -> i16
    %1058 = llhd.extract_slice %1057, 0 : i16 -> i1
    %1059 = llhd.or %1050, %1058 : i1
    %1060 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1044, %1059 after %1060 : !llhd.sig<i1>
    %1061 = llhd.const 1 : i32
    %1062 = llhd.const 3 : i32
    %1063 = llhd.const 0 : i32
    %1064 = llhd.shl %1061, %1063, %1062 : (i32, i32, i32) -> i32
    %1065 = llhd.const 1 : i32
    %1066 = subi %1064, %1065 : i32
    %1067 = llhd.const 0 : i32
    %1068 = addi %1066, %1067 : i32
    %1069 = llhd.const 0 : i4
    %1070 = llhd.array_uniform %1069 : !llhd.array<16xi4>
    %1071 = llhd.sig "1071" %1070 : !llhd.array<16xi4>
    %1072 = llhd.shr %index_nodes, %1071, %1068 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %1073 = llhd.extract_element %1072, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %in_tmp3 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1074 = llhd.const 0 : i32
    %1075 = llhd.const 2 : i32
    %1076 = muli %1074, %1075 : i32
    %1077 = llhd.const 0 : i16
    %1078 = llhd.shr %in_tmp3, %1077, %1076 : (i16, i16, i32) -> i16
    %1079 = llhd.extract_slice %1078, 0 : i16 -> i1
    %1080 = llhd.const 1 : i1
    %1081 = llhd.eq %1079, %1080 : i1
    %index_lut1 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1082 = llhd.const 0 : i32
    %1083 = llhd.const 2 : i32
    %1084 = muli %1082, %1083 : i32
    %1085 = llhd.const 0 : i4
    %1086 = llhd.array_uniform %1085 : !llhd.array<16xi4>
    %1087 = llhd.shr %index_lut1, %1086, %1084 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1088 = llhd.extract_element %1087, 0 : !llhd.array<16xi4> -> i4
    %index_lut2 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1089 = llhd.const 0 : i32
    %1090 = llhd.const 2 : i32
    %1091 = muli %1089, %1090 : i32
    %1092 = llhd.const 1 : i32
    %1093 = addi %1091, %1092 : i32
    %1094 = llhd.const 0 : i4
    %1095 = llhd.array_uniform %1094 : !llhd.array<16xi4>
    %1096 = llhd.shr %index_lut2, %1095, %1093 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1097 = llhd.extract_element %1096, 0 : !llhd.array<16xi4> -> i4
    %1098 = llhd.array %1097, %1088 : !llhd.array<2xi4>
    %1099 = llhd.dyn_extract_element %1098, %1081 : (!llhd.array<2xi4>, i1) -> i4
    %1100 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1073, %1099 after %1100 : !llhd.sig<i4>
    %1101 = llhd.const 1 : i32
    %1102 = llhd.const 3 : i32
    %1103 = llhd.const 0 : i32
    %1104 = llhd.shl %1101, %1103, %1102 : (i32, i32, i32) -> i32
    %1105 = llhd.const 1 : i32
    %1106 = subi %1104, %1105 : i32
    %1107 = llhd.const 1 : i32
    %1108 = addi %1106, %1107 : i32
    %1109 = llhd.const 0 : i16
    %1110 = llhd.sig "1110" %1109 : i16
    %1111 = llhd.shr %sel_nodes, %1110, %1108 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %1112 = llhd.extract_slice %1111, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %in_tmp4 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1113 = llhd.const 1 : i32
    %1114 = llhd.const 2 : i32
    %1115 = muli %1113, %1114 : i32
    %1116 = llhd.const 0 : i16
    %1117 = llhd.shr %in_tmp4, %1116, %1115 : (i16, i16, i32) -> i16
    %1118 = llhd.extract_slice %1117, 0 : i16 -> i1
    %in_tmp5 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1119 = llhd.const 1 : i32
    %1120 = llhd.const 2 : i32
    %1121 = muli %1119, %1120 : i32
    %1122 = llhd.const 1 : i32
    %1123 = addi %1121, %1122 : i32
    %1124 = llhd.const 0 : i16
    %1125 = llhd.shr %in_tmp5, %1124, %1123 : (i16, i16, i32) -> i16
    %1126 = llhd.extract_slice %1125, 0 : i16 -> i1
    %1127 = llhd.or %1118, %1126 : i1
    %1128 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1112, %1127 after %1128 : !llhd.sig<i1>
    %1129 = llhd.const 1 : i32
    %1130 = llhd.const 3 : i32
    %1131 = llhd.const 0 : i32
    %1132 = llhd.shl %1129, %1131, %1130 : (i32, i32, i32) -> i32
    %1133 = llhd.const 1 : i32
    %1134 = subi %1132, %1133 : i32
    %1135 = llhd.const 1 : i32
    %1136 = addi %1134, %1135 : i32
    %1137 = llhd.const 0 : i4
    %1138 = llhd.array_uniform %1137 : !llhd.array<16xi4>
    %1139 = llhd.sig "1139" %1138 : !llhd.array<16xi4>
    %1140 = llhd.shr %index_nodes, %1139, %1136 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %1141 = llhd.extract_element %1140, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %in_tmp6 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1142 = llhd.const 1 : i32
    %1143 = llhd.const 2 : i32
    %1144 = muli %1142, %1143 : i32
    %1145 = llhd.const 0 : i16
    %1146 = llhd.shr %in_tmp6, %1145, %1144 : (i16, i16, i32) -> i16
    %1147 = llhd.extract_slice %1146, 0 : i16 -> i1
    %1148 = llhd.const 1 : i1
    %1149 = llhd.eq %1147, %1148 : i1
    %index_lut3 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1150 = llhd.const 1 : i32
    %1151 = llhd.const 2 : i32
    %1152 = muli %1150, %1151 : i32
    %1153 = llhd.const 0 : i4
    %1154 = llhd.array_uniform %1153 : !llhd.array<16xi4>
    %1155 = llhd.shr %index_lut3, %1154, %1152 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1156 = llhd.extract_element %1155, 0 : !llhd.array<16xi4> -> i4
    %index_lut4 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1157 = llhd.const 1 : i32
    %1158 = llhd.const 2 : i32
    %1159 = muli %1157, %1158 : i32
    %1160 = llhd.const 1 : i32
    %1161 = addi %1159, %1160 : i32
    %1162 = llhd.const 0 : i4
    %1163 = llhd.array_uniform %1162 : !llhd.array<16xi4>
    %1164 = llhd.shr %index_lut4, %1163, %1161 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1165 = llhd.extract_element %1164, 0 : !llhd.array<16xi4> -> i4
    %1166 = llhd.array %1165, %1156 : !llhd.array<2xi4>
    %1167 = llhd.dyn_extract_element %1166, %1149 : (!llhd.array<2xi4>, i1) -> i4
    %1168 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1141, %1167 after %1168 : !llhd.sig<i4>
    %1169 = llhd.const 1 : i32
    %1170 = llhd.const 3 : i32
    %1171 = llhd.const 0 : i32
    %1172 = llhd.shl %1169, %1171, %1170 : (i32, i32, i32) -> i32
    %1173 = llhd.const 1 : i32
    %1174 = subi %1172, %1173 : i32
    %1175 = llhd.const 2 : i32
    %1176 = addi %1174, %1175 : i32
    %1177 = llhd.const 0 : i16
    %1178 = llhd.sig "1178" %1177 : i16
    %1179 = llhd.shr %sel_nodes, %1178, %1176 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %1180 = llhd.extract_slice %1179, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %in_tmp7 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1181 = llhd.const 2 : i32
    %1182 = llhd.const 2 : i32
    %1183 = muli %1181, %1182 : i32
    %1184 = llhd.const 0 : i16
    %1185 = llhd.shr %in_tmp7, %1184, %1183 : (i16, i16, i32) -> i16
    %1186 = llhd.extract_slice %1185, 0 : i16 -> i1
    %in_tmp8 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1187 = llhd.const 2 : i32
    %1188 = llhd.const 2 : i32
    %1189 = muli %1187, %1188 : i32
    %1190 = llhd.const 1 : i32
    %1191 = addi %1189, %1190 : i32
    %1192 = llhd.const 0 : i16
    %1193 = llhd.shr %in_tmp8, %1192, %1191 : (i16, i16, i32) -> i16
    %1194 = llhd.extract_slice %1193, 0 : i16 -> i1
    %1195 = llhd.or %1186, %1194 : i1
    %1196 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1180, %1195 after %1196 : !llhd.sig<i1>
    %1197 = llhd.const 1 : i32
    %1198 = llhd.const 3 : i32
    %1199 = llhd.const 0 : i32
    %1200 = llhd.shl %1197, %1199, %1198 : (i32, i32, i32) -> i32
    %1201 = llhd.const 1 : i32
    %1202 = subi %1200, %1201 : i32
    %1203 = llhd.const 2 : i32
    %1204 = addi %1202, %1203 : i32
    %1205 = llhd.const 0 : i4
    %1206 = llhd.array_uniform %1205 : !llhd.array<16xi4>
    %1207 = llhd.sig "1207" %1206 : !llhd.array<16xi4>
    %1208 = llhd.shr %index_nodes, %1207, %1204 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %1209 = llhd.extract_element %1208, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %in_tmp9 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1210 = llhd.const 2 : i32
    %1211 = llhd.const 2 : i32
    %1212 = muli %1210, %1211 : i32
    %1213 = llhd.const 0 : i16
    %1214 = llhd.shr %in_tmp9, %1213, %1212 : (i16, i16, i32) -> i16
    %1215 = llhd.extract_slice %1214, 0 : i16 -> i1
    %1216 = llhd.const 1 : i1
    %1217 = llhd.eq %1215, %1216 : i1
    %index_lut5 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1218 = llhd.const 2 : i32
    %1219 = llhd.const 2 : i32
    %1220 = muli %1218, %1219 : i32
    %1221 = llhd.const 0 : i4
    %1222 = llhd.array_uniform %1221 : !llhd.array<16xi4>
    %1223 = llhd.shr %index_lut5, %1222, %1220 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1224 = llhd.extract_element %1223, 0 : !llhd.array<16xi4> -> i4
    %index_lut6 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1225 = llhd.const 2 : i32
    %1226 = llhd.const 2 : i32
    %1227 = muli %1225, %1226 : i32
    %1228 = llhd.const 1 : i32
    %1229 = addi %1227, %1228 : i32
    %1230 = llhd.const 0 : i4
    %1231 = llhd.array_uniform %1230 : !llhd.array<16xi4>
    %1232 = llhd.shr %index_lut6, %1231, %1229 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1233 = llhd.extract_element %1232, 0 : !llhd.array<16xi4> -> i4
    %1234 = llhd.array %1233, %1224 : !llhd.array<2xi4>
    %1235 = llhd.dyn_extract_element %1234, %1217 : (!llhd.array<2xi4>, i1) -> i4
    %1236 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1209, %1235 after %1236 : !llhd.sig<i4>
    %1237 = llhd.const 1 : i32
    %1238 = llhd.const 3 : i32
    %1239 = llhd.const 0 : i32
    %1240 = llhd.shl %1237, %1239, %1238 : (i32, i32, i32) -> i32
    %1241 = llhd.const 1 : i32
    %1242 = subi %1240, %1241 : i32
    %1243 = llhd.const 3 : i32
    %1244 = addi %1242, %1243 : i32
    %1245 = llhd.const 0 : i16
    %1246 = llhd.sig "1246" %1245 : i16
    %1247 = llhd.shr %sel_nodes, %1246, %1244 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %1248 = llhd.extract_slice %1247, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %in_tmp10 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1249 = llhd.const 3 : i32
    %1250 = llhd.const 2 : i32
    %1251 = muli %1249, %1250 : i32
    %1252 = llhd.const 0 : i16
    %1253 = llhd.shr %in_tmp10, %1252, %1251 : (i16, i16, i32) -> i16
    %1254 = llhd.extract_slice %1253, 0 : i16 -> i1
    %in_tmp11 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1255 = llhd.const 3 : i32
    %1256 = llhd.const 2 : i32
    %1257 = muli %1255, %1256 : i32
    %1258 = llhd.const 1 : i32
    %1259 = addi %1257, %1258 : i32
    %1260 = llhd.const 0 : i16
    %1261 = llhd.shr %in_tmp11, %1260, %1259 : (i16, i16, i32) -> i16
    %1262 = llhd.extract_slice %1261, 0 : i16 -> i1
    %1263 = llhd.or %1254, %1262 : i1
    %1264 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1248, %1263 after %1264 : !llhd.sig<i1>
    %1265 = llhd.const 1 : i32
    %1266 = llhd.const 3 : i32
    %1267 = llhd.const 0 : i32
    %1268 = llhd.shl %1265, %1267, %1266 : (i32, i32, i32) -> i32
    %1269 = llhd.const 1 : i32
    %1270 = subi %1268, %1269 : i32
    %1271 = llhd.const 3 : i32
    %1272 = addi %1270, %1271 : i32
    %1273 = llhd.const 0 : i4
    %1274 = llhd.array_uniform %1273 : !llhd.array<16xi4>
    %1275 = llhd.sig "1275" %1274 : !llhd.array<16xi4>
    %1276 = llhd.shr %index_nodes, %1275, %1272 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %1277 = llhd.extract_element %1276, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %in_tmp12 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1278 = llhd.const 3 : i32
    %1279 = llhd.const 2 : i32
    %1280 = muli %1278, %1279 : i32
    %1281 = llhd.const 0 : i16
    %1282 = llhd.shr %in_tmp12, %1281, %1280 : (i16, i16, i32) -> i16
    %1283 = llhd.extract_slice %1282, 0 : i16 -> i1
    %1284 = llhd.const 1 : i1
    %1285 = llhd.eq %1283, %1284 : i1
    %index_lut7 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1286 = llhd.const 3 : i32
    %1287 = llhd.const 2 : i32
    %1288 = muli %1286, %1287 : i32
    %1289 = llhd.const 0 : i4
    %1290 = llhd.array_uniform %1289 : !llhd.array<16xi4>
    %1291 = llhd.shr %index_lut7, %1290, %1288 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1292 = llhd.extract_element %1291, 0 : !llhd.array<16xi4> -> i4
    %index_lut8 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1293 = llhd.const 3 : i32
    %1294 = llhd.const 2 : i32
    %1295 = muli %1293, %1294 : i32
    %1296 = llhd.const 1 : i32
    %1297 = addi %1295, %1296 : i32
    %1298 = llhd.const 0 : i4
    %1299 = llhd.array_uniform %1298 : !llhd.array<16xi4>
    %1300 = llhd.shr %index_lut8, %1299, %1297 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1301 = llhd.extract_element %1300, 0 : !llhd.array<16xi4> -> i4
    %1302 = llhd.array %1301, %1292 : !llhd.array<2xi4>
    %1303 = llhd.dyn_extract_element %1302, %1285 : (!llhd.array<2xi4>, i1) -> i4
    %1304 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1277, %1303 after %1304 : !llhd.sig<i4>
    %1305 = llhd.const 1 : i32
    %1306 = llhd.const 3 : i32
    %1307 = llhd.const 0 : i32
    %1308 = llhd.shl %1305, %1307, %1306 : (i32, i32, i32) -> i32
    %1309 = llhd.const 1 : i32
    %1310 = subi %1308, %1309 : i32
    %1311 = llhd.const 4 : i32
    %1312 = addi %1310, %1311 : i32
    %1313 = llhd.const 0 : i16
    %1314 = llhd.sig "1314" %1313 : i16
    %1315 = llhd.shr %sel_nodes, %1314, %1312 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %1316 = llhd.extract_slice %1315, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %in_tmp13 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1317 = llhd.const 4 : i32
    %1318 = llhd.const 2 : i32
    %1319 = muli %1317, %1318 : i32
    %1320 = llhd.const 0 : i16
    %1321 = llhd.shr %in_tmp13, %1320, %1319 : (i16, i16, i32) -> i16
    %1322 = llhd.extract_slice %1321, 0 : i16 -> i1
    %in_tmp14 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1323 = llhd.const 4 : i32
    %1324 = llhd.const 2 : i32
    %1325 = muli %1323, %1324 : i32
    %1326 = llhd.const 1 : i32
    %1327 = addi %1325, %1326 : i32
    %1328 = llhd.const 0 : i16
    %1329 = llhd.shr %in_tmp14, %1328, %1327 : (i16, i16, i32) -> i16
    %1330 = llhd.extract_slice %1329, 0 : i16 -> i1
    %1331 = llhd.or %1322, %1330 : i1
    %1332 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1316, %1331 after %1332 : !llhd.sig<i1>
    %1333 = llhd.const 1 : i32
    %1334 = llhd.const 3 : i32
    %1335 = llhd.const 0 : i32
    %1336 = llhd.shl %1333, %1335, %1334 : (i32, i32, i32) -> i32
    %1337 = llhd.const 1 : i32
    %1338 = subi %1336, %1337 : i32
    %1339 = llhd.const 4 : i32
    %1340 = addi %1338, %1339 : i32
    %1341 = llhd.const 0 : i4
    %1342 = llhd.array_uniform %1341 : !llhd.array<16xi4>
    %1343 = llhd.sig "1343" %1342 : !llhd.array<16xi4>
    %1344 = llhd.shr %index_nodes, %1343, %1340 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %1345 = llhd.extract_element %1344, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %in_tmp15 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1346 = llhd.const 4 : i32
    %1347 = llhd.const 2 : i32
    %1348 = muli %1346, %1347 : i32
    %1349 = llhd.const 0 : i16
    %1350 = llhd.shr %in_tmp15, %1349, %1348 : (i16, i16, i32) -> i16
    %1351 = llhd.extract_slice %1350, 0 : i16 -> i1
    %1352 = llhd.const 1 : i1
    %1353 = llhd.eq %1351, %1352 : i1
    %index_lut9 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1354 = llhd.const 4 : i32
    %1355 = llhd.const 2 : i32
    %1356 = muli %1354, %1355 : i32
    %1357 = llhd.const 0 : i4
    %1358 = llhd.array_uniform %1357 : !llhd.array<16xi4>
    %1359 = llhd.shr %index_lut9, %1358, %1356 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1360 = llhd.extract_element %1359, 0 : !llhd.array<16xi4> -> i4
    %index_lut10 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1361 = llhd.const 4 : i32
    %1362 = llhd.const 2 : i32
    %1363 = muli %1361, %1362 : i32
    %1364 = llhd.const 1 : i32
    %1365 = addi %1363, %1364 : i32
    %1366 = llhd.const 0 : i4
    %1367 = llhd.array_uniform %1366 : !llhd.array<16xi4>
    %1368 = llhd.shr %index_lut10, %1367, %1365 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1369 = llhd.extract_element %1368, 0 : !llhd.array<16xi4> -> i4
    %1370 = llhd.array %1369, %1360 : !llhd.array<2xi4>
    %1371 = llhd.dyn_extract_element %1370, %1353 : (!llhd.array<2xi4>, i1) -> i4
    %1372 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1345, %1371 after %1372 : !llhd.sig<i4>
    %1373 = llhd.const 1 : i32
    %1374 = llhd.const 3 : i32
    %1375 = llhd.const 0 : i32
    %1376 = llhd.shl %1373, %1375, %1374 : (i32, i32, i32) -> i32
    %1377 = llhd.const 1 : i32
    %1378 = subi %1376, %1377 : i32
    %1379 = llhd.const 5 : i32
    %1380 = addi %1378, %1379 : i32
    %1381 = llhd.const 0 : i16
    %1382 = llhd.sig "1382" %1381 : i16
    %1383 = llhd.shr %sel_nodes, %1382, %1380 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %1384 = llhd.extract_slice %1383, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %in_tmp16 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1385 = llhd.const 5 : i32
    %1386 = llhd.const 2 : i32
    %1387 = muli %1385, %1386 : i32
    %1388 = llhd.const 0 : i16
    %1389 = llhd.shr %in_tmp16, %1388, %1387 : (i16, i16, i32) -> i16
    %1390 = llhd.extract_slice %1389, 0 : i16 -> i1
    %in_tmp17 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1391 = llhd.const 5 : i32
    %1392 = llhd.const 2 : i32
    %1393 = muli %1391, %1392 : i32
    %1394 = llhd.const 1 : i32
    %1395 = addi %1393, %1394 : i32
    %1396 = llhd.const 0 : i16
    %1397 = llhd.shr %in_tmp17, %1396, %1395 : (i16, i16, i32) -> i16
    %1398 = llhd.extract_slice %1397, 0 : i16 -> i1
    %1399 = llhd.or %1390, %1398 : i1
    %1400 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1384, %1399 after %1400 : !llhd.sig<i1>
    %1401 = llhd.const 1 : i32
    %1402 = llhd.const 3 : i32
    %1403 = llhd.const 0 : i32
    %1404 = llhd.shl %1401, %1403, %1402 : (i32, i32, i32) -> i32
    %1405 = llhd.const 1 : i32
    %1406 = subi %1404, %1405 : i32
    %1407 = llhd.const 5 : i32
    %1408 = addi %1406, %1407 : i32
    %1409 = llhd.const 0 : i4
    %1410 = llhd.array_uniform %1409 : !llhd.array<16xi4>
    %1411 = llhd.sig "1411" %1410 : !llhd.array<16xi4>
    %1412 = llhd.shr %index_nodes, %1411, %1408 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %1413 = llhd.extract_element %1412, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %in_tmp18 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1414 = llhd.const 5 : i32
    %1415 = llhd.const 2 : i32
    %1416 = muli %1414, %1415 : i32
    %1417 = llhd.const 0 : i16
    %1418 = llhd.shr %in_tmp18, %1417, %1416 : (i16, i16, i32) -> i16
    %1419 = llhd.extract_slice %1418, 0 : i16 -> i1
    %1420 = llhd.const 1 : i1
    %1421 = llhd.eq %1419, %1420 : i1
    %index_lut11 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1422 = llhd.const 5 : i32
    %1423 = llhd.const 2 : i32
    %1424 = muli %1422, %1423 : i32
    %1425 = llhd.const 0 : i4
    %1426 = llhd.array_uniform %1425 : !llhd.array<16xi4>
    %1427 = llhd.shr %index_lut11, %1426, %1424 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1428 = llhd.extract_element %1427, 0 : !llhd.array<16xi4> -> i4
    %index_lut12 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1429 = llhd.const 5 : i32
    %1430 = llhd.const 2 : i32
    %1431 = muli %1429, %1430 : i32
    %1432 = llhd.const 1 : i32
    %1433 = addi %1431, %1432 : i32
    %1434 = llhd.const 0 : i4
    %1435 = llhd.array_uniform %1434 : !llhd.array<16xi4>
    %1436 = llhd.shr %index_lut12, %1435, %1433 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1437 = llhd.extract_element %1436, 0 : !llhd.array<16xi4> -> i4
    %1438 = llhd.array %1437, %1428 : !llhd.array<2xi4>
    %1439 = llhd.dyn_extract_element %1438, %1421 : (!llhd.array<2xi4>, i1) -> i4
    %1440 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1413, %1439 after %1440 : !llhd.sig<i4>
    %1441 = llhd.const 1 : i32
    %1442 = llhd.const 3 : i32
    %1443 = llhd.const 0 : i32
    %1444 = llhd.shl %1441, %1443, %1442 : (i32, i32, i32) -> i32
    %1445 = llhd.const 1 : i32
    %1446 = subi %1444, %1445 : i32
    %1447 = llhd.const 6 : i32
    %1448 = addi %1446, %1447 : i32
    %1449 = llhd.const 0 : i16
    %1450 = llhd.sig "1450" %1449 : i16
    %1451 = llhd.shr %sel_nodes, %1450, %1448 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %1452 = llhd.extract_slice %1451, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %in_tmp19 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1453 = llhd.const 6 : i32
    %1454 = llhd.const 2 : i32
    %1455 = muli %1453, %1454 : i32
    %1456 = llhd.const 0 : i16
    %1457 = llhd.shr %in_tmp19, %1456, %1455 : (i16, i16, i32) -> i16
    %1458 = llhd.extract_slice %1457, 0 : i16 -> i1
    %in_tmp20 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1459 = llhd.const 6 : i32
    %1460 = llhd.const 2 : i32
    %1461 = muli %1459, %1460 : i32
    %1462 = llhd.const 1 : i32
    %1463 = addi %1461, %1462 : i32
    %1464 = llhd.const 0 : i16
    %1465 = llhd.shr %in_tmp20, %1464, %1463 : (i16, i16, i32) -> i16
    %1466 = llhd.extract_slice %1465, 0 : i16 -> i1
    %1467 = llhd.or %1458, %1466 : i1
    %1468 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1452, %1467 after %1468 : !llhd.sig<i1>
    %1469 = llhd.const 1 : i32
    %1470 = llhd.const 3 : i32
    %1471 = llhd.const 0 : i32
    %1472 = llhd.shl %1469, %1471, %1470 : (i32, i32, i32) -> i32
    %1473 = llhd.const 1 : i32
    %1474 = subi %1472, %1473 : i32
    %1475 = llhd.const 6 : i32
    %1476 = addi %1474, %1475 : i32
    %1477 = llhd.const 0 : i4
    %1478 = llhd.array_uniform %1477 : !llhd.array<16xi4>
    %1479 = llhd.sig "1479" %1478 : !llhd.array<16xi4>
    %1480 = llhd.shr %index_nodes, %1479, %1476 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %1481 = llhd.extract_element %1480, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %in_tmp21 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1482 = llhd.const 6 : i32
    %1483 = llhd.const 2 : i32
    %1484 = muli %1482, %1483 : i32
    %1485 = llhd.const 0 : i16
    %1486 = llhd.shr %in_tmp21, %1485, %1484 : (i16, i16, i32) -> i16
    %1487 = llhd.extract_slice %1486, 0 : i16 -> i1
    %1488 = llhd.const 1 : i1
    %1489 = llhd.eq %1487, %1488 : i1
    %index_lut13 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1490 = llhd.const 6 : i32
    %1491 = llhd.const 2 : i32
    %1492 = muli %1490, %1491 : i32
    %1493 = llhd.const 0 : i4
    %1494 = llhd.array_uniform %1493 : !llhd.array<16xi4>
    %1495 = llhd.shr %index_lut13, %1494, %1492 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1496 = llhd.extract_element %1495, 0 : !llhd.array<16xi4> -> i4
    %index_lut14 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1497 = llhd.const 6 : i32
    %1498 = llhd.const 2 : i32
    %1499 = muli %1497, %1498 : i32
    %1500 = llhd.const 1 : i32
    %1501 = addi %1499, %1500 : i32
    %1502 = llhd.const 0 : i4
    %1503 = llhd.array_uniform %1502 : !llhd.array<16xi4>
    %1504 = llhd.shr %index_lut14, %1503, %1501 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1505 = llhd.extract_element %1504, 0 : !llhd.array<16xi4> -> i4
    %1506 = llhd.array %1505, %1496 : !llhd.array<2xi4>
    %1507 = llhd.dyn_extract_element %1506, %1489 : (!llhd.array<2xi4>, i1) -> i4
    %1508 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1481, %1507 after %1508 : !llhd.sig<i4>
    %1509 = llhd.const 1 : i32
    %1510 = llhd.const 3 : i32
    %1511 = llhd.const 0 : i32
    %1512 = llhd.shl %1509, %1511, %1510 : (i32, i32, i32) -> i32
    %1513 = llhd.const 1 : i32
    %1514 = subi %1512, %1513 : i32
    %1515 = llhd.const 7 : i32
    %1516 = addi %1514, %1515 : i32
    %1517 = llhd.const 0 : i16
    %1518 = llhd.sig "1518" %1517 : i16
    %1519 = llhd.shr %sel_nodes, %1518, %1516 : (!llhd.sig<i16>, !llhd.sig<i16>, i32) -> !llhd.sig<i16>
    %1520 = llhd.extract_slice %1519, 0 : !llhd.sig<i16> -> !llhd.sig<i1>
    %in_tmp22 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1521 = llhd.const 7 : i32
    %1522 = llhd.const 2 : i32
    %1523 = muli %1521, %1522 : i32
    %1524 = llhd.const 0 : i16
    %1525 = llhd.shr %in_tmp22, %1524, %1523 : (i16, i16, i32) -> i16
    %1526 = llhd.extract_slice %1525, 0 : i16 -> i1
    %in_tmp23 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1527 = llhd.const 7 : i32
    %1528 = llhd.const 2 : i32
    %1529 = muli %1527, %1528 : i32
    %1530 = llhd.const 1 : i32
    %1531 = addi %1529, %1530 : i32
    %1532 = llhd.const 0 : i16
    %1533 = llhd.shr %in_tmp23, %1532, %1531 : (i16, i16, i32) -> i16
    %1534 = llhd.extract_slice %1533, 0 : i16 -> i1
    %1535 = llhd.or %1526, %1534 : i1
    %1536 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1520, %1535 after %1536 : !llhd.sig<i1>
    %1537 = llhd.const 1 : i32
    %1538 = llhd.const 3 : i32
    %1539 = llhd.const 0 : i32
    %1540 = llhd.shl %1537, %1539, %1538 : (i32, i32, i32) -> i32
    %1541 = llhd.const 1 : i32
    %1542 = subi %1540, %1541 : i32
    %1543 = llhd.const 7 : i32
    %1544 = addi %1542, %1543 : i32
    %1545 = llhd.const 0 : i4
    %1546 = llhd.array_uniform %1545 : !llhd.array<16xi4>
    %1547 = llhd.sig "1547" %1546 : !llhd.array<16xi4>
    %1548 = llhd.shr %index_nodes, %1547, %1544 : (!llhd.sig<!llhd.array<16xi4>>, !llhd.sig<!llhd.array<16xi4>>, i32) -> !llhd.sig<!llhd.array<16xi4>>
    %1549 = llhd.extract_element %1548, 0 : !llhd.sig<!llhd.array<16xi4>> -> !llhd.sig<i4>
    %in_tmp24 = llhd.prb %in_tmp : !llhd.sig<i16>
    %1550 = llhd.const 7 : i32
    %1551 = llhd.const 2 : i32
    %1552 = muli %1550, %1551 : i32
    %1553 = llhd.const 0 : i16
    %1554 = llhd.shr %in_tmp24, %1553, %1552 : (i16, i16, i32) -> i16
    %1555 = llhd.extract_slice %1554, 0 : i16 -> i1
    %1556 = llhd.const 1 : i1
    %1557 = llhd.eq %1555, %1556 : i1
    %index_lut15 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1558 = llhd.const 7 : i32
    %1559 = llhd.const 2 : i32
    %1560 = muli %1558, %1559 : i32
    %1561 = llhd.const 0 : i4
    %1562 = llhd.array_uniform %1561 : !llhd.array<16xi4>
    %1563 = llhd.shr %index_lut15, %1562, %1560 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1564 = llhd.extract_element %1563, 0 : !llhd.array<16xi4> -> i4
    %index_lut16 = llhd.prb %index_lut : !llhd.sig<!llhd.array<16xi4>>
    %1565 = llhd.const 7 : i32
    %1566 = llhd.const 2 : i32
    %1567 = muli %1565, %1566 : i32
    %1568 = llhd.const 1 : i32
    %1569 = addi %1567, %1568 : i32
    %1570 = llhd.const 0 : i4
    %1571 = llhd.array_uniform %1570 : !llhd.array<16xi4>
    %1572 = llhd.shr %index_lut16, %1571, %1569 : (!llhd.array<16xi4>, !llhd.array<16xi4>, i32) -> !llhd.array<16xi4>
    %1573 = llhd.extract_element %1572, 0 : !llhd.array<16xi4> -> i4
    %1574 = llhd.array %1573, %1564 : !llhd.array<2xi4>
    %1575 = llhd.dyn_extract_element %1574, %1557 : (!llhd.array<2xi4>, i1) -> i4
    %1576 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %1549, %1575 after %1576 : !llhd.sig<i4>
    llhd.inst "inst" @lzc.param1.initial.262.1() -> () : () -> ()
    llhd.inst "inst1" @lzc.param1.always_comb.271.1(%in_i) -> (%in_tmp) : (!llhd.sig<i16>) -> (!llhd.sig<i16>)
}

llhd.proc @lfsr_16bit.param37.always_comb.1836.37(%en_i: !llhd.sig<i1>, %shift_q: !llhd.sig<i16>) -> (%out_o: !llhd.sig<i16> , %shift_d: !llhd.sig<i16> ) {
    br ^0
^0:
    br ^body
^body:
    %1 = llhd.const 0 : i1
    %shift_in = llhd.var %1 : i1
    %shift_q1 = llhd.prb %shift_q : !llhd.sig<i16>
    %2 = llhd.const 15 : i32
    %3 = llhd.const 0 : i16
    %4 = llhd.shr %shift_q1, %3, %2 : (i16, i16, i32) -> i16
    %5 = llhd.extract_slice %4, 0 : i16 -> i1
    %shift_q2 = llhd.prb %shift_q : !llhd.sig<i16>
    %6 = llhd.const 12 : i32
    %7 = llhd.const 0 : i16
    %8 = llhd.shr %shift_q2, %7, %6 : (i16, i16, i32) -> i16
    %9 = llhd.extract_slice %8, 0 : i16 -> i1
    %10 = llhd.xor %5, %9 : i1
    %shift_q3 = llhd.prb %shift_q : !llhd.sig<i16>
    %11 = llhd.const 5 : i32
    %12 = llhd.const 0 : i16
    %13 = llhd.shr %shift_q3, %12, %11 : (i16, i16, i32) -> i16
    %14 = llhd.extract_slice %13, 0 : i16 -> i1
    %15 = llhd.xor %10, %14 : i1
    %shift_q4 = llhd.prb %shift_q : !llhd.sig<i16>
    %16 = llhd.const 1 : i32
    %17 = llhd.const 0 : i16
    %18 = llhd.shr %shift_q4, %17, %16 : (i16, i16, i32) -> i16
    %19 = llhd.extract_slice %18, 0 : i16 -> i1
    %20 = llhd.xor %15, %19 : i1
    %21 = llhd.not %20 : i1
    llhd.store %shift_in, %21 : !llhd.ptr<i1>
    %shift_q5 = llhd.prb %shift_q : !llhd.sig<i16>
    %22 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %shift_d, %shift_q5 after %22 : !llhd.sig<i16>
    %en_i1 = llhd.prb %en_i : !llhd.sig<i1>
    cond_br %en_i1, ^if_true, ^if_false
^if_false:
    br ^if_exit
^if_true:
    %23 = llhd.const 0 : i16
    %shift_in1 = llhd.load %shift_in : !llhd.ptr<i1>
    %24 = llhd.insert_slice %23, %shift_in1, 0 : i16, i1
    %shift_q6 = llhd.prb %shift_q : !llhd.sig<i16>
    %25 = llhd.const 0 : i1
    %26 = llhd.const 0 : i16
    %27 = llhd.shr %shift_q6, %26, %25 : (i16, i16, i1) -> i16
    %28 = llhd.extract_slice %27, 0 : i16 -> i15
    %29 = llhd.insert_slice %24, %28, 1 : i16, i15
    %30 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %shift_d, %29 after %30 : !llhd.sig<i16>
    br ^if_exit
^check:
    llhd.wait (%en_i, %shift_q : !llhd.sig<i1>, !llhd.sig<i16>), ^body
^if_exit:
    %shift_q7 = llhd.prb %shift_q : !llhd.sig<i16>
    %31 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %out_o, %shift_q7 after %31 : !llhd.sig<i16>
    br ^check
}

llhd.proc @lfsr_16bit.param37.always_ff.1837.37(%clk_i: !llhd.sig<i1>, %rst_ni: !llhd.sig<i1>, %shift_d: !llhd.sig<i16>) -> (%shift_q: !llhd.sig<i16> ) {
    br ^0
^0:
    br ^init
^init:
    %clk_i1 = llhd.prb %clk_i : !llhd.sig<i1>
    %rst_ni1 = llhd.prb %rst_ni : !llhd.sig<i1>
    llhd.wait (%clk_i, %rst_ni : !llhd.sig<i1>, !llhd.sig<i1>), ^check
^check:
    %clk_i2 = llhd.prb %clk_i : !llhd.sig<i1>
    %1 = llhd.const 0 : i1
    %2 = llhd.eq %clk_i1, %1 : i1
    %3 = llhd.neq %clk_i2, %1 : i1
    %posedge = llhd.and %2, %3 : i1
    %rst_ni2 = llhd.prb %rst_ni : !llhd.sig<i1>
    %4 = llhd.const 0 : i1
    %5 = llhd.neq %rst_ni1, %4 : i1
    %6 = llhd.eq %rst_ni2, %4 : i1
    %negedge = llhd.and %6, %5 : i1
    %event_or = llhd.or %posedge, %negedge : i1
    cond_br %event_or, ^event, ^init
^event:
    %rst_ni3 = llhd.prb %rst_ni : !llhd.sig<i1>
    %7 = llhd.not %rst_ni3 : i1
    cond_br %7, ^if_true, ^if_false
^if_false:
    %shift_d1 = llhd.prb %shift_d : !llhd.sig<i16>
    %8 = llhd.const #llhd.time<0s, 1d, 0e> : !llhd.time
    llhd.drv %shift_q, %shift_d1 after %8 : !llhd.sig<i16>
    br ^if_exit
^if_true:
    %9 = llhd.const 1 : i32
    %10 = llhd.extract_slice %9, 0 : i32 -> i16
    %11 = llhd.const #llhd.time<0s, 1d, 0e> : !llhd.time
    llhd.drv %shift_q, %10 after %11 : !llhd.sig<i16>
    br ^if_exit
^if_exit:
    br ^0
}

llhd.proc @lfsr_16bit.param37.initial.1838.37() -> () {
    br ^0
^0:
    llhd.halt
}

llhd.entity @lfsr_16bit.param37(%clk_i: !llhd.sig<i1>, %rst_ni: !llhd.sig<i1>, %en_i: !llhd.sig<i1>) -> (%out_o: !llhd.sig<i16> ) {
    %0 = llhd.const 0 : i16
    %shift_d = llhd.sig "shift_d" %0 : i16
    %1 = llhd.const 0 : i16
    %shift_q = llhd.sig "shift_q" %1 : i16
    llhd.inst "inst" @lfsr_16bit.param37.always_comb.1836.37(%en_i, %shift_q) -> (%out_o, %shift_d) : (!llhd.sig<i1>, !llhd.sig<i16>) -> (!llhd.sig<i16>, !llhd.sig<i16>)
    llhd.inst "inst1" @lfsr_16bit.param37.always_ff.1837.37(%clk_i, %rst_ni, %shift_d) -> (%shift_q) : (!llhd.sig<i1>, !llhd.sig<i1>, !llhd.sig<i16>) -> (!llhd.sig<i16>)
    llhd.inst "inst2" @lfsr_16bit.param37.initial.1838.37() -> () : () -> ()
}

llhd.proc @lzc_tb.initial.238.0() -> (%clk_i: !llhd.sig<i1> , %rst_ni: !llhd.sig<i1> ) {
    br ^0
^0:
    %1 = llhd.const 0 : i32
    %2 = llhd.extract_slice %1, 0 : i32 -> i1
    %3 = llhd.const #llhd.time<1ns, 0d, 0e> : !llhd.time
    llhd.drv %rst_ni, %2 after %3 : !llhd.sig<i1>
    %4 = llhd.const 1 : i32
    %5 = llhd.extract_slice %4, 0 : i32 -> i1
    %6 = llhd.const #llhd.time<2ns, 0d, 0e> : !llhd.time
    llhd.drv %rst_ni, %5 after %6 : !llhd.sig<i1>
    %7 = llhd.const #llhd.time<4ns, 0d, 0e> : !llhd.time
    llhd.wait  for %7, ^8
^8:
    %9 = llhd.const 1000000 : i32
    %loop_count = llhd.var %9 : i32
    br ^loop_body
^loop_body:
    %10 = llhd.load %loop_count : !llhd.ptr<i32>
    %11 = llhd.const 0 : i32
    %12 = llhd.neq %10, %11 : i32
    cond_br %12, ^loop_continue, ^loop_exit
^loop_exit:
    llhd.halt
^loop_continue:
    %13 = llhd.const 1 : i32
    %14 = llhd.extract_slice %13, 0 : i32 -> i1
    %15 = llhd.const #llhd.time<1ns, 0d, 0e> : !llhd.time
    llhd.drv %clk_i, %14 after %15 : !llhd.sig<i1>
    %16 = llhd.const 0 : i32
    %17 = llhd.extract_slice %16, 0 : i32 -> i1
    %18 = llhd.const #llhd.time<2ns, 0d, 0e> : !llhd.time
    llhd.drv %clk_i, %17 after %18 : !llhd.sig<i1>
    %19 = llhd.const #llhd.time<2ns, 0d, 0e> : !llhd.time
    llhd.wait  for %19, ^20
^20:
    %21 = llhd.load %loop_count : !llhd.ptr<i32>
    %22 = llhd.const 1 : i32
    %23 = subi %21, %22 : i32
    llhd.store %loop_count, %23 : !llhd.ptr<i32>
    br ^loop_body
}

llhd.entity @lzc_tb() -> () {
    %0 = llhd.const 0 : i16
    %in_i = llhd.sig "in_i" %0 : i16
    %1 = llhd.const 0 : i4
    %cnt_o = llhd.sig "cnt_o" %1 : i4
    %2 = llhd.const 0 : i1
    %empty_o = llhd.sig "empty_o" %2 : i1
    %3 = llhd.const 0 : i1
    %clk_i = llhd.sig "clk_i" %3 : i1
    %4 = llhd.const 1 : i1
    %rst_ni = llhd.sig "rst_ni" %4 : i1
    %in_i1 = llhd.prb %in_i : !llhd.sig<i16>
    %5 = llhd.const 0 : i16
    %6 = llhd.sig "6" %5 : i16
    %7 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %6, %in_i1 after %7 : !llhd.sig<i16>
    llhd.inst "inst" @lzc.param1(%6) -> (%cnt_o, %empty_o) : (!llhd.sig<i16>) -> (!llhd.sig<i4>, !llhd.sig<i1>)
    %clk_i1 = llhd.prb %clk_i : !llhd.sig<i1>
    %8 = llhd.const 0 : i1
    %9 = llhd.sig "9" %8 : i1
    %10 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %9, %clk_i1 after %10 : !llhd.sig<i1>
    %rst_ni1 = llhd.prb %rst_ni : !llhd.sig<i1>
    %11 = llhd.const 0 : i1
    %12 = llhd.sig "12" %11 : i1
    %13 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %12, %rst_ni1 after %13 : !llhd.sig<i1>
    %14 = llhd.const 1 : i1
    %15 = llhd.const 0 : i1
    %16 = llhd.sig "16" %15 : i1
    %17 = llhd.const #llhd.time<0s, 0d, 1e> : !llhd.time
    llhd.drv %16, %14 after %17 : !llhd.sig<i1>
    llhd.inst "inst1" @lfsr_16bit.param37(%9, %12, %16) -> (%in_i) : (!llhd.sig<i1>, !llhd.sig<i1>, !llhd.sig<i1>) -> (!llhd.sig<i16>)
    llhd.inst "inst2" @lzc_tb.initial.238.0() -> (%clk_i, %rst_ni) : () -> (!llhd.sig<i1>, !llhd.sig<i1>)
}
