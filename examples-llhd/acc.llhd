proc %acc.param1.always_ff.139.1 (i32$ %d, i1$ %clk) -> (i32$ %q) {
init:
    %clk1 = prb i1$ %clk
    wait %check, %clk
check:
    %clk2 = prb i1$ %clk
    %0 = const i1 0
    %1 = eq i1 %clk1, %0
    %2 = neq i1 %clk2, %0
    %posedge = and i1 %1, %2
    br %posedge, %init, %event
event:
    %d1 = prb i32$ %d
    %3 = const time 1ns
    drv i32$ %q, %d1, %3
    br %init
}

proc %acc.param1.always_comb.176.1 (i32$ %x, i32$ %en, i32$ %q) -> (i32$ %d) {
body:
    %q1 = prb i32$ %q
    %0 = const time 2ns
    drv i32$ %d, %q1, %0
    %en1 = prb i32$ %en
    %1 = const i32 0
    %2 = neq i32 %en1, %1
    br %2, %check, %if_true
check:
    wait %body, %x, %en, %q
if_true:
    %x1 = prb i32$ %x
    %3 = add i32 %q1, %x1
    drv i32$ %d, %3, %0
    br %check
}

entity @acc.param1 (i1$ %clk, i32$ %x, i32$ %en) -> (i32$ %q) {
    %0 = const i32 0
    %d = sig i32 %0
    inst %acc.param1.always_ff.139.1 (i32$ %d, i1$ %clk) -> (i32$ %q)
    inst %acc.param1.always_comb.176.1 (i32$ %x, i32$ %en, i32$ %q) -> (i32$ %d)
}

proc %acc_tb.initial.90.0 () -> (i1$ %clk, i1$ %en, i32$ %x) {
0:
    %1 = const i32 0
    %2 = exts i1, i32 %1, 0, 1
    %3 = const time 2ns
    drv i1$ %en, %2, %3
    br %loop_body
loop_body:
    %i = phi i32 [%4, %5], [%1, %0]
    drv i32$ %x, %i, %3
    %6 = const i1 1
    %7 = const time 1ns
    drv i1$ %clk, %6, %7
    %8 = const i1 0
    drv i1$ %clk, %8, %3
    wait %5 for %3
loop_exit:
    halt
5:
    %9 = const i32 1
    %4 = add i32 %i, %9
    %10 = const i32 1337
    %11 = ult i32 %4, %10
    %12 = const i1 0
    %13 = neq i1 %11, %12
    br %13, %loop_exit, %loop_body
}

entity @acc_tb () -> () {
    %0 = const i1 0
    %clk = sig i1 %0
    %en = sig i1 %0
    %1 = const i32 0
    %x = sig i32 %1
    %i_dut.clk.default = sig i1 %0
    %i_dut.x.default = sig i32 %1
    %i_dut.en.default = sig i32 %1
    %i_dut.q.default = sig i32 %1
    inst @acc.param1 (i1$ %i_dut.clk.default, i32$ %i_dut.x.default, i32$ %i_dut.en.default) -> (i32$ %i_dut.q.default)
    inst %acc_tb.initial.90.0 () -> (i1$ %clk, i1$ %en, i32$ %x)
}
