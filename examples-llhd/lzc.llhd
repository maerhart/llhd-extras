proc %lzc.param1.initial.69.1 () -> () {
0:
    halt
}

proc %lzc.param1.always_comb.217.1 (i16$ %in_i) -> (i16$ %in_tmp) {
body:
    %0 = const i32 0
    br %loop_body
check:
    wait %body, %in_i
loop_body:
    %i = phi i32 [%1, %loop_continue], [%0, %body]
    %2 = const i32 16
    %3 = slt i32 %i, %2
    br %3, %check, %loop_continue
loop_continue:
    %4 = const i16 0
    %5 = sig i16 %4
    %6 = shr i16$ %in_tmp, i16$ %5, i32 %i
    %7 = exts i1$, i16$ %6, 0, 1
    %in_i1 = prb i16$ %in_i
    %8 = const i32 15
    %9 = sub i32 %8, %i
    %10 = shr i16 %in_i1, i16 %4, i32 %9
    %11 = exts i1, i16 %10, 0, 1
    %12 = shr i16 %in_i1, i16 %4, i32 %i
    %13 = exts i1, i16 %12, 0, 1
    %14 = [i1 %13, %11]
    %15 = extf i1, [2 x i1] %14, 1
    %16 = const time 0s 1e
    drv i1$ %7, %15, %16
    %17 = const i32 1
    %1 = add i32 %i, %17
    br %loop_body
}

entity @lzc.param1 (i16$ %in_i) -> (i4$ %cnt_o, i1$ %empty_o) {
    %0 = const i4 0
    %1 = [i4 %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0]
    %index_lut = sig [16 x i4] %1
    %2 = const i16 0
    %sel_nodes = sig i16 %2
    %index_nodes = sig [16 x i4] %1
    %in_tmp = sig i16 %2
    %index_nodes1 = prb [16 x i4]$ %index_nodes
    %3 = extf i4, [16 x i4] %index_nodes1, 0
    %4 = [i4 %0, %3]
    %5 = extf i4, [2 x i4] %4, 1
    %6 = const time 0s 1e
    drv i4$ %cnt_o, %5, %6
    %sel_nodes1 = prb i16$ %sel_nodes
    %7 = exts i1, i16 %sel_nodes1, 0, 1
    %8 = not i1 %7
    %in_i1 = prb i16$ %in_i
    %9 = exts i1, i16 %in_i1, 0, 1
    %10 = exts i1, i16 %in_i1, 1, 1
    %11 = or i1 %9, %10
    %12 = exts i1, i16 %in_i1, 2, 1
    %13 = or i1 %11, %12
    %14 = exts i1, i16 %in_i1, 3, 1
    %15 = or i1 %13, %14
    %16 = exts i1, i16 %in_i1, 4, 1
    %17 = or i1 %15, %16
    %18 = exts i1, i16 %in_i1, 5, 1
    %19 = or i1 %17, %18
    %20 = exts i1, i16 %in_i1, 6, 1
    %21 = or i1 %19, %20
    %22 = exts i1, i16 %in_i1, 7, 1
    %23 = or i1 %21, %22
    %24 = exts i1, i16 %in_i1, 8, 1
    %25 = or i1 %23, %24
    %26 = exts i1, i16 %in_i1, 9, 1
    %27 = or i1 %25, %26
    %28 = exts i1, i16 %in_i1, 10, 1
    %29 = or i1 %27, %28
    %30 = exts i1, i16 %in_i1, 11, 1
    %31 = or i1 %29, %30
    %32 = exts i1, i16 %in_i1, 12, 1
    %33 = or i1 %31, %32
    %34 = exts i1, i16 %in_i1, 13, 1
    %35 = or i1 %33, %34
    %36 = exts i1, i16 %in_i1, 14, 1
    %37 = or i1 %35, %36
    %38 = exts i1, i16 %in_i1, 15, 1
    %39 = or i1 %37, %38
    %40 = not i1 %39
    %41 = [i1 %40, %8]
    %42 = extf i1, [2 x i1] %41, 1
    drv i1$ %empty_o, %42, %6
    %43 = extf i4$, [16 x i4]$ %index_lut, 0
    drv i4$ %43, %0, %6
    %44 = const i32 1
    %45 = [16 x i4 %0]
    %46 = sig [16 x i4] %45
    %47 = shr [16 x i4]$ %index_lut, [16 x i4]$ %46, i32 %44
    %48 = extf i4$, [16 x i4]$ %47, 0
    %49 = const i4 1
    drv i4$ %48, %49, %6
    %50 = const i32 2
    %51 = sig [16 x i4] %45
    %52 = shr [16 x i4]$ %index_lut, [16 x i4]$ %51, i32 %50
    %53 = extf i4$, [16 x i4]$ %52, 0
    %54 = const i4 2
    drv i4$ %53, %54, %6
    %55 = const i32 3
    %56 = sig [16 x i4] %45
    %57 = shr [16 x i4]$ %index_lut, [16 x i4]$ %56, i32 %55
    %58 = extf i4$, [16 x i4]$ %57, 0
    %59 = const i4 3
    drv i4$ %58, %59, %6
    %60 = const i32 4
    %61 = sig [16 x i4] %45
    %62 = shr [16 x i4]$ %index_lut, [16 x i4]$ %61, i32 %60
    %63 = extf i4$, [16 x i4]$ %62, 0
    %64 = const i4 4
    drv i4$ %63, %64, %6
    %65 = const i32 5
    %66 = sig [16 x i4] %45
    %67 = shr [16 x i4]$ %index_lut, [16 x i4]$ %66, i32 %65
    %68 = extf i4$, [16 x i4]$ %67, 0
    %69 = const i4 5
    drv i4$ %68, %69, %6
    %70 = const i32 6
    %71 = sig [16 x i4] %45
    %72 = shr [16 x i4]$ %index_lut, [16 x i4]$ %71, i32 %70
    %73 = extf i4$, [16 x i4]$ %72, 0
    %74 = const i4 6
    drv i4$ %73, %74, %6
    %75 = const i32 7
    %76 = sig [16 x i4] %45
    %77 = shr [16 x i4]$ %index_lut, [16 x i4]$ %76, i32 %75
    %78 = extf i4$, [16 x i4]$ %77, 0
    %79 = const i4 7
    drv i4$ %78, %79, %6
    %80 = const i32 8
    %81 = sig [16 x i4] %45
    %82 = shr [16 x i4]$ %index_lut, [16 x i4]$ %81, i32 %80
    %83 = extf i4$, [16 x i4]$ %82, 0
    %84 = const i4 8
    drv i4$ %83, %84, %6
    %85 = const i32 9
    %86 = sig [16 x i4] %45
    %87 = shr [16 x i4]$ %index_lut, [16 x i4]$ %86, i32 %85
    %88 = extf i4$, [16 x i4]$ %87, 0
    %89 = const i4 9
    drv i4$ %88, %89, %6
    %90 = const i32 10
    %91 = sig [16 x i4] %45
    %92 = shr [16 x i4]$ %index_lut, [16 x i4]$ %91, i32 %90
    %93 = extf i4$, [16 x i4]$ %92, 0
    %94 = const i4 10
    drv i4$ %93, %94, %6
    %95 = const i32 11
    %96 = sig [16 x i4] %45
    %97 = shr [16 x i4]$ %index_lut, [16 x i4]$ %96, i32 %95
    %98 = extf i4$, [16 x i4]$ %97, 0
    %99 = const i4 11
    drv i4$ %98, %99, %6
    %100 = const i32 12
    %101 = sig [16 x i4] %45
    %102 = shr [16 x i4]$ %index_lut, [16 x i4]$ %101, i32 %100
    %103 = extf i4$, [16 x i4]$ %102, 0
    %104 = const i4 12
    drv i4$ %103, %104, %6
    %105 = const i32 13
    %106 = sig [16 x i4] %45
    %107 = shr [16 x i4]$ %index_lut, [16 x i4]$ %106, i32 %105
    %108 = extf i4$, [16 x i4]$ %107, 0
    %109 = const i4 13
    drv i4$ %108, %109, %6
    %110 = const i32 14
    %111 = sig [16 x i4] %45
    %112 = shr [16 x i4]$ %index_lut, [16 x i4]$ %111, i32 %110
    %113 = extf i4$, [16 x i4]$ %112, 0
    %114 = const i4 14
    drv i4$ %113, %114, %6
    %115 = const i32 15
    %116 = sig [16 x i4] %45
    %117 = shr [16 x i4]$ %index_lut, [16 x i4]$ %116, i32 %115
    %118 = extf i4$, [16 x i4]$ %117, 0
    %119 = const i4 15
    drv i4$ %118, %119, %6
    %120 = exts i1$, i16$ %sel_nodes, 0, 1
    %121 = exts i15, i16 %sel_nodes1, 1, 15
    %122 = inss i16 %2, i15 %121, 0, 15
    %123 = exts i1, i16 %122, 0, 1
    %124 = exts i14, i16 %sel_nodes1, 2, 14
    %125 = inss i16 %2, i14 %124, 0, 14
    %126 = exts i1, i16 %125, 0, 1
    %127 = or i1 %123, %126
    drv i1$ %120, %127, %6
    %128 = extf i4$, [16 x i4]$ %index_nodes, 0
    %129 = const i1 1
    %130 = eq i1 %123, %129
    %131 = const i1 0
    %132 = neq i1 %130, %131
    %133 = exts [1 x i4], [16 x i4] %45, 0, 1
    %134 = exts [15 x i4], [16 x i4] %index_nodes1, 1, 15
    %135 = inss [16 x i4] %45, [1 x i4] %133, 15, 1
    %136 = inss [16 x i4] %135, [15 x i4] %134, 0, 15
    %137 = extf i4, [16 x i4] %136, 0
    %138 = exts [2 x i4], [16 x i4] %45, 0, 2
    %139 = exts [14 x i4], [16 x i4] %index_nodes1, 2, 14
    %140 = inss [16 x i4] %45, [2 x i4] %138, 14, 2
    %141 = inss [16 x i4] %140, [14 x i4] %139, 0, 14
    %142 = extf i4, [16 x i4] %141, 0
    %143 = [i4 %142, %137]
    %144 = mux [2 x i4] %143, i1 %132
    drv i4$ %128, %144, %6
    %145 = sig i16 %2
    %146 = shr i16$ %sel_nodes, i16$ %145, i32 %44
    %147 = exts i1$, i16$ %146, 0, 1
    %148 = exts i13, i16 %sel_nodes1, 3, 13
    %149 = inss i16 %2, i13 %148, 0, 13
    %150 = exts i1, i16 %149, 0, 1
    %151 = exts i12, i16 %sel_nodes1, 4, 12
    %152 = inss i16 %2, i12 %151, 0, 12
    %153 = exts i1, i16 %152, 0, 1
    %154 = or i1 %150, %153
    drv i1$ %147, %154, %6
    %155 = sig [16 x i4] %45
    %156 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %155, i32 %44
    %157 = extf i4$, [16 x i4]$ %156, 0
    %158 = eq i1 %150, %129
    %159 = neq i1 %158, %131
    %160 = exts [3 x i4], [16 x i4] %45, 0, 3
    %161 = exts [13 x i4], [16 x i4] %index_nodes1, 3, 13
    %162 = inss [16 x i4] %45, [3 x i4] %160, 13, 3
    %163 = inss [16 x i4] %162, [13 x i4] %161, 0, 13
    %164 = extf i4, [16 x i4] %163, 0
    %165 = exts [4 x i4], [16 x i4] %45, 0, 4
    %166 = exts [12 x i4], [16 x i4] %index_nodes1, 4, 12
    %167 = inss [16 x i4] %45, [4 x i4] %165, 12, 4
    %168 = inss [16 x i4] %167, [12 x i4] %166, 0, 12
    %169 = extf i4, [16 x i4] %168, 0
    %170 = [i4 %169, %164]
    %171 = mux [2 x i4] %170, i1 %159
    drv i4$ %157, %171, %6
    %172 = sig i16 %2
    %173 = shr i16$ %sel_nodes, i16$ %172, i32 %50
    %174 = exts i1$, i16$ %173, 0, 1
    %175 = exts i11, i16 %sel_nodes1, 5, 11
    %176 = inss i16 %2, i11 %175, 0, 11
    %177 = exts i1, i16 %176, 0, 1
    %178 = exts i10, i16 %sel_nodes1, 6, 10
    %179 = inss i16 %2, i10 %178, 0, 10
    %180 = exts i1, i16 %179, 0, 1
    %181 = or i1 %177, %180
    drv i1$ %174, %181, %6
    %182 = sig [16 x i4] %45
    %183 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %182, i32 %50
    %184 = extf i4$, [16 x i4]$ %183, 0
    %185 = eq i1 %177, %129
    %186 = neq i1 %185, %131
    %187 = exts [5 x i4], [16 x i4] %45, 0, 5
    %188 = exts [11 x i4], [16 x i4] %index_nodes1, 5, 11
    %189 = inss [16 x i4] %45, [5 x i4] %187, 11, 5
    %190 = inss [16 x i4] %189, [11 x i4] %188, 0, 11
    %191 = extf i4, [16 x i4] %190, 0
    %192 = exts [6 x i4], [16 x i4] %45, 0, 6
    %193 = exts [10 x i4], [16 x i4] %index_nodes1, 6, 10
    %194 = inss [16 x i4] %45, [6 x i4] %192, 10, 6
    %195 = inss [16 x i4] %194, [10 x i4] %193, 0, 10
    %196 = extf i4, [16 x i4] %195, 0
    %197 = [i4 %196, %191]
    %198 = mux [2 x i4] %197, i1 %186
    drv i4$ %184, %198, %6
    %199 = sig i16 %2
    %200 = shr i16$ %sel_nodes, i16$ %199, i32 %55
    %201 = exts i1$, i16$ %200, 0, 1
    %202 = exts i9, i16 %sel_nodes1, 7, 9
    %203 = inss i16 %2, i9 %202, 0, 9
    %204 = exts i1, i16 %203, 0, 1
    %205 = exts i8, i16 %sel_nodes1, 8, 8
    %206 = inss i16 %2, i8 %205, 0, 8
    %207 = exts i1, i16 %206, 0, 1
    %208 = or i1 %204, %207
    drv i1$ %201, %208, %6
    %209 = sig [16 x i4] %45
    %210 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %209, i32 %55
    %211 = extf i4$, [16 x i4]$ %210, 0
    %212 = eq i1 %204, %129
    %213 = neq i1 %212, %131
    %214 = exts [7 x i4], [16 x i4] %45, 0, 7
    %215 = exts [9 x i4], [16 x i4] %index_nodes1, 7, 9
    %216 = inss [16 x i4] %45, [7 x i4] %214, 9, 7
    %217 = inss [16 x i4] %216, [9 x i4] %215, 0, 9
    %218 = extf i4, [16 x i4] %217, 0
    %219 = exts [8 x i4], [16 x i4] %45, 0, 8
    %220 = exts [8 x i4], [16 x i4] %index_nodes1, 8, 8
    %221 = inss [16 x i4] %45, [8 x i4] %219, 8, 8
    %222 = inss [16 x i4] %221, [8 x i4] %220, 0, 8
    %223 = extf i4, [16 x i4] %222, 0
    %224 = [i4 %223, %218]
    %225 = mux [2 x i4] %224, i1 %213
    drv i4$ %211, %225, %6
    %226 = sig i16 %2
    %227 = shr i16$ %sel_nodes, i16$ %226, i32 %60
    %228 = exts i1$, i16$ %227, 0, 1
    %229 = exts i7, i16 %sel_nodes1, 9, 7
    %230 = inss i16 %2, i7 %229, 0, 7
    %231 = exts i1, i16 %230, 0, 1
    %232 = exts i6, i16 %sel_nodes1, 10, 6
    %233 = inss i16 %2, i6 %232, 0, 6
    %234 = exts i1, i16 %233, 0, 1
    %235 = or i1 %231, %234
    drv i1$ %228, %235, %6
    %236 = sig [16 x i4] %45
    %237 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %236, i32 %60
    %238 = extf i4$, [16 x i4]$ %237, 0
    %239 = eq i1 %231, %129
    %240 = neq i1 %239, %131
    %241 = exts [9 x i4], [16 x i4] %45, 0, 9
    %242 = exts [7 x i4], [16 x i4] %index_nodes1, 9, 7
    %243 = inss [16 x i4] %45, [9 x i4] %241, 7, 9
    %244 = inss [16 x i4] %243, [7 x i4] %242, 0, 7
    %245 = extf i4, [16 x i4] %244, 0
    %246 = exts [10 x i4], [16 x i4] %45, 0, 10
    %247 = exts [6 x i4], [16 x i4] %index_nodes1, 10, 6
    %248 = inss [16 x i4] %45, [10 x i4] %246, 6, 10
    %249 = inss [16 x i4] %248, [6 x i4] %247, 0, 6
    %250 = extf i4, [16 x i4] %249, 0
    %251 = [i4 %250, %245]
    %252 = mux [2 x i4] %251, i1 %240
    drv i4$ %238, %252, %6
    %253 = sig i16 %2
    %254 = shr i16$ %sel_nodes, i16$ %253, i32 %65
    %255 = exts i1$, i16$ %254, 0, 1
    %256 = exts i5, i16 %sel_nodes1, 11, 5
    %257 = inss i16 %2, i5 %256, 0, 5
    %258 = exts i1, i16 %257, 0, 1
    %259 = exts i4, i16 %sel_nodes1, 12, 4
    %260 = inss i16 %2, i4 %259, 0, 4
    %261 = exts i1, i16 %260, 0, 1
    %262 = or i1 %258, %261
    drv i1$ %255, %262, %6
    %263 = sig [16 x i4] %45
    %264 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %263, i32 %65
    %265 = extf i4$, [16 x i4]$ %264, 0
    %266 = eq i1 %258, %129
    %267 = neq i1 %266, %131
    %268 = exts [11 x i4], [16 x i4] %45, 0, 11
    %269 = exts [5 x i4], [16 x i4] %index_nodes1, 11, 5
    %270 = inss [16 x i4] %45, [11 x i4] %268, 5, 11
    %271 = inss [16 x i4] %270, [5 x i4] %269, 0, 5
    %272 = extf i4, [16 x i4] %271, 0
    %273 = exts [12 x i4], [16 x i4] %45, 0, 12
    %274 = exts [4 x i4], [16 x i4] %index_nodes1, 12, 4
    %275 = inss [16 x i4] %45, [12 x i4] %273, 4, 12
    %276 = inss [16 x i4] %275, [4 x i4] %274, 0, 4
    %277 = extf i4, [16 x i4] %276, 0
    %278 = [i4 %277, %272]
    %279 = mux [2 x i4] %278, i1 %267
    drv i4$ %265, %279, %6
    %280 = sig i16 %2
    %281 = shr i16$ %sel_nodes, i16$ %280, i32 %70
    %282 = exts i1$, i16$ %281, 0, 1
    %283 = exts i3, i16 %sel_nodes1, 13, 3
    %284 = inss i16 %2, i3 %283, 0, 3
    %285 = exts i1, i16 %284, 0, 1
    %286 = exts i2, i16 %sel_nodes1, 14, 2
    %287 = inss i16 %2, i2 %286, 0, 2
    %288 = exts i1, i16 %287, 0, 1
    %289 = or i1 %285, %288
    drv i1$ %282, %289, %6
    %290 = sig [16 x i4] %45
    %291 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %290, i32 %70
    %292 = extf i4$, [16 x i4]$ %291, 0
    %293 = eq i1 %285, %129
    %294 = neq i1 %293, %131
    %295 = exts [13 x i4], [16 x i4] %45, 0, 13
    %296 = exts [3 x i4], [16 x i4] %index_nodes1, 13, 3
    %297 = inss [16 x i4] %45, [13 x i4] %295, 3, 13
    %298 = inss [16 x i4] %297, [3 x i4] %296, 0, 3
    %299 = extf i4, [16 x i4] %298, 0
    %300 = exts [14 x i4], [16 x i4] %45, 0, 14
    %301 = exts [2 x i4], [16 x i4] %index_nodes1, 14, 2
    %302 = inss [16 x i4] %45, [14 x i4] %300, 2, 14
    %303 = inss [16 x i4] %302, [2 x i4] %301, 0, 2
    %304 = extf i4, [16 x i4] %303, 0
    %305 = [i4 %304, %299]
    %306 = mux [2 x i4] %305, i1 %294
    drv i4$ %292, %306, %6
    %307 = sig i16 %2
    %308 = shr i16$ %sel_nodes, i16$ %307, i32 %75
    %309 = exts i1$, i16$ %308, 0, 1
    %in_tmp1 = prb i16$ %in_tmp
    %310 = exts i1, i16 %in_tmp1, 0, 1
    %311 = exts i15, i16 %in_tmp1, 1, 15
    %312 = inss i16 %2, i15 %311, 0, 15
    %313 = exts i1, i16 %312, 0, 1
    %314 = or i1 %310, %313
    drv i1$ %309, %314, %6
    %315 = sig [16 x i4] %45
    %316 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %315, i32 %75
    %317 = extf i4$, [16 x i4]$ %316, 0
    %318 = eq i1 %310, %129
    %319 = neq i1 %318, %131
    %index_lut1 = prb [16 x i4]$ %index_lut
    %320 = extf i4, [16 x i4] %index_lut1, 0
    %321 = exts [15 x i4], [16 x i4] %index_lut1, 1, 15
    %322 = inss [16 x i4] %135, [15 x i4] %321, 0, 15
    %323 = extf i4, [16 x i4] %322, 0
    %324 = [i4 %323, %320]
    %325 = mux [2 x i4] %324, i1 %319
    drv i4$ %317, %325, %6
    %326 = sig i16 %2
    %327 = shr i16$ %sel_nodes, i16$ %326, i32 %80
    %328 = exts i1$, i16$ %327, 0, 1
    %329 = exts i14, i16 %in_tmp1, 2, 14
    %330 = inss i16 %2, i14 %329, 0, 14
    %331 = exts i1, i16 %330, 0, 1
    %332 = exts i13, i16 %in_tmp1, 3, 13
    %333 = inss i16 %2, i13 %332, 0, 13
    %334 = exts i1, i16 %333, 0, 1
    %335 = or i1 %331, %334
    drv i1$ %328, %335, %6
    %336 = sig [16 x i4] %45
    %337 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %336, i32 %80
    %338 = extf i4$, [16 x i4]$ %337, 0
    %339 = eq i1 %331, %129
    %340 = neq i1 %339, %131
    %341 = exts [14 x i4], [16 x i4] %index_lut1, 2, 14
    %342 = inss [16 x i4] %140, [14 x i4] %341, 0, 14
    %343 = extf i4, [16 x i4] %342, 0
    %344 = exts [13 x i4], [16 x i4] %index_lut1, 3, 13
    %345 = inss [16 x i4] %162, [13 x i4] %344, 0, 13
    %346 = extf i4, [16 x i4] %345, 0
    %347 = [i4 %346, %343]
    %348 = mux [2 x i4] %347, i1 %340
    drv i4$ %338, %348, %6
    %349 = sig i16 %2
    %350 = shr i16$ %sel_nodes, i16$ %349, i32 %85
    %351 = exts i1$, i16$ %350, 0, 1
    %352 = exts i12, i16 %in_tmp1, 4, 12
    %353 = inss i16 %2, i12 %352, 0, 12
    %354 = exts i1, i16 %353, 0, 1
    %355 = exts i11, i16 %in_tmp1, 5, 11
    %356 = inss i16 %2, i11 %355, 0, 11
    %357 = exts i1, i16 %356, 0, 1
    %358 = or i1 %354, %357
    drv i1$ %351, %358, %6
    %359 = sig [16 x i4] %45
    %360 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %359, i32 %85
    %361 = extf i4$, [16 x i4]$ %360, 0
    %362 = eq i1 %354, %129
    %363 = neq i1 %362, %131
    %364 = exts [12 x i4], [16 x i4] %index_lut1, 4, 12
    %365 = inss [16 x i4] %167, [12 x i4] %364, 0, 12
    %366 = extf i4, [16 x i4] %365, 0
    %367 = exts [11 x i4], [16 x i4] %index_lut1, 5, 11
    %368 = inss [16 x i4] %189, [11 x i4] %367, 0, 11
    %369 = extf i4, [16 x i4] %368, 0
    %370 = [i4 %369, %366]
    %371 = mux [2 x i4] %370, i1 %363
    drv i4$ %361, %371, %6
    %372 = sig i16 %2
    %373 = shr i16$ %sel_nodes, i16$ %372, i32 %90
    %374 = exts i1$, i16$ %373, 0, 1
    %375 = exts i10, i16 %in_tmp1, 6, 10
    %376 = inss i16 %2, i10 %375, 0, 10
    %377 = exts i1, i16 %376, 0, 1
    %378 = exts i9, i16 %in_tmp1, 7, 9
    %379 = inss i16 %2, i9 %378, 0, 9
    %380 = exts i1, i16 %379, 0, 1
    %381 = or i1 %377, %380
    drv i1$ %374, %381, %6
    %382 = sig [16 x i4] %45
    %383 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %382, i32 %90
    %384 = extf i4$, [16 x i4]$ %383, 0
    %385 = eq i1 %377, %129
    %386 = neq i1 %385, %131
    %387 = exts [10 x i4], [16 x i4] %index_lut1, 6, 10
    %388 = inss [16 x i4] %194, [10 x i4] %387, 0, 10
    %389 = extf i4, [16 x i4] %388, 0
    %390 = exts [9 x i4], [16 x i4] %index_lut1, 7, 9
    %391 = inss [16 x i4] %216, [9 x i4] %390, 0, 9
    %392 = extf i4, [16 x i4] %391, 0
    %393 = [i4 %392, %389]
    %394 = mux [2 x i4] %393, i1 %386
    drv i4$ %384, %394, %6
    %395 = sig i16 %2
    %396 = shr i16$ %sel_nodes, i16$ %395, i32 %95
    %397 = exts i1$, i16$ %396, 0, 1
    %398 = exts i8, i16 %in_tmp1, 8, 8
    %399 = inss i16 %2, i8 %398, 0, 8
    %400 = exts i1, i16 %399, 0, 1
    %401 = exts i7, i16 %in_tmp1, 9, 7
    %402 = inss i16 %2, i7 %401, 0, 7
    %403 = exts i1, i16 %402, 0, 1
    %404 = or i1 %400, %403
    drv i1$ %397, %404, %6
    %405 = sig [16 x i4] %45
    %406 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %405, i32 %95
    %407 = extf i4$, [16 x i4]$ %406, 0
    %408 = eq i1 %400, %129
    %409 = neq i1 %408, %131
    %410 = exts [8 x i4], [16 x i4] %index_lut1, 8, 8
    %411 = inss [16 x i4] %221, [8 x i4] %410, 0, 8
    %412 = extf i4, [16 x i4] %411, 0
    %413 = exts [7 x i4], [16 x i4] %index_lut1, 9, 7
    %414 = inss [16 x i4] %243, [7 x i4] %413, 0, 7
    %415 = extf i4, [16 x i4] %414, 0
    %416 = [i4 %415, %412]
    %417 = mux [2 x i4] %416, i1 %409
    drv i4$ %407, %417, %6
    %418 = sig i16 %2
    %419 = shr i16$ %sel_nodes, i16$ %418, i32 %100
    %420 = exts i1$, i16$ %419, 0, 1
    %421 = exts i6, i16 %in_tmp1, 10, 6
    %422 = inss i16 %2, i6 %421, 0, 6
    %423 = exts i1, i16 %422, 0, 1
    %424 = exts i5, i16 %in_tmp1, 11, 5
    %425 = inss i16 %2, i5 %424, 0, 5
    %426 = exts i1, i16 %425, 0, 1
    %427 = or i1 %423, %426
    drv i1$ %420, %427, %6
    %428 = sig [16 x i4] %45
    %429 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %428, i32 %100
    %430 = extf i4$, [16 x i4]$ %429, 0
    %431 = eq i1 %423, %129
    %432 = neq i1 %431, %131
    %433 = exts [6 x i4], [16 x i4] %index_lut1, 10, 6
    %434 = inss [16 x i4] %248, [6 x i4] %433, 0, 6
    %435 = extf i4, [16 x i4] %434, 0
    %436 = exts [5 x i4], [16 x i4] %index_lut1, 11, 5
    %437 = inss [16 x i4] %270, [5 x i4] %436, 0, 5
    %438 = extf i4, [16 x i4] %437, 0
    %439 = [i4 %438, %435]
    %440 = mux [2 x i4] %439, i1 %432
    drv i4$ %430, %440, %6
    %441 = sig i16 %2
    %442 = shr i16$ %sel_nodes, i16$ %441, i32 %105
    %443 = exts i1$, i16$ %442, 0, 1
    %444 = exts i4, i16 %in_tmp1, 12, 4
    %445 = inss i16 %2, i4 %444, 0, 4
    %446 = exts i1, i16 %445, 0, 1
    %447 = exts i3, i16 %in_tmp1, 13, 3
    %448 = inss i16 %2, i3 %447, 0, 3
    %449 = exts i1, i16 %448, 0, 1
    %450 = or i1 %446, %449
    drv i1$ %443, %450, %6
    %451 = sig [16 x i4] %45
    %452 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %451, i32 %105
    %453 = extf i4$, [16 x i4]$ %452, 0
    %454 = eq i1 %446, %129
    %455 = neq i1 %454, %131
    %456 = exts [4 x i4], [16 x i4] %index_lut1, 12, 4
    %457 = inss [16 x i4] %275, [4 x i4] %456, 0, 4
    %458 = extf i4, [16 x i4] %457, 0
    %459 = exts [3 x i4], [16 x i4] %index_lut1, 13, 3
    %460 = inss [16 x i4] %297, [3 x i4] %459, 0, 3
    %461 = extf i4, [16 x i4] %460, 0
    %462 = [i4 %461, %458]
    %463 = mux [2 x i4] %462, i1 %455
    drv i4$ %453, %463, %6
    %464 = sig i16 %2
    %465 = shr i16$ %sel_nodes, i16$ %464, i32 %110
    %466 = exts i1$, i16$ %465, 0, 1
    %467 = exts i2, i16 %in_tmp1, 14, 2
    %468 = inss i16 %2, i2 %467, 0, 2
    %469 = exts i1, i16 %468, 0, 1
    %470 = exts i1, i16 %in_tmp1, 15, 1
    %471 = inss i16 %2, i1 %470, 0, 1
    %472 = exts i1, i16 %471, 0, 1
    %473 = or i1 %469, %472
    drv i1$ %466, %473, %6
    %474 = sig [16 x i4] %45
    %475 = shr [16 x i4]$ %index_nodes, [16 x i4]$ %474, i32 %110
    %476 = extf i4$, [16 x i4]$ %475, 0
    %477 = eq i1 %469, %129
    %478 = neq i1 %477, %131
    %479 = exts [2 x i4], [16 x i4] %index_lut1, 14, 2
    %480 = inss [16 x i4] %302, [2 x i4] %479, 0, 2
    %481 = extf i4, [16 x i4] %480, 0
    %482 = exts [15 x i4], [16 x i4] %45, 0, 15
    %483 = exts [1 x i4], [16 x i4] %index_lut1, 15, 1
    %484 = inss [16 x i4] %45, [15 x i4] %482, 1, 15
    %485 = inss [16 x i4] %484, [1 x i4] %483, 0, 1
    %486 = extf i4, [16 x i4] %485, 0
    %487 = [i4 %486, %481]
    %488 = mux [2 x i4] %487, i1 %478
    drv i4$ %476, %488, %6
    inst %lzc.param1.initial.69.1 () -> ()
    inst %lzc.param1.always_comb.217.1 (i16$ %in_i) -> (i16$ %in_tmp)
}

proc %lfsr_16bit.param37.always_comb.1243.37 (i16$ %shift_q, i1$ %en_i) -> (i16$ %shift_d, i16$ %out_o) {
body:
    %shift_q1 = prb i16$ %shift_q
    %0 = exts i1, i16 %shift_q1, 15, 1
    %1 = const i16 0
    %2 = inss i16 %1, i1 %0, 0, 1
    %3 = exts i1, i16 %2, 0, 1
    %4 = exts i4, i16 %shift_q1, 12, 4
    %5 = inss i16 %1, i4 %4, 0, 4
    %6 = exts i1, i16 %5, 0, 1
    %7 = xor i1 %3, %6
    %8 = exts i11, i16 %shift_q1, 5, 11
    %9 = inss i16 %1, i11 %8, 0, 11
    %10 = exts i1, i16 %9, 0, 1
    %11 = xor i1 %7, %10
    %12 = exts i15, i16 %shift_q1, 1, 15
    %13 = inss i16 %1, i15 %12, 0, 15
    %14 = exts i1, i16 %13, 0, 1
    %15 = xor i1 %11, %14
    %16 = const i1 0
    %17 = neq i1 %15, %16
    %18 = not i1 %17
    %19 = const time 0s 1e
    drv i16$ %shift_d, %shift_q1, %19
    %en_i1 = prb i1$ %en_i
    %20 = neq i1 %en_i1, %16
    br %20, %if_exit, %if_true
if_true:
    %21 = inss i16 %1, i1 %18, 0, 1
    %22 = exts i15, i16 %shift_q1, 0, 15
    %23 = inss i16 %21, i15 %22, 1, 15
    drv i16$ %shift_d, %23, %19
    br %if_exit
if_exit:
    drv i16$ %out_o, %shift_q1, %19
    wait %body, %shift_q, %en_i
}

proc %lfsr_16bit.param37.always_ff.1284.37 (i16$ %shift_d, i1$ %clk_i, i1$ %rst_ni) -> (i16$ %shift_q) {
init:
    %clk_i1 = prb i1$ %clk_i
    %rst_ni1 = prb i1$ %rst_ni
    wait %check, %clk_i, %rst_ni
check:
    %clk_i2 = prb i1$ %clk_i
    %0 = const i1 0
    %1 = eq i1 %clk_i1, %0
    %2 = neq i1 %clk_i2, %0
    %posedge = and i1 %1, %2
    %rst_ni2 = prb i1$ %rst_ni
    %3 = neq i1 %rst_ni1, %0
    %4 = eq i1 %rst_ni2, %0
    %negedge = and i1 %4, %3
    %event_or = or i1 %posedge, %negedge
    br %event_or, %init, %event
event:
    %5 = not i1 %rst_ni2
    %6 = neq i1 %5, %0
    %7 = const time 0s 1d
    br %6, %if_false, %if_true
if_true:
    %8 = const i16 1
    drv i16$ %shift_q, %8, %7
    br %init
if_false:
    %shift_d1 = prb i16$ %shift_d
    drv i16$ %shift_q, %shift_d1, %7
    br %init
}

proc %lfsr_16bit.param37.initial.1302.37 () -> () {
0:
    halt
}

entity @lfsr_16bit.param37 (i1$ %clk_i, i1$ %rst_ni, i1$ %en_i) -> (i16$ %out_o) {
    %0 = const i16 0
    %shift_d = sig i16 %0
    %shift_q = sig i16 %0
    inst %lfsr_16bit.param37.always_comb.1243.37 (i16$ %shift_q, i1$ %en_i) -> (i16$ %shift_d, i16$ %out_o)
    inst %lfsr_16bit.param37.always_ff.1284.37 (i16$ %shift_d, i1$ %clk_i, i1$ %rst_ni) -> (i16$ %shift_q)
    inst %lfsr_16bit.param37.initial.1302.37 () -> ()
}

proc %lzc_tb.initial.1083.0 () -> (i1$ %clk_i, i1$ %rst_ni) {
0:
    %1 = const i1 0
    %2 = const time 1ns
    drv i1$ %rst_ni, %1, %2
    %3 = const i1 1
    %4 = const time 2ns
    drv i1$ %rst_ni, %3, %4
    %5 = const time 4ns
    wait %6 for %5
6:
    %7 = const i32 1000000
    br %loop_body
loop_body:
    %8 = phi i32 [%9, %10], [%7, %6]
    %11 = const i32 0
    %12 = neq i32 %8, %11
    br %12, %loop_exit, %loop_continue
loop_exit:
    halt
loop_continue:
    %13 = const i1 1
    %14 = const time 1ns
    drv i1$ %clk_i, %13, %14
    %15 = const i1 0
    %16 = const time 2ns
    drv i1$ %clk_i, %15, %16
    wait %10 for %16
10:
    %17 = const i32 1
    %9 = sub i32 %8, %17
    br %loop_body
}

entity @lzc_tb () -> () {
    %0 = const i16 0
    %in_i = sig i16 %0
    %1 = const i4 0
    %cnt_o = sig i4 %1
    %2 = const i1 0
    %empty_o = sig i1 %2
    %clk_i = sig i1 %2
    %3 = const i1 1
    %rst_ni = sig i1 %3
    %in_i1 = prb i16$ %in_i
    %4 = sig i16 %0
    %5 = const time 0s 1e
    drv i16$ %4, %in_i1, %5
    inst @lzc.param1 (i16$ %4) -> (i4$ %cnt_o, i1$ %empty_o)
    %clk_i1 = prb i1$ %clk_i
    %6 = sig i1 %2
    drv i1$ %6, %clk_i1, %5
    %rst_ni1 = prb i1$ %rst_ni
    %7 = sig i1 %2
    drv i1$ %7, %rst_ni1, %5
    %8 = sig i1 %2
    drv i1$ %8, %3, %5
    inst @lfsr_16bit.param37 (i1$ %6, i1$ %7, i1$ %8) -> (i16$ %in_i)
    inst %lzc_tb.initial.1083.0 () -> (i1$ %clk_i, i1$ %rst_ni)
}
